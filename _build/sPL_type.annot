"sPL_type.ml" 9 82 86 "sPL_type.ml" 9 82 104
type(
  bool ref
)
ident(
  def tail_optimize_flag "sPL_type.ml" 10 117 117 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 9 82 107 "sPL_type.ml" 9 82 110
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"sPL_type.ml" 9 82 111 "sPL_type.ml" 9 82 116
type(
  bool
)
"sPL_type.ml" 9 82 107 "sPL_type.ml" 9 82 116
type(
  bool ref
)
"sPL_type.ml" 10 117 121 "sPL_type.ml" 10 117 136
type(
  bool ref
)
ident(
  def pa_removal_flag "sPL_type.ml" 11 148 148 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 10 117 139 "sPL_type.ml" 10 117 142
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"sPL_type.ml" 10 117 143 "sPL_type.ml" 10 117 147
type(
  bool
)
"sPL_type.ml" 10 117 139 "sPL_type.ml" 10 117 147
type(
  bool ref
)
"sPL_type.ml" 11 148 152 "sPL_type.ml" 11 148 162
type(
  int ref
)
ident(
  def stack_size "sPL_type.ml" 13 176 176 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 11 148 165 "sPL_type.ml" 11 148 168
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"sPL_type.ml" 11 148 169 "sPL_type.ml" 11 148 174
type(
  int
)
"sPL_type.ml" 11 148 165 "sPL_type.ml" 11 148 174
type(
  int ref
)
"sPL_type.ml" 13 176 180 "sPL_type.ml" 13 176 191
type(
  (string * Arg.spec * string) list
)
ident(
  def option_flag "sPL_type.ml" 23 512 512 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 14 196 199 "sPL_type.ml" 14 196 207
type(
  string
)
"sPL_type.ml" 14 196 217 "sPL_type.ml" 14 196 235
type(
  bool ref
)
ident(
  int_ref tail_optimize_flag "sPL_type.ml" 9 82 86 "sPL_type.ml" 9 82 104
)
"sPL_type.ml" 14 196 209 "sPL_type.ml" 14 196 235
type(
  Arg.spec
)
"sPL_type.ml" 14 196 237 "sPL_type.ml" 14 196 269
type(
  string
)
"sPL_type.ml" 14 196 199 "sPL_type.ml" 14 196 269
type(
  string * Arg.spec * string
)
"sPL_type.ml" 15 271 275 "sPL_type.ml" 15 271 285
type(
  string
)
"sPL_type.ml" 15 271 297 "sPL_type.ml" 15 271 312
type(
  bool ref
)
ident(
  int_ref pa_removal_flag "sPL_type.ml" 10 117 121 "sPL_type.ml" 10 117 136
)
"sPL_type.ml" 15 271 287 "sPL_type.ml" 15 271 312
type(
  Arg.spec
)
"sPL_type.ml" 15 271 314 "sPL_type.ml" 15 271 352
type(
  string
)
"sPL_type.ml" 15 271 275 "sPL_type.ml" 15 271 352
type(
  string * Arg.spec * string
)
"sPL_type.ml" 16 354 358 "sPL_type.ml" 16 354 369
type(
  string
)
"sPL_type.ml" 16 354 383 "sPL_type.ml" 16 354 393
type(
  int ref
)
ident(
  int_ref stack_size "sPL_type.ml" 11 148 152 "sPL_type.ml" 11 148 162
)
"sPL_type.ml" 16 354 371 "sPL_type.ml" 16 354 393
type(
  Arg.spec
)
"sPL_type.ml" 17 395 399 "sPL_type.ml" 17 395 440
type(
  string
)
"sPL_type.ml" 16 354 358 "sPL_type.ml" 17 395 440
type(
  string * Arg.spec * string
)
"sPL_type.ml" 16 354 357 "sPL_type.ml" 17 395 441
type(
  (string * Arg.spec * string) list
)
"sPL_type.ml" 15 271 274 "sPL_type.ml" 17 395 441
type(
  (string * Arg.spec * string) list
)
"sPL_type.ml" 14 196 198 "sPL_type.ml" 17 395 441
type(
  (string * Arg.spec * string) list
)
type(
  (string * Arg.spec * string) list
)
"sPL_type.ml" 23 512 516 "sPL_type.ml" 23 512 524
type(
  'a Debug.Basic.Environ.et -> Debug.Basic.id -> 'a option
)
ident(
  def get_type "sPL_type.ml" 36 904 904 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 23 512 525 "sPL_type.ml" 23 512 528
type(
  'a Debug.Basic.Environ.et
)
ident(
  def env "sPL_type.ml" 23 512 529 "sPL_type.ml" 23 512 554
)
"sPL_type.ml" 23 512 529 "sPL_type.ml" 23 512 530
type(
  Debug.Basic.id
)
ident(
  def v "sPL_type.ml" 23 512 533 "sPL_type.ml" 23 512 554
)
"sPL_type.ml" 23 512 533 "sPL_type.ml" 23 512 548
type(
  'a Debug.Basic.Environ.et -> Debug.Basic.id -> 'a option
)
ident(
  ext_ref Debug.Basic.Environ.get_val
)
"sPL_type.ml" 23 512 549 "sPL_type.ml" 23 512 552
type(
  'a Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 23 512 525 "sPL_type.ml" 23 512 528
)
"sPL_type.ml" 23 512 553 "sPL_type.ml" 23 512 554
type(
  Debug.Basic.id
)
ident(
  int_ref v "sPL_type.ml" 23 512 529 "sPL_type.ml" 23 512 530
)
"sPL_type.ml" 23 512 533 "sPL_type.ml" 23 512 554
call(
  tail
)
type(
  'a option
)
"sPL_type.ml" 23 512 529 "sPL_type.ml" 23 512 554
type(
  Debug.Basic.id -> 'a option
)
"sPL_type.ml" 23 512 525 "sPL_type.ml" 23 512 554
type(
  'a Debug.Basic.Environ.et -> Debug.Basic.id -> 'a option
)
"sPL_type.ml" 36 904 912 "sPL_type.ml" 36 904 925
type(
  SPL.sPL_type -> SPL.sPL_type list
)
ident(
  def arrow_to_list "sPL_type.ml" 36 904 904 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 36 904 926 "sPL_type.ml" 36 904 927
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 37 930 932 "sPL_type.ml" 39 993 1011
)
"sPL_type.ml" 37 930 938 "sPL_type.ml" 37 930 939
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 36 904 926 "sPL_type.ml" 36 904 927
)
"sPL_type.ml" 38 945 958 "sPL_type.ml" 38 945 960
type(
  SPL.sPL_type
)
ident(
  def t1 "sPL_type.ml" 38 945 968 "sPL_type.ml" 38 945 992
)
"sPL_type.ml" 38 945 961 "sPL_type.ml" 38 945 963
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 38 945 968 "sPL_type.ml" 38 945 992
)
"sPL_type.ml" 38 945 951 "sPL_type.ml" 38 945 964
type(
  SPL.sPL_type
)
"sPL_type.ml" 38 945 968 "sPL_type.ml" 38 945 970
type(
  SPL.sPL_type
)
ident(
  int_ref t1 "sPL_type.ml" 38 945 958 "sPL_type.ml" 38 945 960
)
"sPL_type.ml" 38 945 975 "sPL_type.ml" 38 945 988
type(
  SPL.sPL_type -> SPL.sPL_type list
)
ident(
  int_ref arrow_to_list "sPL_type.ml" 36 904 912 "sPL_type.ml" 36 904 925
)
"sPL_type.ml" 38 945 989 "sPL_type.ml" 38 945 991
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 38 945 961 "sPL_type.ml" 38 945 963
)
"sPL_type.ml" 38 945 975 "sPL_type.ml" 38 945 991
call(
  stack
)
type(
  SPL.sPL_type list
)
"sPL_type.ml" 38 945 968 "sPL_type.ml" 38 945 992
type(
  SPL.sPL_type list
)
"sPL_type.ml" 39 993 999 "sPL_type.ml" 39 993 1000
type(
  SPL.sPL_type
)
"sPL_type.ml" 39 993 1004 "sPL_type.ml" 39 993 1005
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 36 904 926 "sPL_type.ml" 36 904 927
)
"sPL_type.ml" 39 993 1009 "sPL_type.ml" 39 993 1011
type(
  SPL.sPL_type list
)
"sPL_type.ml" 39 993 1004 "sPL_type.ml" 39 993 1011
type(
  SPL.sPL_type list
)
"sPL_type.ml" 37 930 932 "sPL_type.ml" 39 993 1011
type(
  SPL.sPL_type list
)
"sPL_type.ml" 36 904 926 "sPL_type.ml" 39 993 1011
type(
  SPL.sPL_type -> SPL.sPL_type list
)
"sPL_type.ml" 41 1013 1017 "sPL_type.ml" 41 1013 1029
type(
  'a list -> 'a list
)
ident(
  def all_but_last "sPL_type.ml" 43 1074 1074 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 41 1013 1030 "sPL_type.ml" 41 1013 1032
type(
  'a list
)
ident(
  def xs "sPL_type.ml" 41 1013 1035 "sPL_type.ml" 41 1013 1072
)
"sPL_type.ml" 41 1013 1035 "sPL_type.ml" 41 1013 1037
type(
  'a list
)
ident(
  int_ref xs "sPL_type.ml" 41 1013 1030 "sPL_type.ml" 41 1013 1032
)
"sPL_type.ml" 41 1013 1038 "sPL_type.ml" 41 1013 1040
type(
  'a list -> ('a list -> 'a list) -> 'a list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 41 1013 1041 "sPL_type.ml" 41 1013 1049
type(
  'a list -> 'a list
)
ident(
  ext_ref List.rev
)
"sPL_type.ml" 41 1013 1035 "sPL_type.ml" 41 1013 1049
call(
  stack
)
type(
  'a list
)
"sPL_type.ml" 41 1013 1050 "sPL_type.ml" 41 1013 1052
type(
  'a list -> ('a list -> 'a list) -> 'a list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 41 1013 1053 "sPL_type.ml" 41 1013 1060
type(
  'a list -> 'a list
)
ident(
  ext_ref List.tl
)
"sPL_type.ml" 41 1013 1035 "sPL_type.ml" 41 1013 1060
call(
  stack
)
type(
  'a list
)
"sPL_type.ml" 41 1013 1061 "sPL_type.ml" 41 1013 1063
type(
  'a list -> ('a list -> 'a list) -> 'a list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 41 1013 1064 "sPL_type.ml" 41 1013 1072
type(
  'a list -> 'a list
)
ident(
  ext_ref List.rev
)
"sPL_type.ml" 41 1013 1035 "sPL_type.ml" 41 1013 1072
call(
  tail
)
type(
  'a list
)
"sPL_type.ml" 41 1013 1030 "sPL_type.ml" 41 1013 1072
type(
  'a list -> 'a list
)
"sPL_type.ml" 43 1074 1078 "sPL_type.ml" 43 1074 1090
type(
  'a list -> 'a
)
ident(
  def last_in_list "sPL_type.ml" 45 1123 1123 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 43 1074 1091 "sPL_type.ml" 43 1074 1093
type(
  'a list
)
ident(
  def xs "sPL_type.ml" 43 1074 1096 "sPL_type.ml" 43 1074 1121
)
"sPL_type.ml" 43 1074 1096 "sPL_type.ml" 43 1074 1098
type(
  'a list
)
ident(
  int_ref xs "sPL_type.ml" 43 1074 1091 "sPL_type.ml" 43 1074 1093
)
"sPL_type.ml" 43 1074 1099 "sPL_type.ml" 43 1074 1101
type(
  'a list -> ('a list -> 'a list) -> 'a list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 43 1074 1102 "sPL_type.ml" 43 1074 1110
type(
  'a list -> 'a list
)
ident(
  ext_ref List.rev
)
"sPL_type.ml" 43 1074 1096 "sPL_type.ml" 43 1074 1110
call(
  stack
)
type(
  'a list
)
"sPL_type.ml" 43 1074 1111 "sPL_type.ml" 43 1074 1113
type(
  'a list -> ('a list -> 'a) -> 'a
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 43 1074 1114 "sPL_type.ml" 43 1074 1121
type(
  'a list -> 'a
)
ident(
  ext_ref List.hd
)
"sPL_type.ml" 43 1074 1096 "sPL_type.ml" 43 1074 1121
call(
  tail
)
type(
  'a
)
"sPL_type.ml" 43 1074 1091 "sPL_type.ml" 43 1074 1121
type(
  'a list -> 'a
)
"sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
type(
  SPL.sPL_type -> 'a list -> (('a * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  def extr_arg_type "sPL_type.ml" 53 1390 1390 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 45 1123 1142 "sPL_type.ml" 45 1123 1143
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 45 1123 1154 "sPL_type.ml" 51 1370 1388
)
"sPL_type.ml" 45 1123 1155 "sPL_type.ml" 45 1123 1159
type(
  'a list
)
ident(
  def args "sPL_type.ml" 45 1123 1169 "sPL_type.ml" 51 1370 1388
)
"sPL_type.ml" 46 1214 1224 "sPL_type.ml" 46 1214 1227
type(
  ('b * SPL.sPL_type) list ->
  SPL.sPL_type -> 'b list -> (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  def aux "sPL_type.ml" 46 1214 1216 "sPL_type.ml" 51 1370 1388
)
"sPL_type.ml" 46 1214 1228 "sPL_type.ml" 46 1214 1231
type(
  ('b * SPL.sPL_type) list
)
ident(
  def env "sPL_type.ml" 46 1214 1232 "sPL_type.ml" 50 1350 1369
)
"sPL_type.ml" 46 1214 1232 "sPL_type.ml" 46 1214 1233
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 46 1214 1234 "sPL_type.ml" 50 1350 1369
)
"sPL_type.ml" 46 1214 1234 "sPL_type.ml" 46 1214 1238
type(
  'b list
)
ident(
  def args "sPL_type.ml" 47 1241 1245 "sPL_type.ml" 50 1350 1369
)
"sPL_type.ml" 47 1241 1251 "sPL_type.ml" 47 1241 1255
type(
  'b list
)
ident(
  int_ref args "sPL_type.ml" 46 1214 1234 "sPL_type.ml" 46 1214 1238
)
"sPL_type.ml" 47 1241 1256 "sPL_type.ml" 47 1241 1257
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 46 1214 1232 "sPL_type.ml" 46 1214 1233
)
"sPL_type.ml" 47 1241 1251 "sPL_type.ml" 47 1241 1257
type(
  'b list * SPL.sPL_type
)
"sPL_type.ml" 48 1263 1271 "sPL_type.ml" 48 1263 1273
type(
  'b list
)
"sPL_type.ml" 48 1263 1274 "sPL_type.ml" 48 1263 1275
type(
  SPL.sPL_type
)
"sPL_type.ml" 48 1263 1271 "sPL_type.ml" 48 1263 1275
type(
  'b list * SPL.sPL_type
)
"sPL_type.ml" 48 1263 1285 "sPL_type.ml" 48 1263 1288
type(
  ('b * SPL.sPL_type) list
)
ident(
  int_ref env "sPL_type.ml" 46 1214 1228 "sPL_type.ml" 46 1214 1231
)
"sPL_type.ml" 48 1263 1289 "sPL_type.ml" 48 1263 1290
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 46 1214 1232 "sPL_type.ml" 46 1214 1233
)
"sPL_type.ml" 48 1263 1279 "sPL_type.ml" 48 1263 1291
type(
  ('b * SPL.sPL_type) list * SPL.sPL_type
)
type(
  (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 49 1292 1300 "sPL_type.ml" 49 1292 1301
type(
  'b
)
ident(
  def v "sPL_type.ml" 49 1292 1323 "sPL_type.ml" 49 1292 1349
)
"sPL_type.ml" 49 1292 1303 "sPL_type.ml" 49 1292 1305
type(
  'b list
)
ident(
  def vs "sPL_type.ml" 49 1292 1323 "sPL_type.ml" 49 1292 1349
)
"sPL_type.ml" 49 1292 1300 "sPL_type.ml" 49 1292 1305
type(
  'b list
)
"sPL_type.ml" 49 1292 1313 "sPL_type.ml" 49 1292 1315
type(
  SPL.sPL_type
)
ident(
  def t1 "sPL_type.ml" 49 1292 1323 "sPL_type.ml" 49 1292 1349
)
"sPL_type.ml" 49 1292 1316 "sPL_type.ml" 49 1292 1318
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 49 1292 1323 "sPL_type.ml" 49 1292 1349
)
"sPL_type.ml" 49 1292 1306 "sPL_type.ml" 49 1292 1319
type(
  SPL.sPL_type
)
"sPL_type.ml" 49 1292 1300 "sPL_type.ml" 49 1292 1319
type(
  'b list * SPL.sPL_type
)
"sPL_type.ml" 49 1292 1323 "sPL_type.ml" 49 1292 1326
type(
  ('b * SPL.sPL_type) list ->
  SPL.sPL_type -> 'b list -> (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref aux "sPL_type.ml" 46 1214 1224 "sPL_type.ml" 46 1214 1227
)
"sPL_type.ml" 49 1292 1328 "sPL_type.ml" 49 1292 1331
type(
  ('b * SPL.sPL_type) list
)
ident(
  int_ref env "sPL_type.ml" 46 1214 1228 "sPL_type.ml" 46 1214 1231
)
"sPL_type.ml" 49 1292 1332 "sPL_type.ml" 49 1292 1333
type(
  ('b * SPL.sPL_type) list ->
  ('b * SPL.sPL_type) list -> ('b * SPL.sPL_type) list
)
ident(
  ext_ref Pervasives.( @ )
)
"sPL_type.ml" 49 1292 1336 "sPL_type.ml" 49 1292 1337
type(
  'b
)
ident(
  int_ref v "sPL_type.ml" 49 1292 1300 "sPL_type.ml" 49 1292 1301
)
"sPL_type.ml" 49 1292 1338 "sPL_type.ml" 49 1292 1340
type(
  SPL.sPL_type
)
ident(
  int_ref t1 "sPL_type.ml" 49 1292 1313 "sPL_type.ml" 49 1292 1315
)
"sPL_type.ml" 49 1292 1336 "sPL_type.ml" 49 1292 1340
type(
  'b * SPL.sPL_type
)
"sPL_type.ml" 49 1292 1335 "sPL_type.ml" 49 1292 1341
type(
  ('b * SPL.sPL_type) list
)
type(
  ('b * SPL.sPL_type) list
)
"sPL_type.ml" 49 1292 1328 "sPL_type.ml" 49 1292 1342
call(
  stack
)
type(
  ('b * SPL.sPL_type) list
)
"sPL_type.ml" 49 1292 1344 "sPL_type.ml" 49 1292 1346
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 49 1292 1316 "sPL_type.ml" 49 1292 1318
)
"sPL_type.ml" 49 1292 1347 "sPL_type.ml" 49 1292 1349
type(
  'b list
)
ident(
  int_ref vs "sPL_type.ml" 49 1292 1303 "sPL_type.ml" 49 1292 1305
)
"sPL_type.ml" 49 1292 1323 "sPL_type.ml" 49 1292 1349
call(
  tail
)
type(
  (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 50 1350 1358 "sPL_type.ml" 50 1350 1359
type(
  'b list
)
"sPL_type.ml" 50 1350 1360 "sPL_type.ml" 50 1350 1361
type(
  SPL.sPL_type
)
"sPL_type.ml" 50 1350 1358 "sPL_type.ml" 50 1350 1361
type(
  'b list * SPL.sPL_type
)
"sPL_type.ml" 50 1350 1365 "sPL_type.ml" 50 1350 1369
type(
  (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 47 1241 1245 "sPL_type.ml" 50 1350 1369
type(
  (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 46 1214 1234 "sPL_type.ml" 50 1350 1369
type(
  'b list -> (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 46 1214 1232 "sPL_type.ml" 50 1350 1369
type(
  SPL.sPL_type -> 'b list -> (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 46 1214 1228 "sPL_type.ml" 50 1350 1369
type(
  ('b * SPL.sPL_type) list ->
  SPL.sPL_type -> 'b list -> (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 51 1370 1375 "sPL_type.ml" 51 1370 1378
type(
  ('a * SPL.sPL_type) list ->
  SPL.sPL_type -> 'a list -> (('a * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref aux "sPL_type.ml" 46 1214 1224 "sPL_type.ml" 46 1214 1227
)
"sPL_type.ml" 51 1370 1379 "sPL_type.ml" 51 1370 1381
type(
  ('a * SPL.sPL_type) list
)
"sPL_type.ml" 51 1370 1382 "sPL_type.ml" 51 1370 1383
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 45 1123 1142 "sPL_type.ml" 45 1123 1143
)
"sPL_type.ml" 51 1370 1384 "sPL_type.ml" 51 1370 1388
type(
  'a list
)
ident(
  int_ref args "sPL_type.ml" 45 1123 1155 "sPL_type.ml" 45 1123 1159
)
"sPL_type.ml" 51 1370 1375 "sPL_type.ml" 51 1370 1388
call(
  tail
)
type(
  (('a * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 46 1214 1216 "sPL_type.ml" 51 1370 1388
type(
  (('a * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  (('a * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 45 1123 1154 "sPL_type.ml" 51 1370 1388
type(
  'a list -> (('a * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 45 1123 1141 "sPL_type.ml" 51 1370 1388
type(
  SPL.sPL_type -> 'a list -> (('a * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 53 1390 1394 "sPL_type.ml" 53 1390 1412
type(
  SPL.sPL_type ->
  int list -> ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  def extr_arg_type_test "sPL_type.ml" 72 2089 2089 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 53 1390 1414 "sPL_type.ml" 53 1390 1415
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 53 1390 1426 "sPL_type.ml" 58 1655 1721
)
"sPL_type.ml" 53 1390 1427 "sPL_type.ml" 53 1390 1431
type(
  int list
)
ident(
  def args "sPL_type.ml" 53 1390 1442 "sPL_type.ml" 58 1655 1721
)
"sPL_type.ml" 54 1488 1494 "sPL_type.ml" 54 1488 1497
type(
  SPL.sPL_type -> string
)
ident(
  def pr1 "sPL_type.ml" 55 1522 1524 "sPL_type.ml" 58 1655 1721
)
"sPL_type.ml" 54 1488 1500 "sPL_type.ml" 54 1488 1518
type(
  SPL.sPL_type -> string
)
ident(
  ext_ref SPL.string_of_sPL_type
)
"sPL_type.ml" 55 1522 1528 "sPL_type.ml" 55 1522 1531
type(
  int list -> string
)
ident(
  def pr2 "sPL_type.ml" 56 1559 1561 "sPL_type.ml" 58 1655 1721
)
"sPL_type.ml" 55 1522 1534 "sPL_type.ml" 55 1522 1541
type(
  (int -> string) -> int list -> string
)
ident(
  ext_ref Debug.Basic.pr_list
)
"sPL_type.ml" 55 1522 1542 "sPL_type.ml" 55 1522 1555
type(
  int -> string
)
ident(
  ext_ref Pervasives.string_of_int
)
"sPL_type.ml" 55 1522 1534 "sPL_type.ml" 55 1522 1555
call(
  stack
)
type(
  int list -> string
)
"sPL_type.ml" 56 1559 1565 "sPL_type.ml" 56 1559 1569
type(
  (int * SPL.sPL_type) list -> string
)
ident(
  def pr2a "sPL_type.ml" 57 1611 1613 "sPL_type.ml" 58 1655 1721
)
"sPL_type.ml" 56 1559 1572 "sPL_type.ml" 56 1559 1579
type(
  (int * SPL.sPL_type -> string) -> (int * SPL.sPL_type) list -> string
)
ident(
  ext_ref Debug.Basic.pr_list
)
"sPL_type.ml" 56 1559 1581 "sPL_type.ml" 56 1559 1588
type(
  (int -> string) -> (SPL.sPL_type -> string) -> int * SPL.sPL_type -> string
)
ident(
  ext_ref Debug.Basic.pr_pair
)
"sPL_type.ml" 56 1559 1589 "sPL_type.ml" 56 1559 1602
type(
  int -> string
)
ident(
  ext_ref Pervasives.string_of_int
)
"sPL_type.ml" 56 1559 1603 "sPL_type.ml" 56 1559 1606
type(
  SPL.sPL_type -> string
)
ident(
  int_ref pr1 "sPL_type.ml" 54 1488 1494 "sPL_type.ml" 54 1488 1497
)
"sPL_type.ml" 56 1559 1581 "sPL_type.ml" 56 1559 1606
call(
  stack
)
type(
  int * SPL.sPL_type -> string
)
"sPL_type.ml" 56 1559 1572 "sPL_type.ml" 56 1559 1607
call(
  stack
)
type(
  (int * SPL.sPL_type) list -> string
)
"sPL_type.ml" 57 1611 1617 "sPL_type.ml" 57 1611 1620
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option -> string
)
ident(
  def pr3 "sPL_type.ml" 58 1655 1657 "sPL_type.ml" 58 1655 1721
)
"sPL_type.ml" 57 1611 1623 "sPL_type.ml" 57 1611 1632
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type -> string) ->
  ((int * SPL.sPL_type) list * SPL.sPL_type) option -> string
)
ident(
  ext_ref Debug.Basic.pr_option
)
"sPL_type.ml" 57 1611 1634 "sPL_type.ml" 57 1611 1641
type(
  ((int * SPL.sPL_type) list -> string) ->
  (SPL.sPL_type -> string) ->
  (int * SPL.sPL_type) list * SPL.sPL_type -> string
)
ident(
  ext_ref Debug.Basic.pr_pair
)
"sPL_type.ml" 57 1611 1642 "sPL_type.ml" 57 1611 1646
type(
  (int * SPL.sPL_type) list -> string
)
ident(
  int_ref pr2a "sPL_type.ml" 56 1559 1565 "sPL_type.ml" 56 1559 1569
)
"sPL_type.ml" 57 1611 1647 "sPL_type.ml" 57 1611 1650
type(
  SPL.sPL_type -> string
)
ident(
  int_ref pr1 "sPL_type.ml" 54 1488 1494 "sPL_type.ml" 54 1488 1497
)
"sPL_type.ml" 57 1611 1634 "sPL_type.ml" 57 1611 1650
call(
  stack
)
type(
  (int * SPL.sPL_type) list * SPL.sPL_type -> string
)
"sPL_type.ml" 57 1611 1623 "sPL_type.ml" 57 1611 1651
call(
  stack
)
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option -> string
)
"sPL_type.ml" 58 1655 1657 "sPL_type.ml" 58 1655 1667
type(
  string ->
  (SPL.sPL_type -> string) ->
  (int list -> string) ->
  (((int * SPL.sPL_type) list * SPL.sPL_type) option -> string) ->
  (SPL.sPL_type ->
   int list -> ((int * SPL.sPL_type) list * SPL.sPL_type) option) ->
  SPL.sPL_type ->
  int list -> ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  ext_ref Debug.ho_2
)
"sPL_type.ml" 58 1655 1668 "sPL_type.ml" 58 1655 1688
type(
  string
)
"sPL_type.ml" 58 1655 1689 "sPL_type.ml" 58 1655 1692
type(
  SPL.sPL_type -> string
)
ident(
  int_ref pr1 "sPL_type.ml" 54 1488 1494 "sPL_type.ml" 54 1488 1497
)
"sPL_type.ml" 58 1655 1693 "sPL_type.ml" 58 1655 1696
type(
  int list -> string
)
ident(
  int_ref pr2 "sPL_type.ml" 55 1522 1528 "sPL_type.ml" 55 1522 1531
)
"sPL_type.ml" 58 1655 1697 "sPL_type.ml" 58 1655 1700
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option -> string
)
ident(
  int_ref pr3 "sPL_type.ml" 57 1611 1617 "sPL_type.ml" 57 1611 1620
)
"sPL_type.ml" 58 1655 1701 "sPL_type.ml" 58 1655 1714
type(
  SPL.sPL_type ->
  int list -> ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 58 1655 1715 "sPL_type.ml" 58 1655 1716
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 53 1390 1414 "sPL_type.ml" 53 1390 1415
)
"sPL_type.ml" 58 1655 1717 "sPL_type.ml" 58 1655 1721
type(
  int list
)
ident(
  int_ref args "sPL_type.ml" 53 1390 1427 "sPL_type.ml" 53 1390 1431
)
"sPL_type.ml" 58 1655 1657 "sPL_type.ml" 58 1655 1721
call(
  tail
)
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 57 1611 1613 "sPL_type.ml" 58 1655 1721
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 56 1559 1561 "sPL_type.ml" 58 1655 1721
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 55 1522 1524 "sPL_type.ml" 58 1655 1721
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 54 1488 1490 "sPL_type.ml" 58 1655 1721
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 53 1390 1426 "sPL_type.ml" 58 1655 1721
type(
  int list -> ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 53 1390 1413 "sPL_type.ml" 58 1655 1721
type(
  SPL.sPL_type ->
  int list -> ((int * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 72 2089 2093 "sPL_type.ml" 72 2089 2103
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  def type_check "sPL_type.ml" 143 4882 4882 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 72 2089 2105 "sPL_type.ml" 72 2089 2108
type(
  env_type
)
ident(
  def env "sPL_type.ml" 72 2089 2119 "sPL_type.ml" 141 4864 4880
)
"sPL_type.ml" 72 2089 2120 "sPL_type.ml" 72 2089 2121
type(
  SPL.sPL_expr
)
ident(
  def e "sPL_type.ml" 72 2089 2132 "sPL_type.ml" 141 4864 4880
)
"sPL_type.ml" 72 2089 2133 "sPL_type.ml" 72 2089 2134
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 72 2089 2145 "sPL_type.ml" 141 4864 4880
)
"sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  def aux "sPL_type.ml" 73 2154 2156 "sPL_type.ml" 141 4864 4880
)
"sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  def env "sPL_type.ml" 73 2154 2172 "sPL_type.ml" 140 4841 4863
)
"sPL_type.ml" 73 2154 2172 "sPL_type.ml" 73 2154 2173
type(
  SPL.sPL_expr
)
ident(
  def e "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 140 4841 4863
)
"sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 74 2178 2182 "sPL_type.ml" 140 4841 4863
)
"sPL_type.ml" 74 2178 2188 "sPL_type.ml" 74 2178 2189
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 73 2154 2172 "sPL_type.ml" 73 2154 2173
)
"sPL_type.ml" 75 2195 2212 "sPL_type.ml" 75 2195 2213
type(
  int
)
"sPL_type.ml" 75 2195 2203 "sPL_type.ml" 75 2195 2213
type(
  SPL.sPL_expr
)
"sPL_type.ml" 76 2217 2232 "sPL_type.ml" 76 2217 2233
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 76 2217 2233 "sPL_type.ml" 76 2217 2234
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 76 2217 2234 "sPL_type.ml" 76 2217 2241
type(
  SPL.sPL_type
)
"sPL_type.ml" 76 2217 2232 "sPL_type.ml" 76 2217 2241
type(
  bool
)
"sPL_type.ml" 76 2217 2247 "sPL_type.ml" 76 2217 2251
type(
  bool
)
"sPL_type.ml" 76 2217 2257 "sPL_type.ml" 76 2217 2262
type(
  bool
)
"sPL_type.ml" 76 2217 2229 "sPL_type.ml" 76 2217 2262
type(
  bool
)
"sPL_type.ml" 77 2263 2281 "sPL_type.ml" 77 2263 2282
type(
  bool
)
"sPL_type.ml" 77 2263 2271 "sPL_type.ml" 77 2263 2282
type(
  SPL.sPL_expr
)
"sPL_type.ml" 78 2286 2301 "sPL_type.ml" 78 2286 2302
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 78 2286 2302 "sPL_type.ml" 78 2286 2303
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 78 2286 2303 "sPL_type.ml" 78 2286 2311
type(
  SPL.sPL_type
)
"sPL_type.ml" 78 2286 2301 "sPL_type.ml" 78 2286 2311
type(
  bool
)
"sPL_type.ml" 78 2286 2317 "sPL_type.ml" 78 2286 2321
type(
  bool
)
"sPL_type.ml" 78 2286 2327 "sPL_type.ml" 78 2286 2332
type(
  bool
)
"sPL_type.ml" 78 2286 2298 "sPL_type.ml" 78 2286 2332
type(
  bool
)
"sPL_type.ml" 79 2333 2345 "sPL_type.ml" 79 2333 2346
type(
  SPL.id
)
ident(
  def v "sPL_type.ml" 80 2350 2363 "sPL_type.ml" 82 2421 2450
)
"sPL_type.ml" 79 2333 2341 "sPL_type.ml" 79 2333 2346
type(
  SPL.sPL_expr
)
"sPL_type.ml" 80 2350 2369 "sPL_type.ml" 80 2350 2377
type(
  SPL.sPL_type Debug.Basic.Environ.et ->
  Debug.Basic.id -> SPL.sPL_type option
)
ident(
  int_ref get_type "sPL_type.ml" 23 512 516 "sPL_type.ml" 23 512 524
)
"sPL_type.ml" 80 2350 2378 "sPL_type.ml" 80 2350 2381
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 80 2350 2382 "sPL_type.ml" 80 2350 2383
type(
  SPL.id
)
ident(
  int_ref v "sPL_type.ml" 79 2333 2345 "sPL_type.ml" 79 2333 2346
)
"sPL_type.ml" 80 2350 2369 "sPL_type.ml" 80 2350 2383
call(
  stack
)
type(
  SPL.sPL_type option
)
"sPL_type.ml" 81 2389 2410 "sPL_type.ml" 81 2389 2412
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 81 2389 2416 "sPL_type.ml" 81 2389 2420
)
"sPL_type.ml" 81 2389 2405 "sPL_type.ml" 81 2389 2412
type(
  SPL.sPL_type option
)
"sPL_type.ml" 81 2389 2416 "sPL_type.ml" 81 2389 2417
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 81 2389 2417 "sPL_type.ml" 81 2389 2418
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 81 2389 2418 "sPL_type.ml" 81 2389 2420
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 81 2389 2410 "sPL_type.ml" 81 2389 2412
)
"sPL_type.ml" 81 2389 2416 "sPL_type.ml" 81 2389 2420
type(
  bool
)
"sPL_type.ml" 82 2421 2437 "sPL_type.ml" 82 2421 2441
type(
  SPL.sPL_type option
)
"sPL_type.ml" 82 2421 2445 "sPL_type.ml" 82 2421 2450
type(
  bool
)
"sPL_type.ml" 80 2350 2363 "sPL_type.ml" 82 2421 2450
type(
  bool
)
"sPL_type.ml" 84 2523 2545 "sPL_type.ml" 84 2523 2547
type(
  SPL.op_id
)
ident(
  def op "sPL_type.ml" 86 2574 2588 "sPL_type.ml" 92 2779 2809
)
"sPL_type.ml" 84 2523 2548 "sPL_type.ml" 84 2523 2551
type(
  SPL.sPL_expr
)
ident(
  def arg "sPL_type.ml" 86 2574 2588 "sPL_type.ml" 92 2779 2809
)
"sPL_type.ml" 84 2523 2531 "sPL_type.ml" 84 2523 2552
type(
  SPL.sPL_expr
)
"sPL_type.ml" 86 2574 2594 "sPL_type.ml" 86 2574 2596
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 84 2523 2545 "sPL_type.ml" 84 2523 2547
)
"sPL_type.ml" 86 2574 2597 "sPL_type.ml" 86 2574 2598
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 86 2574 2594 "sPL_type.ml" 86 2574 2598
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 87 2604 2622 "sPL_type.ml" 87 2604 2625
type(
  SPL.op_id
)
"sPL_type.ml" 87 2604 2626 "sPL_type.ml" 87 2604 2633
type(
  SPL.sPL_type
)
"sPL_type.ml" 87 2604 2622 "sPL_type.ml" 87 2604 2633
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 88 2634 2659 "sPL_type.ml" 88 2634 2662
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 88 2634 2663 "sPL_type.ml" 88 2634 2666
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 88 2634 2667 "sPL_type.ml" 88 2634 2670
type(
  SPL.sPL_expr
)
ident(
  int_ref arg "sPL_type.ml" 84 2523 2548 "sPL_type.ml" 84 2523 2551
)
"sPL_type.ml" 88 2634 2671 "sPL_type.ml" 88 2634 2678
type(
  SPL.sPL_type
)
"sPL_type.ml" 88 2634 2659 "sPL_type.ml" 88 2634 2678
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 89 2679 2697 "sPL_type.ml" 89 2679 2701
type(
  SPL.op_id
)
"sPL_type.ml" 89 2679 2702 "sPL_type.ml" 89 2679 2710
type(
  SPL.sPL_type
)
"sPL_type.ml" 89 2679 2697 "sPL_type.ml" 89 2679 2710
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 90 2711 2736 "sPL_type.ml" 90 2711 2739
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 90 2711 2740 "sPL_type.ml" 90 2711 2743
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 90 2711 2744 "sPL_type.ml" 90 2711 2747
type(
  SPL.sPL_expr
)
ident(
  int_ref arg "sPL_type.ml" 84 2523 2548 "sPL_type.ml" 84 2523 2551
)
"sPL_type.ml" 90 2711 2748 "sPL_type.ml" 90 2711 2756
type(
  SPL.sPL_type
)
"sPL_type.ml" 90 2711 2736 "sPL_type.ml" 90 2711 2756
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 91 2757 2775 "sPL_type.ml" 91 2757 2776
type(
  SPL.op_id
)
"sPL_type.ml" 91 2757 2777 "sPL_type.ml" 91 2757 2778
type(
  SPL.sPL_type
)
"sPL_type.ml" 91 2757 2775 "sPL_type.ml" 91 2757 2778
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 92 2779 2804 "sPL_type.ml" 92 2779 2809
type(
  bool
)
"sPL_type.ml" 86 2574 2588 "sPL_type.ml" 92 2779 2809
type(
  bool
)
"sPL_type.ml" 94 2826 2849 "sPL_type.ml" 94 2826 2851
type(
  SPL.op_id
)
ident(
  def op "sPL_type.ml" 96 2884 2898 "sPL_type.ml" 103 3317 3347
)
"sPL_type.ml" 94 2826 2852 "sPL_type.ml" 94 2826 2856
type(
  SPL.sPL_expr
)
ident(
  def arg1 "sPL_type.ml" 96 2884 2898 "sPL_type.ml" 103 3317 3347
)
"sPL_type.ml" 94 2826 2857 "sPL_type.ml" 94 2826 2861
type(
  SPL.sPL_expr
)
ident(
  def arg2 "sPL_type.ml" 96 2884 2898 "sPL_type.ml" 103 3317 3347
)
"sPL_type.ml" 94 2826 2834 "sPL_type.ml" 94 2826 2862
type(
  SPL.sPL_expr
)
"sPL_type.ml" 96 2884 2904 "sPL_type.ml" 96 2884 2906
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 94 2826 2849 "sPL_type.ml" 94 2826 2851
)
"sPL_type.ml" 96 2884 2907 "sPL_type.ml" 96 2884 2908
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 96 2884 2904 "sPL_type.ml" 96 2884 2908
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 97 2914 2932 "sPL_type.ml" 97 2914 2935
type(
  SPL.op_id
)
"sPL_type.ml" 97 2914 2936 "sPL_type.ml" 97 2914 2943
type(
  SPL.sPL_type
)
"sPL_type.ml" 97 2914 2932 "sPL_type.ml" 97 2914 2943
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 97 2914 2946 "sPL_type.ml" 97 2914 2949
type(
  SPL.op_id
)
"sPL_type.ml" 97 2914 2950 "sPL_type.ml" 97 2914 2957
type(
  SPL.sPL_type
)
"sPL_type.ml" 97 2914 2946 "sPL_type.ml" 97 2914 2957
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 97 2914 2932 "sPL_type.ml" 97 2914 2957
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 97 2914 2960 "sPL_type.ml" 97 2914 2963
type(
  SPL.op_id
)
"sPL_type.ml" 97 2914 2964 "sPL_type.ml" 97 2914 2971
type(
  SPL.sPL_type
)
"sPL_type.ml" 97 2914 2960 "sPL_type.ml" 97 2914 2971
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 97 2914 2932 "sPL_type.ml" 97 2914 2971
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 97 2914 2974 "sPL_type.ml" 97 2914 2977
type(
  SPL.op_id
)
"sPL_type.ml" 97 2914 2978 "sPL_type.ml" 97 2914 2985
type(
  SPL.sPL_type
)
"sPL_type.ml" 97 2914 2974 "sPL_type.ml" 97 2914 2985
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 97 2914 2932 "sPL_type.ml" 97 2914 2985
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 98 2986 3012 "sPL_type.ml" 98 2986 3015
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 98 2986 3016 "sPL_type.ml" 98 2986 3019
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 98 2986 3020 "sPL_type.ml" 98 2986 3024
type(
  SPL.sPL_expr
)
ident(
  int_ref arg1 "sPL_type.ml" 94 2826 2852 "sPL_type.ml" 94 2826 2856
)
"sPL_type.ml" 98 2986 3025 "sPL_type.ml" 98 2986 3032
type(
  SPL.sPL_type
)
"sPL_type.ml" 98 2986 3012 "sPL_type.ml" 98 2986 3032
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 98 2986 3034 "sPL_type.ml" 98 2986 3036
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"sPL_type.ml" 98 2986 3038 "sPL_type.ml" 98 2986 3041
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 98 2986 3042 "sPL_type.ml" 98 2986 3045
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 98 2986 3046 "sPL_type.ml" 98 2986 3050
type(
  SPL.sPL_expr
)
ident(
  int_ref arg2 "sPL_type.ml" 94 2826 2857 "sPL_type.ml" 94 2826 2861
)
"sPL_type.ml" 98 2986 3051 "sPL_type.ml" 98 2986 3058
type(
  SPL.sPL_type
)
"sPL_type.ml" 98 2986 3038 "sPL_type.ml" 98 2986 3058
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 98 2986 3011 "sPL_type.ml" 98 2986 3059
type(
  bool
)
"sPL_type.ml" 99 3060 3078 "sPL_type.ml" 99 3060 3081
type(
  SPL.op_id
)
"sPL_type.ml" 99 3060 3082 "sPL_type.ml" 99 3060 3090
type(
  SPL.sPL_type
)
"sPL_type.ml" 99 3060 3078 "sPL_type.ml" 99 3060 3090
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 99 3060 3093 "sPL_type.ml" 99 3060 3096
type(
  SPL.op_id
)
"sPL_type.ml" 99 3060 3097 "sPL_type.ml" 99 3060 3105
type(
  SPL.sPL_type
)
"sPL_type.ml" 99 3060 3093 "sPL_type.ml" 99 3060 3105
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 99 3060 3078 "sPL_type.ml" 99 3060 3105
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 99 3060 3108 "sPL_type.ml" 99 3060 3111
type(
  SPL.op_id
)
"sPL_type.ml" 99 3060 3112 "sPL_type.ml" 99 3060 3120
type(
  SPL.sPL_type
)
"sPL_type.ml" 99 3060 3108 "sPL_type.ml" 99 3060 3120
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 99 3060 3078 "sPL_type.ml" 99 3060 3120
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 100 3121 3147 "sPL_type.ml" 100 3121 3150
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 100 3121 3151 "sPL_type.ml" 100 3121 3154
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 100 3121 3155 "sPL_type.ml" 100 3121 3159
type(
  SPL.sPL_expr
)
ident(
  int_ref arg1 "sPL_type.ml" 94 2826 2852 "sPL_type.ml" 94 2826 2856
)
"sPL_type.ml" 100 3121 3160 "sPL_type.ml" 100 3121 3167
type(
  SPL.sPL_type
)
"sPL_type.ml" 100 3121 3147 "sPL_type.ml" 100 3121 3167
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 100 3121 3169 "sPL_type.ml" 100 3121 3171
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"sPL_type.ml" 100 3121 3173 "sPL_type.ml" 100 3121 3176
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 100 3121 3177 "sPL_type.ml" 100 3121 3180
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 100 3121 3181 "sPL_type.ml" 100 3121 3185
type(
  SPL.sPL_expr
)
ident(
  int_ref arg2 "sPL_type.ml" 94 2826 2857 "sPL_type.ml" 94 2826 2861
)
"sPL_type.ml" 100 3121 3186 "sPL_type.ml" 100 3121 3193
type(
  SPL.sPL_type
)
"sPL_type.ml" 100 3121 3173 "sPL_type.ml" 100 3121 3193
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 100 3121 3146 "sPL_type.ml" 100 3121 3194
type(
  bool
)
"sPL_type.ml" 101 3195 3213 "sPL_type.ml" 101 3195 3216
type(
  SPL.op_id
)
"sPL_type.ml" 101 3195 3217 "sPL_type.ml" 101 3195 3225
type(
  SPL.sPL_type
)
"sPL_type.ml" 101 3195 3213 "sPL_type.ml" 101 3195 3225
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 101 3195 3228 "sPL_type.ml" 101 3195 3231
type(
  SPL.op_id
)
"sPL_type.ml" 101 3195 3232 "sPL_type.ml" 101 3195 3240
type(
  SPL.sPL_type
)
"sPL_type.ml" 101 3195 3228 "sPL_type.ml" 101 3195 3240
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 101 3195 3213 "sPL_type.ml" 101 3195 3240
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 102 3241 3267 "sPL_type.ml" 102 3241 3270
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 102 3241 3271 "sPL_type.ml" 102 3241 3274
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 102 3241 3275 "sPL_type.ml" 102 3241 3279
type(
  SPL.sPL_expr
)
ident(
  int_ref arg1 "sPL_type.ml" 94 2826 2852 "sPL_type.ml" 94 2826 2856
)
"sPL_type.ml" 102 3241 3280 "sPL_type.ml" 102 3241 3288
type(
  SPL.sPL_type
)
"sPL_type.ml" 102 3241 3267 "sPL_type.ml" 102 3241 3288
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 102 3241 3290 "sPL_type.ml" 102 3241 3292
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"sPL_type.ml" 102 3241 3294 "sPL_type.ml" 102 3241 3297
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 102 3241 3298 "sPL_type.ml" 102 3241 3301
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 102 3241 3302 "sPL_type.ml" 102 3241 3306
type(
  SPL.sPL_expr
)
ident(
  int_ref arg2 "sPL_type.ml" 94 2826 2857 "sPL_type.ml" 94 2826 2861
)
"sPL_type.ml" 102 3241 3307 "sPL_type.ml" 102 3241 3315
type(
  SPL.sPL_type
)
"sPL_type.ml" 102 3241 3294 "sPL_type.ml" 102 3241 3315
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 102 3241 3266 "sPL_type.ml" 102 3241 3316
type(
  bool
)
"sPL_type.ml" 103 3317 3335 "sPL_type.ml" 103 3317 3336
type(
  SPL.op_id
)
"sPL_type.ml" 103 3317 3337 "sPL_type.ml" 103 3317 3338
type(
  SPL.sPL_type
)
"sPL_type.ml" 103 3317 3335 "sPL_type.ml" 103 3317 3338
type(
  SPL.op_id * SPL.sPL_type
)
"sPL_type.ml" 103 3317 3342 "sPL_type.ml" 103 3317 3347
type(
  bool
)
"sPL_type.ml" 96 2884 2898 "sPL_type.ml" 103 3317 3347
type(
  bool
)
"sPL_type.ml" 105 3364 3378 "sPL_type.ml" 105 3364 3380
type(
  SPL.sPL_expr
)
ident(
  def e1 "sPL_type.ml" 106 3391 3403 "sPL_type.ml" 109 3509 3535
)
"sPL_type.ml" 105 3364 3381 "sPL_type.ml" 105 3364 3383
type(
  SPL.sPL_expr
)
ident(
  def e2 "sPL_type.ml" 106 3391 3403 "sPL_type.ml" 109 3509 3535
)
"sPL_type.ml" 105 3364 3384 "sPL_type.ml" 105 3364 3386
type(
  SPL.sPL_expr
)
ident(
  def e3 "sPL_type.ml" 106 3391 3403 "sPL_type.ml" 109 3509 3535
)
"sPL_type.ml" 105 3364 3372 "sPL_type.ml" 105 3364 3387
type(
  SPL.sPL_expr
)
"sPL_type.ml" 106 3391 3407 "sPL_type.ml" 106 3391 3409
type(
  bool
)
ident(
  def b1 "sPL_type.ml" 107 3435 3447 "sPL_type.ml" 109 3509 3535
)
"sPL_type.ml" 106 3391 3412 "sPL_type.ml" 106 3391 3415
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 106 3391 3416 "sPL_type.ml" 106 3391 3419
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 106 3391 3420 "sPL_type.ml" 106 3391 3422
type(
  SPL.sPL_expr
)
ident(
  int_ref e1 "sPL_type.ml" 105 3364 3378 "sPL_type.ml" 105 3364 3380
)
"sPL_type.ml" 106 3391 3423 "sPL_type.ml" 106 3391 3431
type(
  SPL.sPL_type
)
"sPL_type.ml" 106 3391 3412 "sPL_type.ml" 106 3391 3431
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 107 3435 3451 "sPL_type.ml" 107 3435 3453
type(
  bool
)
ident(
  def b2 "sPL_type.ml" 108 3472 3484 "sPL_type.ml" 109 3509 3535
)
"sPL_type.ml" 107 3435 3456 "sPL_type.ml" 107 3435 3459
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 107 3435 3460 "sPL_type.ml" 107 3435 3463
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 107 3435 3464 "sPL_type.ml" 107 3435 3466
type(
  SPL.sPL_expr
)
ident(
  int_ref e2 "sPL_type.ml" 105 3364 3381 "sPL_type.ml" 105 3364 3383
)
"sPL_type.ml" 107 3435 3467 "sPL_type.ml" 107 3435 3468
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 107 3435 3456 "sPL_type.ml" 107 3435 3468
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 108 3472 3488 "sPL_type.ml" 108 3472 3490
type(
  bool
)
ident(
  def b3 "sPL_type.ml" 109 3509 3521 "sPL_type.ml" 109 3509 3535
)
"sPL_type.ml" 108 3472 3493 "sPL_type.ml" 108 3472 3496
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 108 3472 3497 "sPL_type.ml" 108 3472 3500
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 108 3472 3501 "sPL_type.ml" 108 3472 3503
type(
  SPL.sPL_expr
)
ident(
  int_ref e3 "sPL_type.ml" 105 3364 3384 "sPL_type.ml" 105 3364 3386
)
"sPL_type.ml" 108 3472 3504 "sPL_type.ml" 108 3472 3505
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 108 3472 3493 "sPL_type.ml" 108 3472 3505
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 109 3509 3521 "sPL_type.ml" 109 3509 3523
type(
  bool
)
ident(
  int_ref b1 "sPL_type.ml" 106 3391 3407 "sPL_type.ml" 106 3391 3409
)
"sPL_type.ml" 109 3509 3524 "sPL_type.ml" 109 3509 3526
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"sPL_type.ml" 109 3509 3527 "sPL_type.ml" 109 3509 3529
type(
  bool
)
ident(
  int_ref b2 "sPL_type.ml" 107 3435 3451 "sPL_type.ml" 107 3435 3453
)
"sPL_type.ml" 109 3509 3530 "sPL_type.ml" 109 3509 3532
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"sPL_type.ml" 109 3509 3533 "sPL_type.ml" 109 3509 3535
type(
  bool
)
ident(
  int_ref b3 "sPL_type.ml" 108 3472 3488 "sPL_type.ml" 108 3472 3490
)
"sPL_type.ml" 109 3509 3527 "sPL_type.ml" 109 3509 3535
type(
  bool
)
"sPL_type.ml" 109 3509 3521 "sPL_type.ml" 109 3509 3535
type(
  bool
)
"sPL_type.ml" 108 3472 3484 "sPL_type.ml" 109 3509 3535
type(
  bool
)
"sPL_type.ml" 107 3435 3447 "sPL_type.ml" 109 3509 3535
type(
  bool
)
"sPL_type.ml" 106 3391 3403 "sPL_type.ml" 109 3509 3535
type(
  bool
)
"sPL_type.ml" 110 3536 3550 "sPL_type.ml" 110 3536 3552
type(
  SPL.sPL_type
)
ident(
  def te "sPL_type.ml" 111 3567 3579 "sPL_type.ml" 115 3768 3790
)
"sPL_type.ml" 110 3536 3553 "sPL_type.ml" 110 3536 3557
type(
  SPL.id list
)
ident(
  def args "sPL_type.ml" 111 3567 3579 "sPL_type.ml" 115 3768 3790
)
"sPL_type.ml" 110 3536 3558 "sPL_type.ml" 110 3536 3562
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 111 3567 3579 "sPL_type.ml" 115 3768 3790
)
"sPL_type.ml" 110 3536 3544 "sPL_type.ml" 110 3536 3563
type(
  SPL.sPL_expr
)
"sPL_type.ml" 111 3567 3582 "sPL_type.ml" 111 3567 3584
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 110 3536 3550 "sPL_type.ml" 110 3536 3552
)
"sPL_type.ml" 111 3567 3584 "sPL_type.ml" 111 3567 3585
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 111 3567 3585 "sPL_type.ml" 111 3567 3586
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 111 3567 3582 "sPL_type.ml" 111 3567 3586
type(
  bool
)
"sPL_type.ml" 112 3592 3612 "sPL_type.ml" 112 3592 3625
type(
  SPL.sPL_type ->
  SPL.id list -> ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 112 3592 3626 "sPL_type.ml" 112 3592 3628
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 110 3536 3550 "sPL_type.ml" 110 3536 3552
)
"sPL_type.ml" 112 3592 3629 "sPL_type.ml" 112 3592 3633
type(
  SPL.id list
)
ident(
  int_ref args "sPL_type.ml" 110 3536 3553 "sPL_type.ml" 110 3536 3557
)
"sPL_type.ml" 112 3592 3612 "sPL_type.ml" 112 3592 3633
call(
  stack
)
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 113 3639 3663 "sPL_type.ml" 113 3639 3667
type(
  (SPL.id * SPL.sPL_type) list
)
ident(
  def env2 "sPL_type.ml" 113 3639 3675 "sPL_type.ml" 113 3639 3697
)
"sPL_type.ml" 113 3639 3668 "sPL_type.ml" 113 3639 3670
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 113 3639 3675 "sPL_type.ml" 113 3639 3697
)
"sPL_type.ml" 113 3639 3657 "sPL_type.ml" 113 3639 3671
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  (SPL.id * SPL.sPL_type) list * SPL.sPL_type
)
"sPL_type.ml" 113 3639 3675 "sPL_type.ml" 113 3639 3678
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 113 3639 3680 "sPL_type.ml" 113 3639 3684
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  int_ref env2 "sPL_type.ml" 113 3639 3663 "sPL_type.ml" 113 3639 3667
)
"sPL_type.ml" 113 3639 3684 "sPL_type.ml" 113 3639 3685
type(
  (Debug.Basic.id * SPL.sPL_type) list ->
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  ext_ref Pervasives.( @ )
)
"sPL_type.ml" 113 3639 3685 "sPL_type.ml" 113 3639 3688
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 113 3639 3680 "sPL_type.ml" 113 3639 3688
call(
  stack
)
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
"sPL_type.ml" 113 3639 3690 "sPL_type.ml" 113 3639 3694
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 110 3536 3558 "sPL_type.ml" 110 3536 3562
)
"sPL_type.ml" 113 3639 3695 "sPL_type.ml" 113 3639 3697
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 113 3639 3668 "sPL_type.ml" 113 3639 3670
)
"sPL_type.ml" 113 3639 3675 "sPL_type.ml" 113 3639 3697
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 114 3698 3716 "sPL_type.ml" 114 3698 3720
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 114 3698 3724 "sPL_type.ml" 114 3698 3729
type(
  bool
)
"sPL_type.ml" 112 3592 3606 "sPL_type.ml" 114 3698 3729
type(
  bool
)
"sPL_type.ml" 115 3768 3785 "sPL_type.ml" 115 3768 3790
type(
  bool
)
"sPL_type.ml" 111 3567 3579 "sPL_type.ml" 115 3768 3790
type(
  bool
)
"sPL_type.ml" 116 3791 3808 "sPL_type.ml" 116 3791 3810
type(
  SPL.sPL_type
)
ident(
  def te "sPL_type.ml" 117 3828 3840 "sPL_type.ml" 121 4038 4060
)
"sPL_type.ml" 116 3791 3811 "sPL_type.ml" 116 3791 3813
type(
  SPL.id
)
ident(
  def id "sPL_type.ml" 117 3828 3840 "sPL_type.ml" 121 4038 4060
)
"sPL_type.ml" 116 3791 3814 "sPL_type.ml" 116 3791 3818
type(
  SPL.id list
)
ident(
  def args "sPL_type.ml" 117 3828 3840 "sPL_type.ml" 121 4038 4060
)
"sPL_type.ml" 116 3791 3819 "sPL_type.ml" 116 3791 3823
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 117 3828 3840 "sPL_type.ml" 121 4038 4060
)
"sPL_type.ml" 116 3791 3799 "sPL_type.ml" 116 3791 3824
type(
  SPL.sPL_expr
)
"sPL_type.ml" 117 3828 3843 "sPL_type.ml" 117 3828 3845
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 116 3791 3808 "sPL_type.ml" 116 3791 3810
)
"sPL_type.ml" 117 3828 3845 "sPL_type.ml" 117 3828 3846
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 117 3828 3846 "sPL_type.ml" 117 3828 3847
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 117 3828 3843 "sPL_type.ml" 117 3828 3847
type(
  bool
)
"sPL_type.ml" 118 3853 3873 "sPL_type.ml" 118 3853 3886
type(
  SPL.sPL_type ->
  SPL.id list -> ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 118 3853 3887 "sPL_type.ml" 118 3853 3889
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 116 3791 3808 "sPL_type.ml" 116 3791 3810
)
"sPL_type.ml" 118 3853 3890 "sPL_type.ml" 118 3853 3894
type(
  SPL.id list
)
ident(
  int_ref args "sPL_type.ml" 116 3791 3814 "sPL_type.ml" 116 3791 3818
)
"sPL_type.ml" 118 3853 3873 "sPL_type.ml" 118 3853 3894
call(
  stack
)
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 119 3900 3924 "sPL_type.ml" 119 3900 3928
type(
  (SPL.id * SPL.sPL_type) list
)
ident(
  def env2 "sPL_type.ml" 119 3900 3936 "sPL_type.ml" 119 3900 3967
)
"sPL_type.ml" 119 3900 3929 "sPL_type.ml" 119 3900 3931
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 119 3900 3936 "sPL_type.ml" 119 3900 3967
)
"sPL_type.ml" 119 3900 3918 "sPL_type.ml" 119 3900 3932
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  (SPL.id * SPL.sPL_type) list * SPL.sPL_type
)
"sPL_type.ml" 119 3900 3936 "sPL_type.ml" 119 3900 3939
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 119 3900 3942 "sPL_type.ml" 119 3900 3944
type(
  SPL.id
)
ident(
  int_ref id "sPL_type.ml" 116 3791 3811 "sPL_type.ml" 116 3791 3813
)
"sPL_type.ml" 119 3900 3945 "sPL_type.ml" 119 3900 3947
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 116 3791 3808 "sPL_type.ml" 116 3791 3810
)
"sPL_type.ml" 119 3900 3942 "sPL_type.ml" 119 3900 3947
type(
  Debug.Basic.id * SPL.sPL_type
)
"sPL_type.ml" 119 3900 3950 "sPL_type.ml" 119 3900 3954
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  int_ref env2 "sPL_type.ml" 119 3900 3924 "sPL_type.ml" 119 3900 3928
)
"sPL_type.ml" 119 3900 3941 "sPL_type.ml" 119 3900 3954
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
"sPL_type.ml" 119 3900 3954 "sPL_type.ml" 119 3900 3955
type(
  (Debug.Basic.id * SPL.sPL_type) list ->
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  ext_ref Pervasives.( @ )
)
"sPL_type.ml" 119 3900 3955 "sPL_type.ml" 119 3900 3958
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 119 3900 3941 "sPL_type.ml" 119 3900 3958
call(
  stack
)
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
"sPL_type.ml" 119 3900 3960 "sPL_type.ml" 119 3900 3964
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 116 3791 3819 "sPL_type.ml" 116 3791 3823
)
"sPL_type.ml" 119 3900 3965 "sPL_type.ml" 119 3900 3967
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 119 3900 3929 "sPL_type.ml" 119 3900 3931
)
"sPL_type.ml" 119 3900 3936 "sPL_type.ml" 119 3900 3967
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 120 3968 3986 "sPL_type.ml" 120 3968 3990
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 120 3968 3994 "sPL_type.ml" 120 3968 3999
type(
  bool
)
"sPL_type.ml" 118 3853 3867 "sPL_type.ml" 120 3968 3999
type(
  bool
)
"sPL_type.ml" 121 4038 4055 "sPL_type.ml" 121 4038 4060
type(
  bool
)
"sPL_type.ml" 117 3828 3840 "sPL_type.ml" 121 4038 4060
type(
  bool
)
"sPL_type.ml" 122 4061 4076 "sPL_type.ml" 122 4061 4078
type(
  SPL.sPL_expr
)
ident(
  def e1 "sPL_type.ml" 124 4109 4123 "sPL_type.ml" 133 4500 4580
)
"sPL_type.ml" 122 4061 4079 "sPL_type.ml" 122 4061 4081
type(
  SPL.sPL_type option
)
ident(
  def t1 "sPL_type.ml" 124 4109 4123 "sPL_type.ml" 133 4500 4580
)
"sPL_type.ml" 122 4061 4082 "sPL_type.ml" 122 4061 4086
type(
  SPL.sPL_expr list
)
ident(
  def args "sPL_type.ml" 124 4109 4123 "sPL_type.ml" 133 4500 4580
)
"sPL_type.ml" 122 4061 4069 "sPL_type.ml" 122 4061 4087
type(
  SPL.sPL_expr
)
"sPL_type.ml" 124 4109 4129 "sPL_type.ml" 124 4109 4131
type(
  SPL.sPL_type option
)
ident(
  int_ref t1 "sPL_type.ml" 122 4061 4079 "sPL_type.ml" 122 4061 4081
)
"sPL_type.ml" 125 4137 4160 "sPL_type.ml" 125 4137 4163
type(
  SPL.sPL_type
)
ident(
  def t1a "sPL_type.ml" 127 4195 4219 "sPL_type.ml" 131 4432 4473
)
"sPL_type.ml" 125 4137 4155 "sPL_type.ml" 125 4137 4163
type(
  SPL.sPL_type option
)
"sPL_type.ml" 127 4195 4225 "sPL_type.ml" 127 4195 4238
type(
  SPL.sPL_type ->
  SPL.sPL_expr list ->
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 127 4195 4239 "sPL_type.ml" 127 4195 4242
type(
  SPL.sPL_type
)
ident(
  int_ref t1a "sPL_type.ml" 125 4137 4160 "sPL_type.ml" 125 4137 4163
)
"sPL_type.ml" 127 4195 4243 "sPL_type.ml" 127 4195 4247
type(
  SPL.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 122 4061 4082 "sPL_type.ml" 122 4061 4086
)
"sPL_type.ml" 127 4195 4225 "sPL_type.ml" 127 4195 4247
call(
  stack
)
type(
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 128 4253 4287 "sPL_type.ml" 128 4253 4289
type(
  (SPL.sPL_expr * SPL.sPL_type) list
)
ident(
  def l2 "sPL_type.ml" 129 4297 4329 "sPL_type.ml" 130 4389 4431
)
"sPL_type.ml" 128 4253 4290 "sPL_type.ml" 128 4253 4292
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 129 4297 4329 "sPL_type.ml" 130 4389 4431
)
"sPL_type.ml" 128 4253 4281 "sPL_type.ml" 128 4253 4293
type(
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  (SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type
)
"sPL_type.ml" 129 4297 4332 "sPL_type.ml" 129 4297 4333
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 129 4297 4333 "sPL_type.ml" 129 4297 4334
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 129 4297 4334 "sPL_type.ml" 129 4297 4336
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 128 4253 4290 "sPL_type.ml" 128 4253 4292
)
"sPL_type.ml" 129 4297 4332 "sPL_type.ml" 129 4297 4336
type(
  bool
)
"sPL_type.ml" 129 4297 4342 "sPL_type.ml" 129 4297 4354
type(
  (SPL.sPL_expr * SPL.sPL_type -> bool) ->
  (SPL.sPL_expr * SPL.sPL_type) list -> bool
)
ident(
  ext_ref List.for_all
)
"sPL_type.ml" 129 4297 4361 "sPL_type.ml" 129 4297 4363
type(
  SPL.sPL_expr
)
ident(
  def ea "sPL_type.ml" 129 4297 4371 "sPL_type.ml" 129 4297 4384
)
"sPL_type.ml" 129 4297 4364 "sPL_type.ml" 129 4297 4366
type(
  SPL.sPL_type
)
ident(
  def ta "sPL_type.ml" 129 4297 4371 "sPL_type.ml" 129 4297 4384
)
"sPL_type.ml" 129 4297 4361 "sPL_type.ml" 129 4297 4366
type(
  SPL.sPL_expr * SPL.sPL_type
)
"sPL_type.ml" 129 4297 4371 "sPL_type.ml" 129 4297 4374
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 129 4297 4375 "sPL_type.ml" 129 4297 4378
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 129 4297 4379 "sPL_type.ml" 129 4297 4381
type(
  SPL.sPL_expr
)
ident(
  int_ref ea "sPL_type.ml" 129 4297 4361 "sPL_type.ml" 129 4297 4363
)
"sPL_type.ml" 129 4297 4382 "sPL_type.ml" 129 4297 4384
type(
  SPL.sPL_type
)
ident(
  int_ref ta "sPL_type.ml" 129 4297 4364 "sPL_type.ml" 129 4297 4366
)
"sPL_type.ml" 129 4297 4371 "sPL_type.ml" 129 4297 4384
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 129 4297 4360 "sPL_type.ml" 129 4297 4384
type(
  SPL.sPL_expr * SPL.sPL_type -> bool
)
"sPL_type.ml" 129 4297 4386 "sPL_type.ml" 129 4297 4388
type(
  (SPL.sPL_expr * SPL.sPL_type) list
)
ident(
  int_ref l2 "sPL_type.ml" 128 4253 4287 "sPL_type.ml" 128 4253 4289
)
"sPL_type.ml" 129 4297 4342 "sPL_type.ml" 129 4297 4388
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 130 4389 4426 "sPL_type.ml" 130 4389 4431
type(
  bool
)
"sPL_type.ml" 129 4297 4329 "sPL_type.ml" 130 4389 4431
type(
  bool
)
"sPL_type.ml" 131 4432 4460 "sPL_type.ml" 131 4432 4464
type(
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 131 4432 4468 "sPL_type.ml" 131 4432 4473
type(
  bool
)
"sPL_type.ml" 127 4195 4219 "sPL_type.ml" 131 4432 4473
type(
  bool
)
"sPL_type.ml" 133 4500 4518 "sPL_type.ml" 133 4500 4522
type(
  SPL.sPL_type option
)
"sPL_type.ml" 133 4500 4526 "sPL_type.ml" 133 4500 4534
type(
  string -> bool
)
ident(
  ext_ref Pervasives.failwith
)
"sPL_type.ml" 133 4500 4535 "sPL_type.ml" 133 4500 4580
type(
  string
)
"sPL_type.ml" 133 4500 4526 "sPL_type.ml" 133 4500 4580
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 124 4109 4123 "sPL_type.ml" 133 4500 4580
type(
  bool
)
"sPL_type.ml" 135 4597 4610 "sPL_type.ml" 135 4597 4615
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  def ldecl "sPL_type.ml" 136 4628 4640 "sPL_type.ml" 140 4841 4863
)
"sPL_type.ml" 135 4597 4616 "sPL_type.ml" 135 4597 4618
type(
  SPL.sPL_type
)
ident(
  def te "sPL_type.ml" 136 4628 4640 "sPL_type.ml" 140 4841 4863
)
"sPL_type.ml" 135 4597 4619 "sPL_type.ml" 135 4597 4623
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 136 4628 4640 "sPL_type.ml" 140 4841 4863
)
"sPL_type.ml" 135 4597 4605 "sPL_type.ml" 135 4597 4624
type(
  SPL.sPL_expr
)
"sPL_type.ml" 136 4628 4643 "sPL_type.ml" 136 4628 4645
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 135 4597 4616 "sPL_type.ml" 135 4597 4618
)
"sPL_type.ml" 136 4628 4645 "sPL_type.ml" 136 4628 4646
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 136 4628 4646 "sPL_type.ml" 136 4628 4647
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 73 2154 2174 "sPL_type.ml" 73 2154 2175
)
"sPL_type.ml" 136 4628 4643 "sPL_type.ml" 136 4628 4647
type(
  bool
)
"sPL_type.ml" 137 4653 4671 "sPL_type.ml" 137 4653 4675
type(
  (SPL.id * SPL.sPL_type) list
)
ident(
  def env2 "sPL_type.ml" 138 4719 4733 "sPL_type.ml" 139 4756 4840
)
"sPL_type.ml" 137 4653 4678 "sPL_type.ml" 137 4653 4686
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr -> SPL.id * SPL.sPL_type) ->
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> (SPL.id * SPL.sPL_type) list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 137 4653 4693 "sPL_type.ml" 137 4653 4694
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 137 4653 4704 "sPL_type.ml" 137 4653 4707
)
"sPL_type.ml" 137 4653 4695 "sPL_type.ml" 137 4653 4696
type(
  SPL.id
)
ident(
  def v "sPL_type.ml" 137 4653 4704 "sPL_type.ml" 137 4653 4707
)
"sPL_type.ml" 137 4653 4697 "sPL_type.ml" 137 4653 4698
type(
  SPL.sPL_expr
)
ident(
  def b "sPL_type.ml" 137 4653 4704 "sPL_type.ml" 137 4653 4707
)
"sPL_type.ml" 137 4653 4693 "sPL_type.ml" 137 4653 4698
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 137 4653 4704 "sPL_type.ml" 137 4653 4705
type(
  SPL.id
)
ident(
  int_ref v "sPL_type.ml" 137 4653 4695 "sPL_type.ml" 137 4653 4696
)
"sPL_type.ml" 137 4653 4706 "sPL_type.ml" 137 4653 4707
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 137 4653 4693 "sPL_type.ml" 137 4653 4694
)
"sPL_type.ml" 137 4653 4704 "sPL_type.ml" 137 4653 4707
type(
  SPL.id * SPL.sPL_type
)
"sPL_type.ml" 137 4653 4692 "sPL_type.ml" 137 4653 4708
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr -> SPL.id * SPL.sPL_type
)
"sPL_type.ml" 137 4653 4710 "sPL_type.ml" 137 4653 4715
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  int_ref ldecl "sPL_type.ml" 135 4597 4610 "sPL_type.ml" 135 4597 4615
)
"sPL_type.ml" 137 4653 4678 "sPL_type.ml" 137 4653 4715
call(
  stack
)
type(
  (SPL.id * SPL.sPL_type) list
)
"sPL_type.ml" 138 4719 4737 "sPL_type.ml" 138 4719 4741
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  def nenv "sPL_type.ml" 139 4756 4770 "sPL_type.ml" 139 4756 4840
)
"sPL_type.ml" 138 4719 4744 "sPL_type.ml" 138 4719 4748
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  int_ref env2 "sPL_type.ml" 137 4653 4671 "sPL_type.ml" 137 4653 4675
)
"sPL_type.ml" 138 4719 4748 "sPL_type.ml" 138 4719 4749
type(
  (Debug.Basic.id * SPL.sPL_type) list ->
  SPL.sPL_type Debug.Basic.Environ.et -> (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  ext_ref Pervasives.( @ )
)
"sPL_type.ml" 138 4719 4749 "sPL_type.ml" 138 4719 4752
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref env "sPL_type.ml" 73 2154 2168 "sPL_type.ml" 73 2154 2171
)
"sPL_type.ml" 138 4719 4744 "sPL_type.ml" 138 4719 4752
call(
  stack
)
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
"sPL_type.ml" 139 4756 4771 "sPL_type.ml" 139 4756 4774
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 139 4756 4775 "sPL_type.ml" 139 4756 4779
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref nenv "sPL_type.ml" 138 4719 4737 "sPL_type.ml" 138 4719 4741
)
"sPL_type.ml" 139 4756 4780 "sPL_type.ml" 139 4756 4784
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 135 4597 4619 "sPL_type.ml" 135 4597 4623
)
"sPL_type.ml" 139 4756 4785 "sPL_type.ml" 139 4756 4787
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 135 4597 4616 "sPL_type.ml" 135 4597 4618
)
"sPL_type.ml" 139 4756 4771 "sPL_type.ml" 139 4756 4787
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 139 4756 4789 "sPL_type.ml" 139 4756 4791
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"sPL_type.ml" 139 4756 4792 "sPL_type.ml" 139 4756 4804
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr -> bool) ->
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> bool
)
ident(
  ext_ref List.for_all
)
"sPL_type.ml" 139 4756 4811 "sPL_type.ml" 139 4756 4812
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 139 4756 4821 "sPL_type.ml" 139 4756 4833
)
"sPL_type.ml" 139 4756 4813 "sPL_type.ml" 139 4756 4814
type(
  SPL.id
)
"sPL_type.ml" 139 4756 4815 "sPL_type.ml" 139 4756 4816
type(
  SPL.sPL_expr
)
ident(
  def b "sPL_type.ml" 139 4756 4821 "sPL_type.ml" 139 4756 4833
)
"sPL_type.ml" 139 4756 4811 "sPL_type.ml" 139 4756 4816
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 139 4756 4821 "sPL_type.ml" 139 4756 4824
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 139 4756 4825 "sPL_type.ml" 139 4756 4829
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref nenv "sPL_type.ml" 138 4719 4737 "sPL_type.ml" 138 4719 4741
)
"sPL_type.ml" 139 4756 4830 "sPL_type.ml" 139 4756 4831
type(
  SPL.sPL_expr
)
ident(
  int_ref b "sPL_type.ml" 139 4756 4815 "sPL_type.ml" 139 4756 4816
)
"sPL_type.ml" 139 4756 4832 "sPL_type.ml" 139 4756 4833
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 139 4756 4811 "sPL_type.ml" 139 4756 4812
)
"sPL_type.ml" 139 4756 4821 "sPL_type.ml" 139 4756 4833
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 139 4756 4810 "sPL_type.ml" 139 4756 4833
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr -> bool
)
"sPL_type.ml" 139 4756 4835 "sPL_type.ml" 139 4756 4840
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  int_ref ldecl "sPL_type.ml" 135 4597 4610 "sPL_type.ml" 135 4597 4615
)
"sPL_type.ml" 139 4756 4792 "sPL_type.ml" 139 4756 4840
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 139 4756 4770 "sPL_type.ml" 139 4756 4840
type(
  bool
)
"sPL_type.ml" 138 4719 4733 "sPL_type.ml" 139 4756 4840
type(
  bool
)
"sPL_type.ml" 137 4653 4667 "sPL_type.ml" 139 4756 4840
type(
  bool
)
"sPL_type.ml" 140 4841 4858 "sPL_type.ml" 140 4841 4863
type(
  bool
)
"sPL_type.ml" 136 4628 4640 "sPL_type.ml" 140 4841 4863
type(
  bool
)
"sPL_type.ml" 74 2178 2182 "sPL_type.ml" 140 4841 4863
type(
  bool
)
"sPL_type.ml" 73 2154 2174 "sPL_type.ml" 140 4841 4863
type(
  SPL.sPL_type -> bool
)
"sPL_type.ml" 73 2154 2172 "sPL_type.ml" 140 4841 4863
type(
  SPL.sPL_expr -> SPL.sPL_type -> bool
)
"sPL_type.ml" 73 2154 2168 "sPL_type.ml" 140 4841 4863
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
"sPL_type.ml" 141 4864 4869 "sPL_type.ml" 141 4864 4872
type(
  SPL.sPL_type Debug.Basic.Environ.et -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
ident(
  int_ref aux "sPL_type.ml" 73 2154 2164 "sPL_type.ml" 73 2154 2167
)
"sPL_type.ml" 141 4864 4873 "sPL_type.ml" 141 4864 4876
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 72 2089 2105 "sPL_type.ml" 72 2089 2108
)
"sPL_type.ml" 141 4864 4877 "sPL_type.ml" 141 4864 4878
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 72 2089 2120 "sPL_type.ml" 72 2089 2121
)
"sPL_type.ml" 141 4864 4879 "sPL_type.ml" 141 4864 4880
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 72 2089 2133 "sPL_type.ml" 72 2089 2134
)
"sPL_type.ml" 141 4864 4869 "sPL_type.ml" 141 4864 4880
call(
  tail
)
type(
  bool
)
"sPL_type.ml" 73 2154 2156 "sPL_type.ml" 141 4864 4880
type(
  bool
)
type(
  bool
)
"sPL_type.ml" 72 2089 2132 "sPL_type.ml" 141 4864 4880
type(
  SPL.sPL_type -> bool
)
"sPL_type.ml" 72 2089 2119 "sPL_type.ml" 141 4864 4880
type(
  SPL.sPL_expr -> SPL.sPL_type -> bool
)
"sPL_type.ml" 72 2089 2104 "sPL_type.ml" 141 4864 4880
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type -> bool
)
"sPL_type.ml" 143 4882 4890 "sPL_type.ml" 143 4882 4901
type(
  SPL.sPL_type -> SPL.sPL_type
)
ident(
  def result_type "sPL_type.ml" 143 4882 4882 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 143 4882 4902 "sPL_type.ml" 143 4882 4903
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 144 4906 4908 "sPL_type.ml" 146 4957 4969
)
"sPL_type.ml" 144 4906 4914 "sPL_type.ml" 144 4906 4915
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 143 4882 4902 "sPL_type.ml" 143 4882 4903
)
"sPL_type.ml" 145 4921 4934 "sPL_type.ml" 145 4921 4935
type(
  SPL.sPL_type
)
ident(
  def s "sPL_type.ml" 145 4921 4943 "sPL_type.ml" 145 4921 4956
)
"sPL_type.ml" 145 4921 4937 "sPL_type.ml" 145 4921 4938
type(
  SPL.sPL_type
)
ident(
  def e "sPL_type.ml" 145 4921 4943 "sPL_type.ml" 145 4921 4956
)
"sPL_type.ml" 145 4921 4927 "sPL_type.ml" 145 4921 4939
type(
  SPL.sPL_type
)
"sPL_type.ml" 145 4921 4943 "sPL_type.ml" 145 4921 4954
type(
  SPL.sPL_type -> SPL.sPL_type
)
ident(
  int_ref result_type "sPL_type.ml" 143 4882 4890 "sPL_type.ml" 143 4882 4901
)
"sPL_type.ml" 145 4921 4955 "sPL_type.ml" 145 4921 4956
type(
  SPL.sPL_type
)
ident(
  int_ref e "sPL_type.ml" 145 4921 4937 "sPL_type.ml" 145 4921 4938
)
"sPL_type.ml" 145 4921 4943 "sPL_type.ml" 145 4921 4956
call(
  tail
)
type(
  SPL.sPL_type
)
"sPL_type.ml" 146 4957 4963 "sPL_type.ml" 146 4957 4964
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 146 4957 4968 "sPL_type.ml" 146 4957 4969
)
"sPL_type.ml" 146 4957 4968 "sPL_type.ml" 146 4957 4969
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 146 4957 4963 "sPL_type.ml" 146 4957 4964
)
"sPL_type.ml" 144 4906 4908 "sPL_type.ml" 146 4957 4969
type(
  SPL.sPL_type
)
"sPL_type.ml" 143 4882 4902 "sPL_type.ml" 146 4957 4969
type(
  SPL.sPL_type -> SPL.sPL_type
)
"sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  def type_infer "sPL_type.ml" 150 5062 5062 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
type(
  env_type
)
ident(
  def env "sPL_type.ml" 150 5062 5096 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
type(
  SPL.sPL_expr
)
ident(
  def e "sPL_type.ml" 150 5062 5109 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 151 5140 5148 "sPL_type.ml" 151 5140 5149
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 152 5155 5170 "sPL_type.ml" 152 5155 5171
type(
  int
)
"sPL_type.ml" 152 5155 5161 "sPL_type.ml" 152 5155 5171
type(
  SPL.sPL_expr
)
"sPL_type.ml" 152 5155 5181 "sPL_type.ml" 152 5155 5188
type(
  SPL.sPL_type
)
"sPL_type.ml" 152 5155 5176 "sPL_type.ml" 152 5155 5188
type(
  SPL.sPL_type option
)
"sPL_type.ml" 152 5155 5189 "sPL_type.ml" 152 5155 5190
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 152 5155 5176 "sPL_type.ml" 152 5155 5190
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 153 5192 5208 "sPL_type.ml" 153 5192 5209
type(
  bool
)
"sPL_type.ml" 153 5192 5198 "sPL_type.ml" 153 5192 5209
type(
  SPL.sPL_expr
)
"sPL_type.ml" 153 5192 5219 "sPL_type.ml" 153 5192 5227
type(
  SPL.sPL_type
)
"sPL_type.ml" 153 5192 5214 "sPL_type.ml" 153 5192 5227
type(
  SPL.sPL_type option
)
"sPL_type.ml" 153 5192 5228 "sPL_type.ml" 153 5192 5229
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 153 5192 5214 "sPL_type.ml" 153 5192 5229
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 154 5231 5241 "sPL_type.ml" 154 5231 5242
type(
  SPL.id
)
ident(
  def v "sPL_type.ml" 154 5231 5247 "sPL_type.ml" 154 5231 5263
)
"sPL_type.ml" 154 5231 5237 "sPL_type.ml" 154 5231 5242
type(
  SPL.sPL_expr
)
"sPL_type.ml" 154 5231 5247 "sPL_type.ml" 154 5231 5255
type(
  SPL.sPL_type Debug.Basic.Environ.et ->
  Debug.Basic.id -> SPL.sPL_type option
)
ident(
  int_ref get_type "sPL_type.ml" 23 512 516 "sPL_type.ml" 23 512 524
)
"sPL_type.ml" 154 5231 5256 "sPL_type.ml" 154 5231 5259
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 154 5231 5260 "sPL_type.ml" 154 5231 5261
type(
  SPL.id
)
ident(
  int_ref v "sPL_type.ml" 154 5231 5241 "sPL_type.ml" 154 5231 5242
)
"sPL_type.ml" 154 5231 5247 "sPL_type.ml" 154 5231 5261
call(
  stack
)
type(
  SPL.sPL_type option
)
"sPL_type.ml" 154 5231 5262 "sPL_type.ml" 154 5231 5263
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 154 5231 5247 "sPL_type.ml" 154 5231 5263
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 155 5265 5285 "sPL_type.ml" 155 5265 5287
type(
  SPL.op_id
)
ident(
  def op "sPL_type.ml" 157 5312 5324 "sPL_type.ml" 168 5790 5819
)
"sPL_type.ml" 155 5265 5288 "sPL_type.ml" 155 5265 5291
type(
  SPL.sPL_expr
)
ident(
  def arg "sPL_type.ml" 157 5312 5324 "sPL_type.ml" 168 5790 5819
)
"sPL_type.ml" 155 5265 5271 "sPL_type.ml" 155 5265 5292
type(
  SPL.sPL_expr
)
"sPL_type.ml" 157 5312 5330 "sPL_type.ml" 157 5312 5332
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 155 5265 5285 "sPL_type.ml" 155 5265 5287
)
"sPL_type.ml" 158 5338 5354 "sPL_type.ml" 158 5338 5357
type(
  SPL.op_id
)
"sPL_type.ml" 159 5361 5386 "sPL_type.ml" 159 5361 5389
type(
  SPL.sPL_type option
)
ident(
  def at2 "sPL_type.ml" 160 5419 5440 "sPL_type.ml" 162 5524 5561
)
"sPL_type.ml" 159 5361 5390 "sPL_type.ml" 159 5361 5393
type(
  SPL.sPL_expr
)
ident(
  def na2 "sPL_type.ml" 160 5419 5440 "sPL_type.ml" 162 5524 5561
)
"sPL_type.ml" 159 5361 5386 "sPL_type.ml" 159 5361 5393
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 159 5361 5397 "sPL_type.ml" 159 5361 5407
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 159 5361 5408 "sPL_type.ml" 159 5361 5411
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 159 5361 5412 "sPL_type.ml" 159 5361 5415
type(
  SPL.sPL_expr
)
ident(
  int_ref arg "sPL_type.ml" 155 5265 5288 "sPL_type.ml" 155 5265 5291
)
"sPL_type.ml" 159 5361 5397 "sPL_type.ml" 159 5361 5415
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 160 5419 5446 "sPL_type.ml" 160 5419 5449
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 159 5361 5386 "sPL_type.ml" 159 5361 5389
)
"sPL_type.ml" 161 5455 5484 "sPL_type.ml" 161 5455 5491
type(
  SPL.sPL_type
)
"sPL_type.ml" 161 5455 5479 "sPL_type.ml" 161 5455 5491
type(
  SPL.sPL_type option
)
"sPL_type.ml" 161 5455 5496 "sPL_type.ml" 161 5455 5499
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 159 5361 5386 "sPL_type.ml" 159 5361 5389
)
"sPL_type.ml" 161 5455 5515 "sPL_type.ml" 161 5455 5517
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 155 5265 5285 "sPL_type.ml" 155 5265 5287
)
"sPL_type.ml" 161 5455 5518 "sPL_type.ml" 161 5455 5521
type(
  SPL.sPL_expr
)
ident(
  int_ref na2 "sPL_type.ml" 159 5361 5390 "sPL_type.ml" 159 5361 5393
)
"sPL_type.ml" 161 5455 5501 "sPL_type.ml" 161 5455 5522
type(
  SPL.sPL_expr
)
"sPL_type.ml" 161 5455 5496 "sPL_type.ml" 161 5455 5522
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 162 5524 5548 "sPL_type.ml" 162 5524 5549
type(
  SPL.sPL_type option
)
"sPL_type.ml" 162 5524 5554 "sPL_type.ml" 162 5524 5558
type(
  SPL.sPL_type option
)
"sPL_type.ml" 162 5524 5559 "sPL_type.ml" 162 5524 5560
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 162 5524 5554 "sPL_type.ml" 162 5524 5560
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 160 5419 5440 "sPL_type.ml" 162 5524 5561
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 159 5361 5381 "sPL_type.ml" 162 5524 5562
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 163 5563 5579 "sPL_type.ml" 163 5563 5583
type(
  SPL.op_id
)
"sPL_type.ml" 164 5587 5612 "sPL_type.ml" 164 5587 5615
type(
  SPL.sPL_type option
)
ident(
  def at2 "sPL_type.ml" 165 5645 5666 "sPL_type.ml" 167 5751 5788
)
"sPL_type.ml" 164 5587 5616 "sPL_type.ml" 164 5587 5619
type(
  SPL.sPL_expr
)
ident(
  def na2 "sPL_type.ml" 165 5645 5666 "sPL_type.ml" 167 5751 5788
)
"sPL_type.ml" 164 5587 5612 "sPL_type.ml" 164 5587 5619
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 164 5587 5623 "sPL_type.ml" 164 5587 5633
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 164 5587 5634 "sPL_type.ml" 164 5587 5637
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 164 5587 5638 "sPL_type.ml" 164 5587 5641
type(
  SPL.sPL_expr
)
ident(
  int_ref arg "sPL_type.ml" 155 5265 5288 "sPL_type.ml" 155 5265 5291
)
"sPL_type.ml" 164 5587 5623 "sPL_type.ml" 164 5587 5641
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 165 5645 5672 "sPL_type.ml" 165 5645 5675
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 164 5587 5612 "sPL_type.ml" 164 5587 5615
)
"sPL_type.ml" 166 5681 5710 "sPL_type.ml" 166 5681 5718
type(
  SPL.sPL_type
)
"sPL_type.ml" 166 5681 5705 "sPL_type.ml" 166 5681 5718
type(
  SPL.sPL_type option
)
"sPL_type.ml" 166 5681 5723 "sPL_type.ml" 166 5681 5726
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 164 5587 5612 "sPL_type.ml" 164 5587 5615
)
"sPL_type.ml" 166 5681 5742 "sPL_type.ml" 166 5681 5744
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 155 5265 5285 "sPL_type.ml" 155 5265 5287
)
"sPL_type.ml" 166 5681 5745 "sPL_type.ml" 166 5681 5748
type(
  SPL.sPL_expr
)
ident(
  int_ref na2 "sPL_type.ml" 164 5587 5616 "sPL_type.ml" 164 5587 5619
)
"sPL_type.ml" 166 5681 5728 "sPL_type.ml" 166 5681 5749
type(
  SPL.sPL_expr
)
"sPL_type.ml" 166 5681 5723 "sPL_type.ml" 166 5681 5749
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 167 5751 5775 "sPL_type.ml" 167 5751 5776
type(
  SPL.sPL_type option
)
"sPL_type.ml" 167 5751 5781 "sPL_type.ml" 167 5751 5785
type(
  SPL.sPL_type option
)
"sPL_type.ml" 167 5751 5786 "sPL_type.ml" 167 5751 5787
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 167 5751 5781 "sPL_type.ml" 167 5751 5787
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 165 5645 5666 "sPL_type.ml" 167 5751 5788
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 164 5587 5607 "sPL_type.ml" 167 5751 5789
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 168 5790 5806 "sPL_type.ml" 168 5790 5807
type(
  SPL.op_id
)
"sPL_type.ml" 168 5790 5812 "sPL_type.ml" 168 5790 5816
type(
  SPL.sPL_type option
)
"sPL_type.ml" 168 5790 5817 "sPL_type.ml" 168 5790 5818
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 168 5790 5812 "sPL_type.ml" 168 5790 5818
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 157 5312 5324 "sPL_type.ml" 168 5790 5819
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 170 5834 5855 "sPL_type.ml" 170 5834 5857
type(
  SPL.op_id
)
ident(
  def op "sPL_type.ml" 172 5888 5900 "sPL_type.ml" 191 6894 6923
)
"sPL_type.ml" 170 5834 5858 "sPL_type.ml" 170 5834 5862
type(
  SPL.sPL_expr
)
ident(
  def arg1 "sPL_type.ml" 172 5888 5900 "sPL_type.ml" 191 6894 6923
)
"sPL_type.ml" 170 5834 5863 "sPL_type.ml" 170 5834 5867
type(
  SPL.sPL_expr
)
ident(
  def arg2 "sPL_type.ml" 172 5888 5900 "sPL_type.ml" 191 6894 6923
)
"sPL_type.ml" 170 5834 5840 "sPL_type.ml" 170 5834 5868
type(
  SPL.sPL_expr
)
"sPL_type.ml" 172 5888 5906 "sPL_type.ml" 172 5888 5908
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 170 5834 5855 "sPL_type.ml" 170 5834 5857
)
"sPL_type.ml" 173 5914 5930 "sPL_type.ml" 173 5914 5933
type(
  SPL.op_id
)
"sPL_type.ml" 173 5914 5936 "sPL_type.ml" 173 5914 5939
type(
  SPL.op_id
)
"sPL_type.ml" 173 5914 5930 "sPL_type.ml" 173 5914 5939
type(
  SPL.op_id
)
"sPL_type.ml" 173 5914 5942 "sPL_type.ml" 173 5914 5945
type(
  SPL.op_id
)
"sPL_type.ml" 173 5914 5930 "sPL_type.ml" 173 5914 5945
type(
  SPL.op_id
)
"sPL_type.ml" 173 5914 5948 "sPL_type.ml" 173 5914 5951
type(
  SPL.op_id
)
"sPL_type.ml" 173 5914 5930 "sPL_type.ml" 173 5914 5951
type(
  SPL.op_id
)
"sPL_type.ml" 174 5956 5981 "sPL_type.ml" 174 5956 5984
type(
  SPL.sPL_type option
)
ident(
  def at1 "sPL_type.ml" 175 6015 6035 "sPL_type.ml" 178 6201 6239
)
"sPL_type.ml" 174 5956 5985 "sPL_type.ml" 174 5956 5988
type(
  SPL.sPL_expr
)
ident(
  def na1 "sPL_type.ml" 175 6015 6035 "sPL_type.ml" 178 6201 6239
)
"sPL_type.ml" 174 5956 5981 "sPL_type.ml" 174 5956 5988
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 174 5956 5992 "sPL_type.ml" 174 5956 6002
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 174 5956 6003 "sPL_type.ml" 174 5956 6006
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 174 5956 6007 "sPL_type.ml" 174 5956 6011
type(
  SPL.sPL_expr
)
ident(
  int_ref arg1 "sPL_type.ml" 170 5834 5858 "sPL_type.ml" 170 5834 5862
)
"sPL_type.ml" 174 5956 5992 "sPL_type.ml" 174 5956 6011
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 175 6015 6040 "sPL_type.ml" 175 6015 6043
type(
  SPL.sPL_type option
)
ident(
  def at2 "sPL_type.ml" 176 6074 6095 "sPL_type.ml" 178 6201 6238
)
"sPL_type.ml" 175 6015 6044 "sPL_type.ml" 175 6015 6047
type(
  SPL.sPL_expr
)
ident(
  def na2 "sPL_type.ml" 176 6074 6095 "sPL_type.ml" 178 6201 6238
)
"sPL_type.ml" 175 6015 6040 "sPL_type.ml" 175 6015 6047
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 175 6015 6051 "sPL_type.ml" 175 6015 6061
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 175 6015 6062 "sPL_type.ml" 175 6015 6065
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 175 6015 6066 "sPL_type.ml" 175 6015 6070
type(
  SPL.sPL_expr
)
ident(
  int_ref arg2 "sPL_type.ml" 170 5834 5863 "sPL_type.ml" 170 5834 5867
)
"sPL_type.ml" 175 6015 6051 "sPL_type.ml" 175 6015 6070
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 176 6074 6101 "sPL_type.ml" 176 6074 6104
type(
  SPL.sPL_type option
)
ident(
  int_ref at1 "sPL_type.ml" 174 5956 5981 "sPL_type.ml" 174 5956 5984
)
"sPL_type.ml" 176 6074 6105 "sPL_type.ml" 176 6074 6108
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 175 6015 6040 "sPL_type.ml" 175 6015 6043
)
"sPL_type.ml" 176 6074 6101 "sPL_type.ml" 176 6074 6108
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 177 6114 6143 "sPL_type.ml" 177 6114 6150
type(
  SPL.sPL_type
)
"sPL_type.ml" 177 6114 6138 "sPL_type.ml" 177 6114 6150
type(
  SPL.sPL_type option
)
"sPL_type.ml" 177 6114 6156 "sPL_type.ml" 177 6114 6163
type(
  SPL.sPL_type
)
"sPL_type.ml" 177 6114 6151 "sPL_type.ml" 177 6114 6163
type(
  SPL.sPL_type option
)
"sPL_type.ml" 177 6114 6138 "sPL_type.ml" 177 6114 6163
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 177 6114 6168 "sPL_type.ml" 177 6114 6171
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 175 6015 6040 "sPL_type.ml" 175 6015 6043
)
"sPL_type.ml" 177 6114 6188 "sPL_type.ml" 177 6114 6190
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 170 5834 5855 "sPL_type.ml" 170 5834 5857
)
"sPL_type.ml" 177 6114 6191 "sPL_type.ml" 177 6114 6194
type(
  SPL.sPL_expr
)
ident(
  int_ref na1 "sPL_type.ml" 174 5956 5985 "sPL_type.ml" 174 5956 5988
)
"sPL_type.ml" 177 6114 6195 "sPL_type.ml" 177 6114 6198
type(
  SPL.sPL_expr
)
ident(
  int_ref na2 "sPL_type.ml" 175 6015 6044 "sPL_type.ml" 175 6015 6047
)
"sPL_type.ml" 177 6114 6173 "sPL_type.ml" 177 6114 6199
type(
  SPL.sPL_expr
)
"sPL_type.ml" 177 6114 6168 "sPL_type.ml" 177 6114 6199
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 178 6201 6225 "sPL_type.ml" 178 6201 6226
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 178 6201 6231 "sPL_type.ml" 178 6201 6235
type(
  SPL.sPL_type option
)
"sPL_type.ml" 178 6201 6236 "sPL_type.ml" 178 6201 6237
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 178 6201 6231 "sPL_type.ml" 178 6201 6237
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 176 6074 6095 "sPL_type.ml" 178 6201 6238
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 175 6015 6035 "sPL_type.ml" 178 6201 6239
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 174 5956 5976 "sPL_type.ml" 178 6201 6239
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 179 6240 6256 "sPL_type.ml" 179 6240 6259
type(
  SPL.op_id
)
"sPL_type.ml" 179 6240 6262 "sPL_type.ml" 179 6240 6265
type(
  SPL.op_id
)
"sPL_type.ml" 179 6240 6256 "sPL_type.ml" 179 6240 6265
type(
  SPL.op_id
)
"sPL_type.ml" 179 6240 6268 "sPL_type.ml" 179 6240 6271
type(
  SPL.op_id
)
"sPL_type.ml" 179 6240 6256 "sPL_type.ml" 179 6240 6271
type(
  SPL.op_id
)
"sPL_type.ml" 180 6275 6300 "sPL_type.ml" 180 6275 6303
type(
  SPL.sPL_type option
)
ident(
  def at1 "sPL_type.ml" 181 6334 6354 "sPL_type.ml" 184 6530 6568
)
"sPL_type.ml" 180 6275 6304 "sPL_type.ml" 180 6275 6307
type(
  SPL.sPL_expr
)
ident(
  def na1 "sPL_type.ml" 181 6334 6354 "sPL_type.ml" 184 6530 6568
)
"sPL_type.ml" 180 6275 6300 "sPL_type.ml" 180 6275 6307
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 180 6275 6311 "sPL_type.ml" 180 6275 6321
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 180 6275 6322 "sPL_type.ml" 180 6275 6325
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 180 6275 6326 "sPL_type.ml" 180 6275 6330
type(
  SPL.sPL_expr
)
ident(
  int_ref arg1 "sPL_type.ml" 170 5834 5858 "sPL_type.ml" 170 5834 5862
)
"sPL_type.ml" 180 6275 6311 "sPL_type.ml" 180 6275 6330
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 181 6334 6359 "sPL_type.ml" 181 6334 6362
type(
  SPL.sPL_type option
)
ident(
  def at2 "sPL_type.ml" 182 6393 6414 "sPL_type.ml" 184 6530 6567
)
"sPL_type.ml" 181 6334 6363 "sPL_type.ml" 181 6334 6366
type(
  SPL.sPL_expr
)
ident(
  def na2 "sPL_type.ml" 182 6393 6414 "sPL_type.ml" 184 6530 6567
)
"sPL_type.ml" 181 6334 6359 "sPL_type.ml" 181 6334 6366
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 181 6334 6370 "sPL_type.ml" 181 6334 6380
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 181 6334 6381 "sPL_type.ml" 181 6334 6384
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 181 6334 6385 "sPL_type.ml" 181 6334 6389
type(
  SPL.sPL_expr
)
ident(
  int_ref arg2 "sPL_type.ml" 170 5834 5863 "sPL_type.ml" 170 5834 5867
)
"sPL_type.ml" 181 6334 6370 "sPL_type.ml" 181 6334 6389
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 182 6393 6420 "sPL_type.ml" 182 6393 6423
type(
  SPL.sPL_type option
)
ident(
  int_ref at1 "sPL_type.ml" 180 6275 6300 "sPL_type.ml" 180 6275 6303
)
"sPL_type.ml" 182 6393 6424 "sPL_type.ml" 182 6393 6427
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 181 6334 6359 "sPL_type.ml" 181 6334 6362
)
"sPL_type.ml" 182 6393 6420 "sPL_type.ml" 182 6393 6427
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 183 6433 6462 "sPL_type.ml" 183 6433 6469
type(
  SPL.sPL_type
)
"sPL_type.ml" 183 6433 6457 "sPL_type.ml" 183 6433 6469
type(
  SPL.sPL_type option
)
"sPL_type.ml" 183 6433 6475 "sPL_type.ml" 183 6433 6482
type(
  SPL.sPL_type
)
"sPL_type.ml" 183 6433 6470 "sPL_type.ml" 183 6433 6482
type(
  SPL.sPL_type option
)
"sPL_type.ml" 183 6433 6457 "sPL_type.ml" 183 6433 6482
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 183 6433 6492 "sPL_type.ml" 183 6433 6500
type(
  SPL.sPL_type
)
"sPL_type.ml" 183 6433 6487 "sPL_type.ml" 183 6433 6500
type(
  SPL.sPL_type option
)
"sPL_type.ml" 183 6433 6517 "sPL_type.ml" 183 6433 6519
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 170 5834 5855 "sPL_type.ml" 170 5834 5857
)
"sPL_type.ml" 183 6433 6520 "sPL_type.ml" 183 6433 6523
type(
  SPL.sPL_expr
)
ident(
  int_ref na1 "sPL_type.ml" 180 6275 6304 "sPL_type.ml" 180 6275 6307
)
"sPL_type.ml" 183 6433 6524 "sPL_type.ml" 183 6433 6527
type(
  SPL.sPL_expr
)
ident(
  int_ref na2 "sPL_type.ml" 181 6334 6363 "sPL_type.ml" 181 6334 6366
)
"sPL_type.ml" 183 6433 6502 "sPL_type.ml" 183 6433 6528
type(
  SPL.sPL_expr
)
"sPL_type.ml" 183 6433 6487 "sPL_type.ml" 183 6433 6528
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 184 6530 6554 "sPL_type.ml" 184 6530 6555
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 184 6530 6560 "sPL_type.ml" 184 6530 6564
type(
  SPL.sPL_type option
)
"sPL_type.ml" 184 6530 6565 "sPL_type.ml" 184 6530 6566
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 184 6530 6560 "sPL_type.ml" 184 6530 6566
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 182 6393 6414 "sPL_type.ml" 184 6530 6567
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 181 6334 6354 "sPL_type.ml" 184 6530 6568
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 180 6275 6295 "sPL_type.ml" 184 6530 6568
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 185 6569 6585 "sPL_type.ml" 185 6569 6588
type(
  SPL.op_id
)
"sPL_type.ml" 185 6569 6591 "sPL_type.ml" 185 6569 6594
type(
  SPL.op_id
)
"sPL_type.ml" 185 6569 6585 "sPL_type.ml" 185 6569 6594
type(
  SPL.op_id
)
"sPL_type.ml" 186 6598 6623 "sPL_type.ml" 186 6598 6626
type(
  SPL.sPL_type option
)
ident(
  def at1 "sPL_type.ml" 187 6657 6677 "sPL_type.ml" 190 6855 6893
)
"sPL_type.ml" 186 6598 6627 "sPL_type.ml" 186 6598 6630
type(
  SPL.sPL_expr
)
ident(
  def na1 "sPL_type.ml" 187 6657 6677 "sPL_type.ml" 190 6855 6893
)
"sPL_type.ml" 186 6598 6623 "sPL_type.ml" 186 6598 6630
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 186 6598 6634 "sPL_type.ml" 186 6598 6644
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 186 6598 6645 "sPL_type.ml" 186 6598 6648
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 186 6598 6649 "sPL_type.ml" 186 6598 6653
type(
  SPL.sPL_expr
)
ident(
  int_ref arg1 "sPL_type.ml" 170 5834 5858 "sPL_type.ml" 170 5834 5862
)
"sPL_type.ml" 186 6598 6634 "sPL_type.ml" 186 6598 6653
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 187 6657 6682 "sPL_type.ml" 187 6657 6685
type(
  SPL.sPL_type option
)
ident(
  def at2 "sPL_type.ml" 188 6716 6737 "sPL_type.ml" 190 6855 6892
)
"sPL_type.ml" 187 6657 6686 "sPL_type.ml" 187 6657 6689
type(
  SPL.sPL_expr
)
ident(
  def na2 "sPL_type.ml" 188 6716 6737 "sPL_type.ml" 190 6855 6892
)
"sPL_type.ml" 187 6657 6682 "sPL_type.ml" 187 6657 6689
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 187 6657 6693 "sPL_type.ml" 187 6657 6703
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 187 6657 6704 "sPL_type.ml" 187 6657 6707
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 187 6657 6708 "sPL_type.ml" 187 6657 6712
type(
  SPL.sPL_expr
)
ident(
  int_ref arg2 "sPL_type.ml" 170 5834 5863 "sPL_type.ml" 170 5834 5867
)
"sPL_type.ml" 187 6657 6693 "sPL_type.ml" 187 6657 6712
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 188 6716 6743 "sPL_type.ml" 188 6716 6746
type(
  SPL.sPL_type option
)
ident(
  int_ref at1 "sPL_type.ml" 186 6598 6623 "sPL_type.ml" 186 6598 6626
)
"sPL_type.ml" 188 6716 6747 "sPL_type.ml" 188 6716 6750
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 187 6657 6682 "sPL_type.ml" 187 6657 6685
)
"sPL_type.ml" 188 6716 6743 "sPL_type.ml" 188 6716 6750
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 189 6756 6785 "sPL_type.ml" 189 6756 6793
type(
  SPL.sPL_type
)
"sPL_type.ml" 189 6756 6780 "sPL_type.ml" 189 6756 6793
type(
  SPL.sPL_type option
)
"sPL_type.ml" 189 6756 6799 "sPL_type.ml" 189 6756 6807
type(
  SPL.sPL_type
)
"sPL_type.ml" 189 6756 6794 "sPL_type.ml" 189 6756 6807
type(
  SPL.sPL_type option
)
"sPL_type.ml" 189 6756 6780 "sPL_type.ml" 189 6756 6807
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 189 6756 6817 "sPL_type.ml" 189 6756 6825
type(
  SPL.sPL_type
)
"sPL_type.ml" 189 6756 6812 "sPL_type.ml" 189 6756 6825
type(
  SPL.sPL_type option
)
"sPL_type.ml" 189 6756 6842 "sPL_type.ml" 189 6756 6844
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 170 5834 5855 "sPL_type.ml" 170 5834 5857
)
"sPL_type.ml" 189 6756 6845 "sPL_type.ml" 189 6756 6848
type(
  SPL.sPL_expr
)
ident(
  int_ref na1 "sPL_type.ml" 186 6598 6627 "sPL_type.ml" 186 6598 6630
)
"sPL_type.ml" 189 6756 6849 "sPL_type.ml" 189 6756 6852
type(
  SPL.sPL_expr
)
ident(
  int_ref na2 "sPL_type.ml" 187 6657 6686 "sPL_type.ml" 187 6657 6689
)
"sPL_type.ml" 189 6756 6827 "sPL_type.ml" 189 6756 6853
type(
  SPL.sPL_expr
)
"sPL_type.ml" 189 6756 6812 "sPL_type.ml" 189 6756 6853
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 190 6855 6879 "sPL_type.ml" 190 6855 6880
type(
  SPL.sPL_type option * SPL.sPL_type option
)
"sPL_type.ml" 190 6855 6885 "sPL_type.ml" 190 6855 6889
type(
  SPL.sPL_type option
)
"sPL_type.ml" 190 6855 6890 "sPL_type.ml" 190 6855 6891
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 190 6855 6885 "sPL_type.ml" 190 6855 6891
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 188 6716 6737 "sPL_type.ml" 190 6855 6892
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 187 6657 6677 "sPL_type.ml" 190 6855 6893
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 186 6598 6618 "sPL_type.ml" 190 6855 6893
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 191 6894 6910 "sPL_type.ml" 191 6894 6911
type(
  SPL.op_id
)
"sPL_type.ml" 191 6894 6916 "sPL_type.ml" 191 6894 6920
type(
  SPL.sPL_type option
)
"sPL_type.ml" 191 6894 6921 "sPL_type.ml" 191 6894 6922
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 191 6894 6916 "sPL_type.ml" 191 6894 6922
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 172 5888 5900 "sPL_type.ml" 191 6894 6923
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 193 6938 6950 "sPL_type.ml" 193 6938 6952
type(
  SPL.sPL_expr
)
ident(
  def e1 "sPL_type.ml" 197 7068 7076 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 193 6938 6953 "sPL_type.ml" 193 6938 6955
type(
  SPL.sPL_expr
)
ident(
  def e2 "sPL_type.ml" 197 7068 7076 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 193 6938 6956 "sPL_type.ml" 193 6938 6958
type(
  SPL.sPL_expr
)
ident(
  def e3 "sPL_type.ml" 197 7068 7076 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 193 6938 6944 "sPL_type.ml" 193 6938 6959
type(
  SPL.sPL_expr
)
"sPL_type.ml" 197 7068 7081 "sPL_type.ml" 197 7068 7086
type(
  SPL.sPL_type option
)
ident(
  def condt "sPL_type.ml" 198 7115 7123 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 197 7068 7087 "sPL_type.ml" 197 7068 7090
type(
  SPL.sPL_expr
)
ident(
  def ne1 "sPL_type.ml" 198 7115 7123 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 197 7068 7081 "sPL_type.ml" 197 7068 7090
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 197 7068 7094 "sPL_type.ml" 197 7068 7104
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 197 7068 7105 "sPL_type.ml" 197 7068 7108
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 197 7068 7109 "sPL_type.ml" 197 7068 7111
type(
  SPL.sPL_expr
)
ident(
  int_ref e1 "sPL_type.ml" 193 6938 6950 "sPL_type.ml" 193 6938 6952
)
"sPL_type.ml" 197 7068 7094 "sPL_type.ml" 197 7068 7111
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 198 7115 7128 "sPL_type.ml" 198 7115 7131
type(
  SPL.sPL_type option
)
ident(
  def at1 "sPL_type.ml" 199 7161 7169 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 198 7115 7133 "sPL_type.ml" 198 7115 7136
type(
  SPL.sPL_expr
)
ident(
  def ne2 "sPL_type.ml" 199 7161 7169 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 198 7115 7128 "sPL_type.ml" 198 7115 7136
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 198 7115 7140 "sPL_type.ml" 198 7115 7150
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 198 7115 7151 "sPL_type.ml" 198 7115 7154
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 198 7115 7155 "sPL_type.ml" 198 7115 7157
type(
  SPL.sPL_expr
)
ident(
  int_ref e2 "sPL_type.ml" 193 6938 6953 "sPL_type.ml" 193 6938 6955
)
"sPL_type.ml" 198 7115 7140 "sPL_type.ml" 198 7115 7157
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 199 7161 7174 "sPL_type.ml" 199 7161 7177
type(
  SPL.sPL_type option
)
ident(
  def at2 "sPL_type.ml" 200 7207 7215 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 199 7161 7179 "sPL_type.ml" 199 7161 7182
type(
  SPL.sPL_expr
)
ident(
  def ne3 "sPL_type.ml" 200 7207 7215 "sPL_type.ml" 202 7319 7344
)
"sPL_type.ml" 199 7161 7174 "sPL_type.ml" 199 7161 7182
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 199 7161 7186 "sPL_type.ml" 199 7161 7196
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 199 7161 7197 "sPL_type.ml" 199 7161 7200
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 199 7161 7201 "sPL_type.ml" 199 7161 7203
type(
  SPL.sPL_expr
)
ident(
  int_ref e3 "sPL_type.ml" 193 6938 6956 "sPL_type.ml" 193 6938 6958
)
"sPL_type.ml" 199 7161 7186 "sPL_type.ml" 199 7161 7203
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 200 7207 7221 "sPL_type.ml" 200 7207 7226
type(
  SPL.sPL_type option
)
ident(
  int_ref condt "sPL_type.ml" 197 7068 7081 "sPL_type.ml" 197 7068 7086
)
"sPL_type.ml" 201 7232 7249 "sPL_type.ml" 201 7232 7257
type(
  SPL.sPL_type
)
"sPL_type.ml" 201 7232 7244 "sPL_type.ml" 201 7232 7257
type(
  SPL.sPL_type option
)
"sPL_type.ml" 201 7232 7264 "sPL_type.ml" 201 7232 7267
type(
  SPL.sPL_type option
)
ident(
  int_ref at1 "sPL_type.ml" 198 7115 7128 "sPL_type.ml" 198 7115 7131
)
"sPL_type.ml" 201 7232 7268 "sPL_type.ml" 201 7232 7269
type(
  SPL.sPL_type option -> SPL.sPL_type option -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 201 7232 7270 "sPL_type.ml" 201 7232 7273
type(
  SPL.sPL_type option
)
ident(
  int_ref at2 "sPL_type.ml" 199 7161 7174 "sPL_type.ml" 199 7161 7177
)
"sPL_type.ml" 201 7232 7264 "sPL_type.ml" 201 7232 7273
type(
  bool
)
"sPL_type.ml" 201 7232 7280 "sPL_type.ml" 201 7232 7283
type(
  SPL.sPL_type option
)
ident(
  int_ref at1 "sPL_type.ml" 198 7115 7128 "sPL_type.ml" 198 7115 7131
)
"sPL_type.ml" 201 7232 7291 "sPL_type.ml" 201 7232 7294
type(
  SPL.sPL_expr
)
ident(
  int_ref ne1 "sPL_type.ml" 197 7068 7087 "sPL_type.ml" 197 7068 7090
)
"sPL_type.ml" 201 7232 7295 "sPL_type.ml" 201 7232 7298
type(
  SPL.sPL_expr
)
ident(
  int_ref ne2 "sPL_type.ml" 198 7115 7133 "sPL_type.ml" 198 7115 7136
)
"sPL_type.ml" 201 7232 7299 "sPL_type.ml" 201 7232 7302
type(
  SPL.sPL_expr
)
ident(
  int_ref ne3 "sPL_type.ml" 199 7161 7179 "sPL_type.ml" 199 7161 7182
)
"sPL_type.ml" 201 7232 7285 "sPL_type.ml" 201 7232 7303
type(
  SPL.sPL_expr
)
"sPL_type.ml" 201 7232 7280 "sPL_type.ml" 201 7232 7303
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 201 7232 7311 "sPL_type.ml" 201 7232 7315
type(
  SPL.sPL_type option
)
"sPL_type.ml" 201 7232 7316 "sPL_type.ml" 201 7232 7317
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 201 7232 7311 "sPL_type.ml" 201 7232 7317
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 201 7232 7261 "sPL_type.ml" 201 7232 7318
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 202 7319 7331 "sPL_type.ml" 202 7319 7332
type(
  SPL.sPL_type option
)
"sPL_type.ml" 202 7319 7337 "sPL_type.ml" 202 7319 7341
type(
  SPL.sPL_type option
)
"sPL_type.ml" 202 7319 7342 "sPL_type.ml" 202 7319 7343
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 202 7319 7337 "sPL_type.ml" 202 7319 7343
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 200 7207 7215 "sPL_type.ml" 202 7319 7344
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 199 7161 7169 "sPL_type.ml" 202 7319 7344
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 198 7115 7123 "sPL_type.ml" 202 7319 7344
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 197 7068 7076 "sPL_type.ml" 202 7319 7344
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 205 7356 7368 "sPL_type.ml" 205 7356 7370
type(
  SPL.sPL_type
)
ident(
  def te "sPL_type.ml" 211 7615 7623 "sPL_type.ml" 221 8082 8108
)
"sPL_type.ml" 205 7356 7371 "sPL_type.ml" 205 7356 7375
type(
  SPL.id list
)
ident(
  def args "sPL_type.ml" 211 7615 7623 "sPL_type.ml" 221 8082 8108
)
"sPL_type.ml" 205 7356 7376 "sPL_type.ml" 205 7356 7380
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 211 7615 7623 "sPL_type.ml" 221 8082 8108
)
"sPL_type.ml" 205 7356 7362 "sPL_type.ml" 205 7356 7381
type(
  SPL.sPL_expr
)
"sPL_type.ml" 211 7615 7627 "sPL_type.ml" 211 7615 7636
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  def arg_types "sPL_type.ml" 212 7664 7672 "sPL_type.ml" 221 8082 8108
)
"sPL_type.ml" 211 7615 7639 "sPL_type.ml" 211 7615 7652
type(
  SPL.sPL_type ->
  SPL.id list -> ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 211 7615 7653 "sPL_type.ml" 211 7615 7655
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 205 7356 7368 "sPL_type.ml" 205 7356 7370
)
"sPL_type.ml" 211 7615 7656 "sPL_type.ml" 211 7615 7660
type(
  SPL.id list
)
ident(
  int_ref args "sPL_type.ml" 205 7356 7371 "sPL_type.ml" 205 7356 7375
)
"sPL_type.ml" 211 7615 7639 "sPL_type.ml" 211 7615 7660
call(
  stack
)
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 212 7664 7678 "sPL_type.ml" 212 7664 7687
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref arg_types "sPL_type.ml" 211 7615 7627 "sPL_type.ml" 211 7615 7636
)
"sPL_type.ml" 213 7693 7711 "sPL_type.ml" 213 7693 7725
type(
  (SPL.id * SPL.sPL_type) list
)
ident(
  def arg_type_pairs "sPL_type.ml" 215 7760 7774 "sPL_type.ml" 219 8030 8065
)
"sPL_type.ml" 213 7693 7727 "sPL_type.ml" 213 7693 7737
type(
  SPL.sPL_type
)
ident(
  def rest_types "sPL_type.ml" 215 7760 7774 "sPL_type.ml" 219 8030 8065
)
"sPL_type.ml" 213 7693 7705 "sPL_type.ml" 213 7693 7738
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  (SPL.id * SPL.sPL_type) list * SPL.sPL_type
)
"sPL_type.ml" 215 7760 7778 "sPL_type.ml" 215 7760 7785
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  def new_env "sPL_type.ml" 216 7829 7843 "sPL_type.ml" 219 8030 8065
)
"sPL_type.ml" 215 7760 7788 "sPL_type.ml" 215 7760 7806
type(
  SPL.sPL_type Debug.Basic.Environ.et ->
  (Debug.Basic.id * SPL.sPL_type) list -> SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  ext_ref Debug.Basic.Environ.extend_env
)
"sPL_type.ml" 215 7760 7807 "sPL_type.ml" 215 7760 7810
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 215 7760 7811 "sPL_type.ml" 215 7760 7825
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  int_ref arg_type_pairs "sPL_type.ml" 213 7693 7711 "sPL_type.ml" 213 7693 7725
)
"sPL_type.ml" 215 7760 7788 "sPL_type.ml" 215 7760 7825
call(
  stack
)
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
"sPL_type.ml" 216 7829 7848 "sPL_type.ml" 216 7829 7857
type(
  SPL.sPL_type option
)
ident(
  def body_type "sPL_type.ml" 217 7895 7909 "sPL_type.ml" 219 8030 8065
)
"sPL_type.ml" 216 7829 7859 "sPL_type.ml" 216 7829 7864
type(
  SPL.sPL_expr
)
ident(
  def nbody "sPL_type.ml" 217 7895 7909 "sPL_type.ml" 219 8030 8065
)
"sPL_type.ml" 216 7829 7848 "sPL_type.ml" 216 7829 7864
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 216 7829 7868 "sPL_type.ml" 216 7829 7878
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 216 7829 7879 "sPL_type.ml" 216 7829 7886
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref new_env "sPL_type.ml" 215 7760 7778 "sPL_type.ml" 215 7760 7785
)
"sPL_type.ml" 216 7829 7887 "sPL_type.ml" 216 7829 7891
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 205 7356 7376 "sPL_type.ml" 205 7356 7380
)
"sPL_type.ml" 216 7829 7868 "sPL_type.ml" 216 7829 7891
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 217 7895 7915 "sPL_type.ml" 217 7895 7924
type(
  SPL.sPL_type option
)
ident(
  int_ref body_type "sPL_type.ml" 216 7829 7848 "sPL_type.ml" 216 7829 7857
)
"sPL_type.ml" 218 7930 7953 "sPL_type.ml" 218 7930 7954
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 218 7930 7958 "sPL_type.ml" 218 7930 8029
)
"sPL_type.ml" 218 7930 7948 "sPL_type.ml" 218 7930 7954
type(
  SPL.sPL_type option
)
"sPL_type.ml" 218 7930 7961 "sPL_type.ml" 218 7930 7962
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 218 7930 7953 "sPL_type.ml" 218 7930 7954
)
"sPL_type.ml" 218 7930 7963 "sPL_type.ml" 218 7930 7964
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 218 7930 7965 "sPL_type.ml" 218 7930 7975
type(
  SPL.sPL_type
)
ident(
  int_ref rest_types "sPL_type.ml" 213 7693 7727 "sPL_type.ml" 213 7693 7737
)
"sPL_type.ml" 218 7930 7961 "sPL_type.ml" 218 7930 7975
type(
  bool
)
"sPL_type.ml" 218 7930 7987 "sPL_type.ml" 218 7930 7989
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 205 7356 7368 "sPL_type.ml" 205 7356 7370
)
"sPL_type.ml" 218 7930 7982 "sPL_type.ml" 218 7930 7989
type(
  SPL.sPL_type option
)
"sPL_type.ml" 218 7930 7997 "sPL_type.ml" 218 7930 7999
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 205 7356 7368 "sPL_type.ml" 205 7356 7370
)
"sPL_type.ml" 218 7930 8001 "sPL_type.ml" 218 7930 8005
type(
  SPL.id list
)
ident(
  int_ref args "sPL_type.ml" 205 7356 7371 "sPL_type.ml" 205 7356 7375
)
"sPL_type.ml" 218 7930 8007 "sPL_type.ml" 218 7930 8012
type(
  SPL.sPL_expr
)
ident(
  int_ref nbody "sPL_type.ml" 216 7829 7859 "sPL_type.ml" 216 7829 7864
)
"sPL_type.ml" 218 7930 7991 "sPL_type.ml" 218 7930 8013
type(
  SPL.sPL_expr
)
"sPL_type.ml" 218 7930 7982 "sPL_type.ml" 218 7930 8013
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 218 7930 8021 "sPL_type.ml" 218 7930 8025
type(
  SPL.sPL_type option
)
"sPL_type.ml" 218 7930 8027 "sPL_type.ml" 218 7930 8028
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 218 7930 8021 "sPL_type.ml" 218 7930 8028
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 218 7930 7958 "sPL_type.ml" 218 7930 8029
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 219 8030 8048 "sPL_type.ml" 219 8030 8052
type(
  SPL.sPL_type option
)
"sPL_type.ml" 219 8030 8057 "sPL_type.ml" 219 8030 8061
type(
  SPL.sPL_type option
)
"sPL_type.ml" 219 8030 8063 "sPL_type.ml" 219 8030 8064
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 219 8030 8057 "sPL_type.ml" 219 8030 8064
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 217 7895 7909 "sPL_type.ml" 219 8030 8065
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 216 7829 7843 "sPL_type.ml" 219 8030 8065
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 215 7760 7774 "sPL_type.ml" 219 8030 8065
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 221 8082 8094 "sPL_type.ml" 221 8082 8095
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 221 8082 8100 "sPL_type.ml" 221 8082 8104
type(
  SPL.sPL_type option
)
"sPL_type.ml" 221 8082 8106 "sPL_type.ml" 221 8082 8107
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 221 8082 8100 "sPL_type.ml" 221 8082 8107
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 212 7664 7672 "sPL_type.ml" 221 8082 8108
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 211 7615 7623 "sPL_type.ml" 221 8082 8108
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 224 8120 8135 "sPL_type.ml" 224 8120 8137
type(
  SPL.sPL_type
)
ident(
  def te "sPL_type.ml" 230 8384 8392 "sPL_type.ml" 240 8867 8893
)
"sPL_type.ml" 224 8120 8138 "sPL_type.ml" 224 8120 8140
type(
  SPL.id
)
ident(
  def id "sPL_type.ml" 230 8384 8392 "sPL_type.ml" 240 8867 8893
)
"sPL_type.ml" 224 8120 8141 "sPL_type.ml" 224 8120 8145
type(
  SPL.id list
)
ident(
  def args "sPL_type.ml" 230 8384 8392 "sPL_type.ml" 240 8867 8893
)
"sPL_type.ml" 224 8120 8146 "sPL_type.ml" 224 8120 8150
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 230 8384 8392 "sPL_type.ml" 240 8867 8893
)
"sPL_type.ml" 224 8120 8126 "sPL_type.ml" 224 8120 8151
type(
  SPL.sPL_expr
)
"sPL_type.ml" 230 8384 8396 "sPL_type.ml" 230 8384 8405
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  def arg_types "sPL_type.ml" 231 8433 8441 "sPL_type.ml" 240 8867 8893
)
"sPL_type.ml" 230 8384 8408 "sPL_type.ml" 230 8384 8421
type(
  SPL.sPL_type ->
  SPL.id list -> ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 230 8384 8422 "sPL_type.ml" 230 8384 8424
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 224 8120 8135 "sPL_type.ml" 224 8120 8137
)
"sPL_type.ml" 230 8384 8425 "sPL_type.ml" 230 8384 8429
type(
  SPL.id list
)
ident(
  int_ref args "sPL_type.ml" 224 8120 8141 "sPL_type.ml" 224 8120 8145
)
"sPL_type.ml" 230 8384 8408 "sPL_type.ml" 230 8384 8429
call(
  stack
)
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 231 8433 8447 "sPL_type.ml" 231 8433 8456
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref arg_types "sPL_type.ml" 230 8384 8396 "sPL_type.ml" 230 8384 8405
)
"sPL_type.ml" 232 8462 8480 "sPL_type.ml" 232 8462 8494
type(
  (SPL.id * SPL.sPL_type) list
)
ident(
  def arg_type_pairs "sPL_type.ml" 234 8529 8543 "sPL_type.ml" 238 8815 8850
)
"sPL_type.ml" 232 8462 8496 "sPL_type.ml" 232 8462 8506
type(
  SPL.sPL_type
)
ident(
  def rest_types "sPL_type.ml" 234 8529 8543 "sPL_type.ml" 238 8815 8850
)
"sPL_type.ml" 232 8462 8474 "sPL_type.ml" 232 8462 8507
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  (SPL.id * SPL.sPL_type) list * SPL.sPL_type
)
"sPL_type.ml" 234 8529 8547 "sPL_type.ml" 234 8529 8554
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  def new_env "sPL_type.ml" 235 8609 8623 "sPL_type.ml" 238 8815 8850
)
"sPL_type.ml" 234 8529 8557 "sPL_type.ml" 234 8529 8575
type(
  SPL.sPL_type Debug.Basic.Environ.et ->
  (Debug.Basic.id * SPL.sPL_type) list -> SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  ext_ref Debug.Basic.Environ.extend_env
)
"sPL_type.ml" 234 8529 8576 "sPL_type.ml" 234 8529 8579
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 234 8529 8582 "sPL_type.ml" 234 8529 8584
type(
  SPL.id
)
ident(
  int_ref id "sPL_type.ml" 224 8120 8138 "sPL_type.ml" 224 8120 8140
)
"sPL_type.ml" 234 8529 8585 "sPL_type.ml" 234 8529 8587
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 224 8120 8135 "sPL_type.ml" 224 8120 8137
)
"sPL_type.ml" 234 8529 8582 "sPL_type.ml" 234 8529 8587
type(
  Debug.Basic.id * SPL.sPL_type
)
"sPL_type.ml" 234 8529 8590 "sPL_type.ml" 234 8529 8604
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  int_ref arg_type_pairs "sPL_type.ml" 232 8462 8480 "sPL_type.ml" 232 8462 8494
)
"sPL_type.ml" 234 8529 8581 "sPL_type.ml" 234 8529 8604
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
"sPL_type.ml" 234 8529 8557 "sPL_type.ml" 234 8529 8605
call(
  stack
)
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
"sPL_type.ml" 235 8609 8628 "sPL_type.ml" 235 8609 8637
type(
  SPL.sPL_type option
)
ident(
  def body_type "sPL_type.ml" 236 8675 8689 "sPL_type.ml" 238 8815 8850
)
"sPL_type.ml" 235 8609 8639 "sPL_type.ml" 235 8609 8644
type(
  SPL.sPL_expr
)
ident(
  def nbody "sPL_type.ml" 236 8675 8689 "sPL_type.ml" 238 8815 8850
)
"sPL_type.ml" 235 8609 8628 "sPL_type.ml" 235 8609 8644
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 235 8609 8648 "sPL_type.ml" 235 8609 8658
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 235 8609 8659 "sPL_type.ml" 235 8609 8666
type(
  SPL.sPL_type Debug.Basic.Environ.et
)
ident(
  int_ref new_env "sPL_type.ml" 234 8529 8547 "sPL_type.ml" 234 8529 8554
)
"sPL_type.ml" 235 8609 8667 "sPL_type.ml" 235 8609 8671
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 224 8120 8146 "sPL_type.ml" 224 8120 8150
)
"sPL_type.ml" 235 8609 8648 "sPL_type.ml" 235 8609 8671
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 236 8675 8695 "sPL_type.ml" 236 8675 8704
type(
  SPL.sPL_type option
)
ident(
  int_ref body_type "sPL_type.ml" 235 8609 8628 "sPL_type.ml" 235 8609 8637
)
"sPL_type.ml" 237 8710 8733 "sPL_type.ml" 237 8710 8734
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 237 8710 8738 "sPL_type.ml" 237 8710 8814
)
"sPL_type.ml" 237 8710 8728 "sPL_type.ml" 237 8710 8734
type(
  SPL.sPL_type option
)
"sPL_type.ml" 237 8710 8741 "sPL_type.ml" 237 8710 8742
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 237 8710 8733 "sPL_type.ml" 237 8710 8734
)
"sPL_type.ml" 237 8710 8743 "sPL_type.ml" 237 8710 8744
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 237 8710 8745 "sPL_type.ml" 237 8710 8755
type(
  SPL.sPL_type
)
ident(
  int_ref rest_types "sPL_type.ml" 232 8462 8496 "sPL_type.ml" 232 8462 8506
)
"sPL_type.ml" 237 8710 8741 "sPL_type.ml" 237 8710 8755
type(
  bool
)
"sPL_type.ml" 237 8710 8767 "sPL_type.ml" 237 8710 8769
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 224 8120 8135 "sPL_type.ml" 224 8120 8137
)
"sPL_type.ml" 237 8710 8762 "sPL_type.ml" 237 8710 8769
type(
  SPL.sPL_type option
)
"sPL_type.ml" 237 8710 8780 "sPL_type.ml" 237 8710 8782
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 224 8120 8135 "sPL_type.ml" 224 8120 8137
)
"sPL_type.ml" 237 8710 8783 "sPL_type.ml" 237 8710 8785
type(
  SPL.id
)
ident(
  int_ref id "sPL_type.ml" 224 8120 8138 "sPL_type.ml" 224 8120 8140
)
"sPL_type.ml" 237 8710 8786 "sPL_type.ml" 237 8710 8790
type(
  SPL.id list
)
ident(
  int_ref args "sPL_type.ml" 224 8120 8141 "sPL_type.ml" 224 8120 8145
)
"sPL_type.ml" 237 8710 8792 "sPL_type.ml" 237 8710 8797
type(
  SPL.sPL_expr
)
ident(
  int_ref nbody "sPL_type.ml" 235 8609 8639 "sPL_type.ml" 235 8609 8644
)
"sPL_type.ml" 237 8710 8771 "sPL_type.ml" 237 8710 8798
type(
  SPL.sPL_expr
)
"sPL_type.ml" 237 8710 8762 "sPL_type.ml" 237 8710 8798
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 237 8710 8806 "sPL_type.ml" 237 8710 8810
type(
  SPL.sPL_type option
)
"sPL_type.ml" 237 8710 8812 "sPL_type.ml" 237 8710 8813
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 237 8710 8806 "sPL_type.ml" 237 8710 8813
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 237 8710 8738 "sPL_type.ml" 237 8710 8814
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 238 8815 8833 "sPL_type.ml" 238 8815 8837
type(
  SPL.sPL_type option
)
"sPL_type.ml" 238 8815 8842 "sPL_type.ml" 238 8815 8846
type(
  SPL.sPL_type option
)
"sPL_type.ml" 238 8815 8848 "sPL_type.ml" 238 8815 8849
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 238 8815 8842 "sPL_type.ml" 238 8815 8849
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 236 8675 8689 "sPL_type.ml" 238 8815 8850
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 235 8609 8623 "sPL_type.ml" 238 8815 8850
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 234 8529 8543 "sPL_type.ml" 238 8815 8850
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 240 8867 8879 "sPL_type.ml" 240 8867 8880
type(
  ((SPL.id * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 240 8867 8885 "sPL_type.ml" 240 8867 8889
type(
  SPL.sPL_type option
)
"sPL_type.ml" 240 8867 8891 "sPL_type.ml" 240 8867 8892
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 240 8867 8885 "sPL_type.ml" 240 8867 8892
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 231 8433 8441 "sPL_type.ml" 240 8867 8893
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 230 8384 8392 "sPL_type.ml" 240 8867 8893
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 243 8905 8918 "sPL_type.ml" 243 8905 8920
type(
  SPL.sPL_expr
)
ident(
  def e1 "sPL_type.ml" 249 9155 9163 "sPL_type.ml" 269 10091 10125
)
"sPL_type.ml" 243 8905 8921 "sPL_type.ml" 243 8905 8922
type(
  SPL.sPL_type option
)
"sPL_type.ml" 243 8905 8923 "sPL_type.ml" 243 8905 8927
type(
  SPL.sPL_expr list
)
ident(
  def args "sPL_type.ml" 249 9155 9163 "sPL_type.ml" 269 10091 10125
)
"sPL_type.ml" 243 8905 8911 "sPL_type.ml" 243 8905 8928
type(
  SPL.sPL_expr
)
"sPL_type.ml" 249 9155 9169 "sPL_type.ml" 249 9155 9179
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 249 9155 9180 "sPL_type.ml" 249 9155 9183
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 249 9155 9184 "sPL_type.ml" 249 9155 9186
type(
  SPL.sPL_expr
)
ident(
  int_ref e1 "sPL_type.ml" 243 8905 8918 "sPL_type.ml" 243 8905 8920
)
"sPL_type.ml" 249 9155 9169 "sPL_type.ml" 249 9155 9186
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 250 9192 9209 "sPL_type.ml" 250 9192 9212
type(
  SPL.sPL_type
)
ident(
  def e1t "sPL_type.ml" 252 9242 9256 "sPL_type.ml" 267 10039 10074
)
"sPL_type.ml" 250 9192 9204 "sPL_type.ml" 250 9192 9212
type(
  SPL.sPL_type option
)
"sPL_type.ml" 250 9192 9214 "sPL_type.ml" 250 9192 9220
type(
  SPL.sPL_expr
)
ident(
  def new_e1 "sPL_type.ml" 252 9242 9256 "sPL_type.ml" 267 10039 10074
)
"sPL_type.ml" 250 9192 9204 "sPL_type.ml" 250 9192 9220
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 252 9242 9262 "sPL_type.ml" 252 9242 9275
type(
  SPL.sPL_type ->
  SPL.sPL_expr list ->
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 252 9242 9276 "sPL_type.ml" 252 9242 9279
type(
  SPL.sPL_type
)
ident(
  int_ref e1t "sPL_type.ml" 250 9192 9209 "sPL_type.ml" 250 9192 9212
)
"sPL_type.ml" 252 9242 9280 "sPL_type.ml" 252 9242 9284
type(
  SPL.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 243 8905 8923 "sPL_type.ml" 243 8905 8927
)
"sPL_type.ml" 252 9242 9262 "sPL_type.ml" 252 9242 9284
call(
  stack
)
type(
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 253 9290 9314 "sPL_type.ml" 253 9290 9328
type(
  (SPL.sPL_expr * SPL.sPL_type) list
)
ident(
  def arg_type_pairs "sPL_type.ml" 255 9368 9388 "sPL_type.ml" 265 9985 10016
)
"sPL_type.ml" 253 9290 9330 "sPL_type.ml" 253 9290 9339
type(
  SPL.sPL_type
)
ident(
  def rest_type "sPL_type.ml" 255 9368 9388 "sPL_type.ml" 265 9985 10016
)
"sPL_type.ml" 253 9290 9308 "sPL_type.ml" 253 9290 9340
type(
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  (SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type
)
"sPL_type.ml" 255 9368 9392 "sPL_type.ml" 255 9368 9402
type(
  (SPL.sPL_type option * SPL.sPL_expr) list
)
ident(
  def infer_args "sPL_type.ml" 256 9453 9473 "sPL_type.ml" 265 9985 10016
)
"sPL_type.ml" 255 9368 9405 "sPL_type.ml" 255 9368 9409
type(
  SPL.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 243 8905 8923 "sPL_type.ml" 243 8905 8927
)
"sPL_type.ml" 255 9368 9410 "sPL_type.ml" 255 9368 9412
type(
  SPL.sPL_expr list ->
  (SPL.sPL_expr list -> (SPL.sPL_type option * SPL.sPL_expr) list) ->
  (SPL.sPL_type option * SPL.sPL_expr) list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 255 9368 9413 "sPL_type.ml" 255 9368 9421
type(
  (SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr) ->
  SPL.sPL_expr list -> (SPL.sPL_type option * SPL.sPL_expr) list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 255 9368 9427 "sPL_type.ml" 255 9368 9428
type(
  SPL.sPL_expr
)
ident(
  def a "sPL_type.ml" 255 9368 9432 "sPL_type.ml" 255 9368 9448
)
"sPL_type.ml" 255 9368 9432 "sPL_type.ml" 255 9368 9442
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 255 9368 9443 "sPL_type.ml" 255 9368 9446
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 255 9368 9447 "sPL_type.ml" 255 9368 9448
type(
  SPL.sPL_expr
)
ident(
  int_ref a "sPL_type.ml" 255 9368 9427 "sPL_type.ml" 255 9368 9428
)
"sPL_type.ml" 255 9368 9432 "sPL_type.ml" 255 9368 9448
call(
  tail
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 255 9368 9427 "sPL_type.ml" 255 9368 9448
type(
  SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 255 9368 9413 "sPL_type.ml" 255 9368 9449
type(
  SPL.sPL_expr list -> (SPL.sPL_type option * SPL.sPL_expr) list
)
"sPL_type.ml" 255 9368 9405 "sPL_type.ml" 255 9368 9449
call(
  stack
)
type(
  (SPL.sPL_type option * SPL.sPL_expr) list
)
"sPL_type.ml" 256 9453 9477 "sPL_type.ml" 256 9453 9485
type(
  SPL.sPL_expr list
)
ident(
  def new_args "sPL_type.ml" 257 9531 9551 "sPL_type.ml" 265 9985 10016
)
"sPL_type.ml" 256 9453 9488 "sPL_type.ml" 256 9453 9498
type(
  (SPL.sPL_type option * SPL.sPL_expr) list
)
ident(
  int_ref infer_args "sPL_type.ml" 255 9368 9392 "sPL_type.ml" 255 9368 9402
)
"sPL_type.ml" 256 9453 9499 "sPL_type.ml" 256 9453 9501
type(
  (SPL.sPL_type option * SPL.sPL_expr) list ->
  ((SPL.sPL_type option * SPL.sPL_expr) list -> SPL.sPL_expr list) ->
  SPL.sPL_expr list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 256 9453 9502 "sPL_type.ml" 256 9453 9510
type(
  (SPL.sPL_type option * SPL.sPL_expr -> SPL.sPL_expr) ->
  (SPL.sPL_type option * SPL.sPL_expr) list -> SPL.sPL_expr list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 256 9453 9516 "sPL_type.ml" 256 9453 9517
type(
  SPL.sPL_type option * SPL.sPL_expr
)
ident(
  def a "sPL_type.ml" 256 9453 9521 "sPL_type.ml" 256 9453 9526
)
"sPL_type.ml" 256 9453 9521 "sPL_type.ml" 256 9453 9524
type(
  SPL.sPL_type option * SPL.sPL_expr -> SPL.sPL_expr
)
ident(
  ext_ref Pervasives.snd
)
"sPL_type.ml" 256 9453 9525 "sPL_type.ml" 256 9453 9526
type(
  SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref a "sPL_type.ml" 256 9453 9516 "sPL_type.ml" 256 9453 9517
)
"sPL_type.ml" 256 9453 9521 "sPL_type.ml" 256 9453 9526
type(
  SPL.sPL_expr
)
"sPL_type.ml" 256 9453 9516 "sPL_type.ml" 256 9453 9526
type(
  SPL.sPL_type option * SPL.sPL_expr -> SPL.sPL_expr
)
"sPL_type.ml" 256 9453 9502 "sPL_type.ml" 256 9453 9527
type(
  (SPL.sPL_type option * SPL.sPL_expr) list -> SPL.sPL_expr list
)
"sPL_type.ml" 256 9453 9488 "sPL_type.ml" 256 9453 9527
call(
  stack
)
type(
  SPL.sPL_expr list
)
"sPL_type.ml" 257 9531 9555 "sPL_type.ml" 257 9531 9578
type(
  SPL.sPL_type option list
)
ident(
  def inferred_arg_type_pairs "sPL_type.ml" 259 9646 9666 "sPL_type.ml" 265 9985 10016
)
"sPL_type.ml" 258 9581 9603 "sPL_type.ml" 258 9581 9613
type(
  (SPL.sPL_type option * SPL.sPL_expr) list
)
ident(
  int_ref infer_args "sPL_type.ml" 255 9368 9392 "sPL_type.ml" 255 9368 9402
)
"sPL_type.ml" 258 9581 9614 "sPL_type.ml" 258 9581 9616
type(
  (SPL.sPL_type option * SPL.sPL_expr) list ->
  ((SPL.sPL_type option * SPL.sPL_expr) list -> SPL.sPL_type option list) ->
  SPL.sPL_type option list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 258 9581 9617 "sPL_type.ml" 258 9581 9625
type(
  (SPL.sPL_type option * SPL.sPL_expr -> SPL.sPL_type option) ->
  (SPL.sPL_type option * SPL.sPL_expr) list -> SPL.sPL_type option list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 258 9581 9631 "sPL_type.ml" 258 9581 9632
type(
  SPL.sPL_type option * SPL.sPL_expr
)
ident(
  def a "sPL_type.ml" 258 9581 9636 "sPL_type.ml" 258 9581 9641
)
"sPL_type.ml" 258 9581 9636 "sPL_type.ml" 258 9581 9639
type(
  SPL.sPL_type option * SPL.sPL_expr -> SPL.sPL_type option
)
ident(
  ext_ref Pervasives.fst
)
"sPL_type.ml" 258 9581 9640 "sPL_type.ml" 258 9581 9641
type(
  SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref a "sPL_type.ml" 258 9581 9631 "sPL_type.ml" 258 9581 9632
)
"sPL_type.ml" 258 9581 9636 "sPL_type.ml" 258 9581 9641
type(
  SPL.sPL_type option
)
"sPL_type.ml" 258 9581 9631 "sPL_type.ml" 258 9581 9641
type(
  SPL.sPL_type option * SPL.sPL_expr -> SPL.sPL_type option
)
"sPL_type.ml" 258 9581 9617 "sPL_type.ml" 258 9581 9642
type(
  (SPL.sPL_type option * SPL.sPL_expr) list -> SPL.sPL_type option list
)
"sPL_type.ml" 258 9581 9603 "sPL_type.ml" 258 9581 9642
call(
  stack
)
type(
  SPL.sPL_type option list
)
"sPL_type.ml" 259 9646 9670 "sPL_type.ml" 259 9646 9686
type(
  SPL.sPL_type option list
)
ident(
  def some_arg_t_pairs "sPL_type.ml" 261 9765 9785 "sPL_type.ml" 265 9985 10016
)
"sPL_type.ml" 260 9689 9711 "sPL_type.ml" 260 9689 9725
type(
  (SPL.sPL_expr * SPL.sPL_type) list
)
ident(
  int_ref arg_type_pairs "sPL_type.ml" 253 9290 9314 "sPL_type.ml" 253 9290 9328
)
"sPL_type.ml" 260 9689 9726 "sPL_type.ml" 260 9689 9728
type(
  (SPL.sPL_expr * SPL.sPL_type) list ->
  ((SPL.sPL_expr * SPL.sPL_type) list -> SPL.sPL_type option list) ->
  SPL.sPL_type option list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 260 9689 9729 "sPL_type.ml" 260 9689 9737
type(
  (SPL.sPL_expr * SPL.sPL_type -> SPL.sPL_type option) ->
  (SPL.sPL_expr * SPL.sPL_type) list -> SPL.sPL_type option list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 260 9689 9743 "sPL_type.ml" 260 9689 9744
type(
  SPL.sPL_expr * SPL.sPL_type
)
ident(
  def a "sPL_type.ml" 260 9689 9748 "sPL_type.ml" 260 9689 9760
)
"sPL_type.ml" 260 9689 9754 "sPL_type.ml" 260 9689 9757
type(
  SPL.sPL_expr * SPL.sPL_type -> SPL.sPL_type
)
ident(
  ext_ref Pervasives.snd
)
"sPL_type.ml" 260 9689 9758 "sPL_type.ml" 260 9689 9759
type(
  SPL.sPL_expr * SPL.sPL_type
)
ident(
  int_ref a "sPL_type.ml" 260 9689 9743 "sPL_type.ml" 260 9689 9744
)
"sPL_type.ml" 260 9689 9754 "sPL_type.ml" 260 9689 9759
type(
  SPL.sPL_type
)
"sPL_type.ml" 260 9689 9748 "sPL_type.ml" 260 9689 9760
type(
  SPL.sPL_type option
)
"sPL_type.ml" 260 9689 9743 "sPL_type.ml" 260 9689 9760
type(
  SPL.sPL_expr * SPL.sPL_type -> SPL.sPL_type option
)
"sPL_type.ml" 260 9689 9729 "sPL_type.ml" 260 9689 9761
type(
  (SPL.sPL_expr * SPL.sPL_type) list -> SPL.sPL_type option list
)
"sPL_type.ml" 260 9689 9711 "sPL_type.ml" 260 9689 9761
call(
  stack
)
type(
  SPL.sPL_type option list
)
"sPL_type.ml" 261 9765 9789 "sPL_type.ml" 261 9765 9799
type(
  SPL.sPL_type
)
ident(
  def final_type "sPL_type.ml" 262 9815 9835 "sPL_type.ml" 265 9985 10016
)
"sPL_type.ml" 261 9765 9802 "sPL_type.ml" 261 9765 9811
type(
  SPL.sPL_type
)
ident(
  int_ref rest_type "sPL_type.ml" 253 9290 9330 "sPL_type.ml" 253 9290 9339
)
"sPL_type.ml" 262 9815 9838 "sPL_type.ml" 262 9815 9861
type(
  SPL.sPL_type option list
)
ident(
  int_ref inferred_arg_type_pairs "sPL_type.ml" 257 9531 9555 "sPL_type.ml" 257 9531 9578
)
"sPL_type.ml" 262 9815 9862 "sPL_type.ml" 262 9815 9863
type(
  SPL.sPL_type option list -> SPL.sPL_type option list -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 262 9815 9864 "sPL_type.ml" 262 9815 9880
type(
  SPL.sPL_type option list
)
ident(
  int_ref some_arg_t_pairs "sPL_type.ml" 259 9646 9670 "sPL_type.ml" 259 9646 9686
)
"sPL_type.ml" 262 9815 9838 "sPL_type.ml" 262 9815 9880
type(
  bool
)
"sPL_type.ml" 263 9886 9914 "sPL_type.ml" 263 9886 9923
type(
  SPL.sPL_type
)
ident(
  int_ref rest_type "sPL_type.ml" 253 9290 9330 "sPL_type.ml" 253 9290 9339
)
"sPL_type.ml" 263 9886 9909 "sPL_type.ml" 263 9886 9923
type(
  SPL.sPL_type option
)
"sPL_type.ml" 263 9886 9932 "sPL_type.ml" 263 9886 9938
type(
  SPL.sPL_expr
)
ident(
  int_ref new_e1 "sPL_type.ml" 250 9192 9214 "sPL_type.ml" 250 9192 9220
)
"sPL_type.ml" 263 9886 9945 "sPL_type.ml" 263 9886 9948
type(
  SPL.sPL_type
)
ident(
  int_ref e1t "sPL_type.ml" 250 9192 9209 "sPL_type.ml" 250 9192 9212
)
"sPL_type.ml" 263 9886 9940 "sPL_type.ml" 263 9886 9948
type(
  SPL.sPL_type option
)
"sPL_type.ml" 263 9886 9949 "sPL_type.ml" 263 9886 9957
type(
  SPL.sPL_expr list
)
ident(
  int_ref new_args "sPL_type.ml" 256 9453 9477 "sPL_type.ml" 256 9453 9485
)
"sPL_type.ml" 263 9886 9925 "sPL_type.ml" 263 9886 9958
type(
  SPL.sPL_expr
)
"sPL_type.ml" 263 9886 9909 "sPL_type.ml" 263 9886 9958
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 265 9985 10008 "sPL_type.ml" 265 9985 10012
type(
  SPL.sPL_type option
)
"sPL_type.ml" 265 9985 10014 "sPL_type.ml" 265 9985 10015
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 265 9985 10008 "sPL_type.ml" 265 9985 10015
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 262 9815 9835 "sPL_type.ml" 265 9985 10016
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 261 9765 9785 "sPL_type.ml" 265 9985 10016
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 259 9646 9666 "sPL_type.ml" 265 9985 10016
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 257 9531 9551 "sPL_type.ml" 265 9985 10016
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 256 9453 9473 "sPL_type.ml" 265 9985 10016
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 255 9368 9388 "sPL_type.ml" 265 9985 10016
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 267 10039 10057 "sPL_type.ml" 267 10039 10061
type(
  ((SPL.sPL_expr * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 267 10039 10066 "sPL_type.ml" 267 10039 10070
type(
  SPL.sPL_type option
)
"sPL_type.ml" 267 10039 10072 "sPL_type.ml" 267 10039 10073
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 267 10039 10066 "sPL_type.ml" 267 10039 10073
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 252 9242 9256 "sPL_type.ml" 267 10039 10074
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 269 10091 10104 "sPL_type.ml" 269 10091 10108
type(
  SPL.sPL_type option
)
"sPL_type.ml" 269 10091 10110 "sPL_type.ml" 269 10091 10111
type(
  SPL.sPL_expr
)
"sPL_type.ml" 269 10091 10104 "sPL_type.ml" 269 10091 10111
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 269 10091 10117 "sPL_type.ml" 269 10091 10121
type(
  SPL.sPL_type option
)
"sPL_type.ml" 269 10091 10123 "sPL_type.ml" 269 10091 10124
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 269 10091 10117 "sPL_type.ml" 269 10091 10124
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 249 9155 9163 "sPL_type.ml" 269 10091 10125
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 271 10136 10147 "sPL_type.ml" 271 10136 10152
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  def ldecl "sPL_type.ml" 274 10272 10282 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 271 10136 10153 "sPL_type.ml" 271 10136 10155
type(
  SPL.sPL_type
)
ident(
  def te "sPL_type.ml" 274 10272 10282 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 271 10136 10156 "sPL_type.ml" 271 10136 10160
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 274 10272 10282 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 271 10136 10142 "sPL_type.ml" 271 10136 10161
type(
  SPL.sPL_expr
)
"sPL_type.ml" 274 10272 10286 "sPL_type.ml" 274 10272 10290
type(
  (SPL.id * SPL.sPL_type) list
)
ident(
  def env2 "sPL_type.ml" 276 10403 10413 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 274 10272 10293 "sPL_type.ml" 274 10272 10301
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr -> SPL.id * SPL.sPL_type) ->
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> (SPL.id * SPL.sPL_type) list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 274 10272 10308 "sPL_type.ml" 274 10272 10309
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 274 10272 10319 "sPL_type.ml" 274 10272 10322
)
"sPL_type.ml" 274 10272 10310 "sPL_type.ml" 274 10272 10311
type(
  SPL.id
)
ident(
  def v "sPL_type.ml" 274 10272 10319 "sPL_type.ml" 274 10272 10322
)
"sPL_type.ml" 274 10272 10312 "sPL_type.ml" 274 10272 10313
type(
  SPL.sPL_expr
)
ident(
  def b "sPL_type.ml" 274 10272 10319 "sPL_type.ml" 274 10272 10322
)
"sPL_type.ml" 274 10272 10308 "sPL_type.ml" 274 10272 10313
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 274 10272 10319 "sPL_type.ml" 274 10272 10320
type(
  SPL.id
)
ident(
  int_ref v "sPL_type.ml" 274 10272 10310 "sPL_type.ml" 274 10272 10311
)
"sPL_type.ml" 274 10272 10321 "sPL_type.ml" 274 10272 10322
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 274 10272 10308 "sPL_type.ml" 274 10272 10309
)
"sPL_type.ml" 274 10272 10319 "sPL_type.ml" 274 10272 10322
type(
  SPL.id * SPL.sPL_type
)
"sPL_type.ml" 274 10272 10307 "sPL_type.ml" 274 10272 10323
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr -> SPL.id * SPL.sPL_type
)
"sPL_type.ml" 274 10272 10325 "sPL_type.ml" 274 10272 10330
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  int_ref ldecl "sPL_type.ml" 271 10136 10147 "sPL_type.ml" 271 10136 10152
)
"sPL_type.ml" 274 10272 10293 "sPL_type.ml" 274 10272 10330
call(
  stack
)
type(
  (SPL.id * SPL.sPL_type) list
)
"sPL_type.ml" 276 10403 10417 "sPL_type.ml" 276 10403 10421
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  def nenv "sPL_type.ml" 278 10475 10485 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 276 10403 10424 "sPL_type.ml" 276 10403 10428
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  int_ref env2 "sPL_type.ml" 274 10272 10286 "sPL_type.ml" 274 10272 10290
)
"sPL_type.ml" 276 10403 10428 "sPL_type.ml" 276 10403 10429
type(
  (Debug.Basic.id * SPL.sPL_type) list ->
  env_type -> (Debug.Basic.id * SPL.sPL_type) list
)
ident(
  ext_ref Pervasives.( @ )
)
"sPL_type.ml" 276 10403 10429 "sPL_type.ml" 276 10403 10432
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 276 10403 10424 "sPL_type.ml" 276 10403 10432
call(
  stack
)
type(
  (Debug.Basic.id * SPL.sPL_type) list
)
"sPL_type.ml" 278 10475 10490 "sPL_type.ml" 278 10475 10493
type(
  SPL.sPL_type option
)
ident(
  def nt1 "sPL_type.ml" 280 10579 10589 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 278 10475 10494 "sPL_type.ml" 278 10475 10499
type(
  SPL.sPL_expr
)
ident(
  def nbody "sPL_type.ml" 280 10579 10589 "sPL_type.ml" 293 11252 11265
)
"sPL_type.ml" 278 10475 10490 "sPL_type.ml" 278 10475 10499
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 278 10475 10503 "sPL_type.ml" 278 10475 10513
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 278 10475 10514 "sPL_type.ml" 278 10475 10518
type(
  env_type
)
ident(
  int_ref nenv "sPL_type.ml" 276 10403 10417 "sPL_type.ml" 276 10403 10421
)
"sPL_type.ml" 278 10475 10519 "sPL_type.ml" 278 10475 10523
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 271 10136 10156 "sPL_type.ml" 271 10136 10160
)
"sPL_type.ml" 278 10475 10503 "sPL_type.ml" 278 10475 10523
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 280 10579 10593 "sPL_type.ml" 280 10579 10599
type(
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) list
)
ident(
  def ls_res "sPL_type.ml" 283 10749 10761 "sPL_type.ml" 292 11219 11251
)
"sPL_type.ml" 280 10579 10602 "sPL_type.ml" 280 10579 10610
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr ->
   (SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) ->
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list ->
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 280 10579 10617 "sPL_type.ml" 280 10579 10618
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 280 10579 10628 "sPL_type.ml" 280 10579 10648
)
"sPL_type.ml" 280 10579 10619 "sPL_type.ml" 280 10579 10620
type(
  SPL.id
)
ident(
  def v "sPL_type.ml" 280 10579 10628 "sPL_type.ml" 280 10579 10648
)
"sPL_type.ml" 280 10579 10621 "sPL_type.ml" 280 10579 10622
type(
  SPL.sPL_expr
)
ident(
  def b "sPL_type.ml" 280 10579 10628 "sPL_type.ml" 280 10579 10648
)
"sPL_type.ml" 280 10579 10617 "sPL_type.ml" 280 10579 10622
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 280 10579 10628 "sPL_type.ml" 280 10579 10638
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
ident(
  int_ref type_infer "sPL_type.ml" 150 5062 5070 "sPL_type.ml" 150 5062 5080
)
"sPL_type.ml" 280 10579 10639 "sPL_type.ml" 280 10579 10642
type(
  env_type
)
ident(
  int_ref env "sPL_type.ml" 150 5062 5082 "sPL_type.ml" 150 5062 5085
)
"sPL_type.ml" 280 10579 10643 "sPL_type.ml" 280 10579 10644
type(
  SPL.sPL_expr
)
ident(
  int_ref b "sPL_type.ml" 280 10579 10621 "sPL_type.ml" 280 10579 10622
)
"sPL_type.ml" 280 10579 10628 "sPL_type.ml" 280 10579 10644
call(
  stack
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 280 10579 10645 "sPL_type.ml" 280 10579 10646
type(
  SPL.id
)
ident(
  int_ref v "sPL_type.ml" 280 10579 10619 "sPL_type.ml" 280 10579 10620
)
"sPL_type.ml" 280 10579 10647 "sPL_type.ml" 280 10579 10648
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 280 10579 10617 "sPL_type.ml" 280 10579 10618
)
"sPL_type.ml" 280 10579 10628 "sPL_type.ml" 280 10579 10648
type(
  (SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type
)
"sPL_type.ml" 280 10579 10616 "sPL_type.ml" 280 10579 10649
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr ->
  (SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type
)
"sPL_type.ml" 280 10579 10651 "sPL_type.ml" 280 10579 10656
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  int_ref ldecl "sPL_type.ml" 271 10136 10147 "sPL_type.ml" 271 10136 10152
)
"sPL_type.ml" 280 10579 10602 "sPL_type.ml" 280 10579 10656
call(
  stack
)
type(
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) list
)
"sPL_type.ml" 283 10749 10767 "sPL_type.ml" 283 10749 10770
type(
  SPL.sPL_type option
)
ident(
  int_ref nt1 "sPL_type.ml" 278 10475 10490 "sPL_type.ml" 278 10475 10493
)
"sPL_type.ml" 284 10776 10797 "sPL_type.ml" 284 10776 10799
type(
  SPL.sPL_type
)
ident(
  def t1 "sPL_type.ml" 286 10864 10884 "sPL_type.ml" 291 11185 11218
)
"sPL_type.ml" 284 10776 10792 "sPL_type.ml" 284 10776 10799
type(
  SPL.sPL_type option
)
"sPL_type.ml" 286 10864 10887 "sPL_type.ml" 286 10864 10889
type(
  SPL.sPL_type
)
ident(
  int_ref t1 "sPL_type.ml" 284 10776 10797 "sPL_type.ml" 284 10776 10799
)
"sPL_type.ml" 286 10864 10889 "sPL_type.ml" 286 10864 10890
type(
  SPL.sPL_type -> SPL.sPL_type -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 286 10864 10890 "sPL_type.ml" 286 10864 10892
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 271 10136 10153 "sPL_type.ml" 271 10136 10155
)
"sPL_type.ml" 286 10864 10887 "sPL_type.ml" 286 10864 10892
type(
  bool
)
"sPL_type.ml" 288 10979 11004 "sPL_type.ml" 288 10979 11016
type(
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type -> bool) ->
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) list -> bool
)
ident(
  ext_ref List.for_all
)
"sPL_type.ml" 288 10979 11024 "sPL_type.ml" 288 10979 11025
type(
  SPL.sPL_type option
)
ident(
  def t "sPL_type.ml" 288 10979 11038 "sPL_type.ml" 288 10979 11047
)
"sPL_type.ml" 288 10979 11026 "sPL_type.ml" 288 10979 11027
type(
  SPL.sPL_expr
)
ident(
  def e "sPL_type.ml" 288 10979 11038 "sPL_type.ml" 288 10979 11047
)
"sPL_type.ml" 288 10979 11024 "sPL_type.ml" 288 10979 11027
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 288 10979 11029 "sPL_type.ml" 288 10979 11030
type(
  SPL.id
)
"sPL_type.ml" 288 10979 11031 "sPL_type.ml" 288 10979 11033
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 288 10979 11038 "sPL_type.ml" 288 10979 11047
)
"sPL_type.ml" 288 10979 11023 "sPL_type.ml" 288 10979 11033
type(
  (SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type
)
"sPL_type.ml" 288 10979 11038 "sPL_type.ml" 288 10979 11039
type(
  SPL.sPL_type option
)
ident(
  int_ref t "sPL_type.ml" 288 10979 11024 "sPL_type.ml" 288 10979 11025
)
"sPL_type.ml" 288 10979 11039 "sPL_type.ml" 288 10979 11040
type(
  SPL.sPL_type option -> SPL.sPL_type option -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 288 10979 11045 "sPL_type.ml" 288 10979 11047
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 288 10979 11031 "sPL_type.ml" 288 10979 11033
)
"sPL_type.ml" 288 10979 11040 "sPL_type.ml" 288 10979 11047
type(
  SPL.sPL_type option
)
"sPL_type.ml" 288 10979 11038 "sPL_type.ml" 288 10979 11047
type(
  bool
)
"sPL_type.ml" 288 10979 11022 "sPL_type.ml" 288 10979 11047
type(
  (SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type -> bool
)
"sPL_type.ml" 288 10979 11049 "sPL_type.ml" 288 10979 11055
type(
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) list
)
ident(
  int_ref ls_res "sPL_type.ml" 280 10579 10593 "sPL_type.ml" 280 10579 10599
)
"sPL_type.ml" 288 10979 11004 "sPL_type.ml" 288 10979 11055
call(
  stack
)
type(
  bool
)
"sPL_type.ml" 289 11061 11086 "sPL_type.ml" 289 11061 11089
type(
  SPL.sPL_type option
)
ident(
  int_ref nt1 "sPL_type.ml" 278 10475 10490 "sPL_type.ml" 278 10475 10493
)
"sPL_type.ml" 289 11061 11095 "sPL_type.ml" 289 11061 11103
type(
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type ->
   SPL.sPL_type * SPL.id * SPL.sPL_expr) ->
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) list ->
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 289 11061 11111 "sPL_type.ml" 289 11061 11112
type(
  SPL.sPL_type option
)
"sPL_type.ml" 289 11061 11113 "sPL_type.ml" 289 11061 11114
type(
  SPL.sPL_expr
)
ident(
  def e "sPL_type.ml" 289 11061 11123 "sPL_type.ml" 289 11061 11128
)
"sPL_type.ml" 289 11061 11111 "sPL_type.ml" 289 11061 11114
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 289 11061 11116 "sPL_type.ml" 289 11061 11117
type(
  SPL.id
)
ident(
  def v "sPL_type.ml" 289 11061 11123 "sPL_type.ml" 289 11061 11128
)
"sPL_type.ml" 289 11061 11118 "sPL_type.ml" 289 11061 11119
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 289 11061 11123 "sPL_type.ml" 289 11061 11128
)
"sPL_type.ml" 289 11061 11110 "sPL_type.ml" 289 11061 11119
type(
  (SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type
)
"sPL_type.ml" 289 11061 11123 "sPL_type.ml" 289 11061 11124
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 289 11061 11118 "sPL_type.ml" 289 11061 11119
)
"sPL_type.ml" 289 11061 11125 "sPL_type.ml" 289 11061 11126
type(
  SPL.id
)
ident(
  int_ref v "sPL_type.ml" 289 11061 11116 "sPL_type.ml" 289 11061 11117
)
"sPL_type.ml" 289 11061 11127 "sPL_type.ml" 289 11061 11128
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 289 11061 11113 "sPL_type.ml" 289 11061 11114
)
"sPL_type.ml" 289 11061 11123 "sPL_type.ml" 289 11061 11128
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 289 11061 11109 "sPL_type.ml" 289 11061 11129
type(
  (SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type ->
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 289 11061 11131 "sPL_type.ml" 289 11061 11137
type(
  ((SPL.sPL_type option * SPL.sPL_expr) * SPL.id * SPL.sPL_type) list
)
ident(
  int_ref ls_res "sPL_type.ml" 280 10579 10593 "sPL_type.ml" 280 10579 10599
)
"sPL_type.ml" 289 11061 11095 "sPL_type.ml" 289 11061 11137
call(
  stack
)
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
"sPL_type.ml" 289 11061 11138 "sPL_type.ml" 289 11061 11140
type(
  SPL.sPL_type
)
ident(
  int_ref te "sPL_type.ml" 271 10136 10153 "sPL_type.ml" 271 10136 10155
)
"sPL_type.ml" 289 11061 11141 "sPL_type.ml" 289 11061 11146
type(
  SPL.sPL_expr
)
ident(
  int_ref nbody "sPL_type.ml" 278 10475 10494 "sPL_type.ml" 278 10475 10499
)
"sPL_type.ml" 289 11061 11091 "sPL_type.ml" 289 11061 11147
type(
  SPL.sPL_expr
)
"sPL_type.ml" 289 11061 11086 "sPL_type.ml" 289 11061 11147
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 290 11149 11177 "sPL_type.ml" 290 11149 11181
type(
  SPL.sPL_type option
)
"sPL_type.ml" 290 11149 11182 "sPL_type.ml" 290 11149 11183
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 290 11149 11177 "sPL_type.ml" 290 11149 11183
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 288 10979 11001 "sPL_type.ml" 290 11149 11184
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 291 11185 11211 "sPL_type.ml" 291 11185 11215
type(
  SPL.sPL_type option
)
"sPL_type.ml" 291 11185 11216 "sPL_type.ml" 291 11185 11217
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 291 11185 11211 "sPL_type.ml" 291 11185 11217
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 286 10864 10884 "sPL_type.ml" 291 11185 11218
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 292 11219 11235 "sPL_type.ml" 292 11219 11239
type(
  SPL.sPL_type option
)
"sPL_type.ml" 292 11219 11244 "sPL_type.ml" 292 11219 11248
type(
  SPL.sPL_type option
)
"sPL_type.ml" 292 11219 11249 "sPL_type.ml" 292 11219 11250
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 150 5062 5097 "sPL_type.ml" 150 5062 5098
)
"sPL_type.ml" 292 11219 11244 "sPL_type.ml" 292 11219 11250
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 283 10749 10761 "sPL_type.ml" 292 11219 11251
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 280 10579 10589 "sPL_type.ml" 293 11252 11265
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 278 10475 10485 "sPL_type.ml" 293 11252 11265
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 276 10403 10413 "sPL_type.ml" 293 11252 11265
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 274 10272 10282 "sPL_type.ml" 293 11252 11265
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 151 5140 5142 "sPL_type.ml" 293 11252 11265
type(
  SPL.sPL_type option * SPL.sPL_expr
)
type(
  SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 150 5062 5096 "sPL_type.ml" 293 11252 11265
type(
  SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 150 5062 5081 "sPL_type.ml" 293 11252 11265
type(
  env_type -> SPL.sPL_expr -> SPL.sPL_type option * SPL.sPL_expr
)
"sPL_type.ml" 298 11365 11373 "sPL_type.ml" 298 11365 11383
type(
  SPL.sPL_type -> int
)
ident(
  def num_of_arg "sPL_type.ml" 298 11365 11365 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 298 11365 11384 "sPL_type.ml" 298 11365 11386
type(
  SPL.sPL_type
)
ident(
  def rt "sPL_type.ml" 299 11389 11391 "sPL_type.ml" 301 11445 11457
)
"sPL_type.ml" 299 11389 11397 "sPL_type.ml" 299 11389 11399
type(
  SPL.sPL_type
)
ident(
  int_ref rt "sPL_type.ml" 298 11365 11384 "sPL_type.ml" 298 11365 11386
)
"sPL_type.ml" 300 11405 11418 "sPL_type.ml" 300 11405 11419
type(
  SPL.sPL_type
)
"sPL_type.ml" 300 11405 11420 "sPL_type.ml" 300 11405 11422
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 300 11405 11427 "sPL_type.ml" 300 11405 11444
)
"sPL_type.ml" 300 11405 11411 "sPL_type.ml" 300 11405 11423
type(
  SPL.sPL_type
)
"sPL_type.ml" 300 11405 11427 "sPL_type.ml" 300 11405 11428
type(
  int
)
"sPL_type.ml" 300 11405 11428 "sPL_type.ml" 300 11405 11429
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"sPL_type.ml" 300 11405 11430 "sPL_type.ml" 300 11405 11440
type(
  SPL.sPL_type -> int
)
ident(
  int_ref num_of_arg "sPL_type.ml" 298 11365 11373 "sPL_type.ml" 298 11365 11383
)
"sPL_type.ml" 300 11405 11441 "sPL_type.ml" 300 11405 11443
type(
  SPL.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 300 11405 11420 "sPL_type.ml" 300 11405 11422
)
"sPL_type.ml" 300 11405 11430 "sPL_type.ml" 300 11405 11443
call(
  stack
)
type(
  int
)
"sPL_type.ml" 300 11405 11427 "sPL_type.ml" 300 11405 11444
type(
  int
)
"sPL_type.ml" 301 11445 11451 "sPL_type.ml" 301 11445 11452
type(
  SPL.sPL_type
)
"sPL_type.ml" 301 11445 11456 "sPL_type.ml" 301 11445 11457
type(
  int
)
"sPL_type.ml" 299 11389 11391 "sPL_type.ml" 301 11445 11457
type(
  int
)
"sPL_type.ml" 298 11365 11384 "sPL_type.ml" 301 11445 11457
type(
  SPL.sPL_type -> int
)
"sPL_type.ml" 307 11712 11716 "sPL_type.ml" 307 11712 11727
type(
  SPL.sPL_type -> 'b list -> (SPL.sPL_type * string list) option
)
ident(
  def get_partial "sPL_type.ml" 323 12164 12164 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 307 11712 11729 "sPL_type.ml" 307 11712 11730
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 307 11712 11741 "sPL_type.ml" 315 11945 12007
)
"sPL_type.ml" 307 11712 11742 "sPL_type.ml" 307 11712 11746
type(
  'b list
)
ident(
  def args "sPL_type.ml" 308 11758 11760 "sPL_type.ml" 315 11945 12007
)
"sPL_type.ml" 308 11758 11763 "sPL_type.ml" 308 11758 11766
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"sPL_type.ml" 308 11758 11768 "sPL_type.ml" 308 11758 11783
type(
  bool ref
)
ident(
  int_ref pa_removal_flag "sPL_type.ml" 10 117 121 "sPL_type.ml" 10 117 136
)
"sPL_type.ml" 308 11758 11767 "sPL_type.ml" 308 11758 11783
type(
  bool
)
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"sPL_type.ml" 308 11758 11763 "sPL_type.ml" 308 11758 11784
type(
  bool
)
"sPL_type.ml" 308 11758 11790 "sPL_type.ml" 308 11758 11794
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 310 11802 11810 "sPL_type.ml" 310 11802 11823
type(
  SPL.sPL_type -> 'b list -> (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
ident(
  int_ref extr_arg_type "sPL_type.ml" 45 1123 1127 "sPL_type.ml" 45 1123 1140
)
"sPL_type.ml" 310 11802 11824 "sPL_type.ml" 310 11802 11825
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 307 11712 11729 "sPL_type.ml" 307 11712 11730
)
"sPL_type.ml" 310 11802 11826 "sPL_type.ml" 310 11802 11830
type(
  'b list
)
ident(
  int_ref args "sPL_type.ml" 307 11712 11742 "sPL_type.ml" 307 11712 11746
)
"sPL_type.ml" 310 11802 11810 "sPL_type.ml" 310 11802 11830
call(
  stack
)
type(
  (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 311 11836 11842 "sPL_type.ml" 311 11836 11846
type(
  (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
"sPL_type.ml" 311 11836 11850 "sPL_type.ml" 311 11836 11854
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 312 11855 11867 "sPL_type.ml" 312 11855 11869
type(
  ('b * SPL.sPL_type) list
)
ident(
  def ls "sPL_type.ml" 313 11877 11887 "sPL_type.ml" 315 11945 12007
)
"sPL_type.ml" 312 11855 11870 "sPL_type.ml" 312 11855 11872
type(
  SPL.sPL_type
)
ident(
  def rt "sPL_type.ml" 313 11877 11887 "sPL_type.ml" 315 11945 12007
)
"sPL_type.ml" 312 11855 11861 "sPL_type.ml" 312 11855 11873
type(
  (('b * SPL.sPL_type) list * SPL.sPL_type) option
)
type(
  ('b * SPL.sPL_type) list * SPL.sPL_type
)
"sPL_type.ml" 313 11877 11891 "sPL_type.ml" 313 11877 11895
type(
  int
)
ident(
  def narg "sPL_type.ml" 314 11915 11925 "sPL_type.ml" 315 11945 12007
)
"sPL_type.ml" 313 11877 11898 "sPL_type.ml" 313 11877 11908
type(
  SPL.sPL_type -> int
)
ident(
  int_ref num_of_arg "sPL_type.ml" 298 11365 11373 "sPL_type.ml" 298 11365 11383
)
"sPL_type.ml" 313 11877 11909 "sPL_type.ml" 313 11877 11911
type(
  SPL.sPL_type
)
ident(
  int_ref rt "sPL_type.ml" 312 11855 11870 "sPL_type.ml" 312 11855 11872
)
"sPL_type.ml" 313 11877 11898 "sPL_type.ml" 313 11877 11911
call(
  stack
)
type(
  int
)
"sPL_type.ml" 314 11915 11928 "sPL_type.ml" 314 11915 11932
type(
  int
)
ident(
  int_ref narg "sPL_type.ml" 313 11877 11891 "sPL_type.ml" 313 11877 11895
)
"sPL_type.ml" 314 11915 11932 "sPL_type.ml" 314 11915 11933
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"sPL_type.ml" 314 11915 11933 "sPL_type.ml" 314 11915 11934
type(
  int
)
"sPL_type.ml" 314 11915 11928 "sPL_type.ml" 314 11915 11934
type(
  bool
)
"sPL_type.ml" 314 11915 11940 "sPL_type.ml" 314 11915 11944
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 315 11945 11968 "sPL_type.ml" 315 11945 11970
type(
  SPL.sPL_type
)
ident(
  int_ref rt "sPL_type.ml" 312 11855 11870 "sPL_type.ml" 312 11855 11872
)
"sPL_type.ml" 315 11945 11972 "sPL_type.ml" 315 11945 11977
type(
  Debug.Basic.generator
)
ident(
  ext_ref Debug.Basic.names
)
"sPL_type.ml" 315 11945 11972 "sPL_type.ml" 315 11945 11990
call(
  stack
)
type(
  string -> int -> string list
)
"sPL_type.ml" 315 11945 11991 "sPL_type.ml" 315 11945 12000
type(
  string
)
"sPL_type.ml" 315 11945 12001 "sPL_type.ml" 315 11945 12005
type(
  int
)
ident(
  int_ref narg "sPL_type.ml" 313 11877 11891 "sPL_type.ml" 313 11877 11895
)
"sPL_type.ml" 315 11945 11972 "sPL_type.ml" 315 11945 12005
type(
  string list
)
"sPL_type.ml" 315 11945 11962 "sPL_type.ml" 315 11945 12007
type(
  SPL.sPL_type * string list
)
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 314 11915 11925 "sPL_type.ml" 315 11945 12007
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 313 11877 11887 "sPL_type.ml" 315 11945 12007
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 310 11802 11804 "sPL_type.ml" 315 11945 12007
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 308 11758 11760 "sPL_type.ml" 315 11945 12007
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 307 11712 11741 "sPL_type.ml" 315 11945 12007
type(
  'b list -> (SPL.sPL_type * string list) option
)
"sPL_type.ml" 307 11712 11728 "sPL_type.ml" 315 11945 12007
type(
  SPL.sPL_type -> 'b list -> (SPL.sPL_type * string list) option
)
"sPL_type.ml" 323 12164 12172 "sPL_type.ml" 323 12164 12182
type(
  (SPL.sPL_type * 'a * 'b) list -> SPL.sPL_type -> SPL.sPL_type
)
ident(
  def build_type "sPL_type.ml" 323 12164 12164 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 323 12164 12183 "sPL_type.ml" 323 12164 12185
type(
  (SPL.sPL_type * 'a * 'b) list
)
ident(
  def ls "sPL_type.ml" 323 12164 12186 "sPL_type.ml" 326 12222 12268
)
"sPL_type.ml" 323 12164 12186 "sPL_type.ml" 323 12164 12188
type(
  SPL.sPL_type
)
ident(
  def bt "sPL_type.ml" 324 12191 12193 "sPL_type.ml" 326 12222 12268
)
"sPL_type.ml" 324 12191 12199 "sPL_type.ml" 324 12191 12201
type(
  (SPL.sPL_type * 'a * 'b) list
)
ident(
  int_ref ls "sPL_type.ml" 323 12164 12183 "sPL_type.ml" 323 12164 12185
)
"sPL_type.ml" 325 12207 12213 "sPL_type.ml" 325 12207 12215
type(
  (SPL.sPL_type * 'a * 'b) list
)
"sPL_type.ml" 325 12207 12219 "sPL_type.ml" 325 12207 12221
type(
  SPL.sPL_type
)
ident(
  int_ref bt "sPL_type.ml" 323 12164 12186 "sPL_type.ml" 323 12164 12188
)
"sPL_type.ml" 326 12222 12229 "sPL_type.ml" 326 12222 12230
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 326 12222 12243 "sPL_type.ml" 326 12222 12268
)
"sPL_type.ml" 326 12222 12231 "sPL_type.ml" 326 12222 12232
type(
  'a
)
"sPL_type.ml" 326 12222 12233 "sPL_type.ml" 326 12222 12234
type(
  'b
)
"sPL_type.ml" 326 12222 12229 "sPL_type.ml" 326 12222 12234
type(
  SPL.sPL_type * 'a * 'b
)
"sPL_type.ml" 326 12222 12237 "sPL_type.ml" 326 12222 12239
type(
  (SPL.sPL_type * 'a * 'b) list
)
ident(
  def ls "sPL_type.ml" 326 12222 12243 "sPL_type.ml" 326 12222 12268
)
"sPL_type.ml" 326 12222 12228 "sPL_type.ml" 326 12222 12239
type(
  (SPL.sPL_type * 'a * 'b) list
)
"sPL_type.ml" 326 12222 12249 "sPL_type.ml" 326 12222 12250
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 326 12222 12229 "sPL_type.ml" 326 12222 12230
)
"sPL_type.ml" 326 12222 12251 "sPL_type.ml" 326 12222 12261
type(
  (SPL.sPL_type * 'a * 'b) list -> SPL.sPL_type -> SPL.sPL_type
)
ident(
  int_ref build_type "sPL_type.ml" 323 12164 12172 "sPL_type.ml" 323 12164 12182
)
"sPL_type.ml" 326 12222 12262 "sPL_type.ml" 326 12222 12264
type(
  (SPL.sPL_type * 'a * 'b) list
)
ident(
  int_ref ls "sPL_type.ml" 326 12222 12237 "sPL_type.ml" 326 12222 12239
)
"sPL_type.ml" 326 12222 12265 "sPL_type.ml" 326 12222 12267
type(
  SPL.sPL_type
)
ident(
  int_ref bt "sPL_type.ml" 323 12164 12186 "sPL_type.ml" 323 12164 12188
)
"sPL_type.ml" 326 12222 12251 "sPL_type.ml" 326 12222 12267
call(
  stack
)
type(
  SPL.sPL_type
)
"sPL_type.ml" 326 12222 12243 "sPL_type.ml" 326 12222 12268
type(
  SPL.sPL_type
)
"sPL_type.ml" 324 12191 12193 "sPL_type.ml" 326 12222 12268
type(
  SPL.sPL_type
)
"sPL_type.ml" 323 12164 12186 "sPL_type.ml" 326 12222 12268
type(
  SPL.sPL_type -> SPL.sPL_type
)
"sPL_type.ml" 323 12164 12183 "sPL_type.ml" 326 12222 12268
type(
  (SPL.sPL_type * 'a * 'b) list -> SPL.sPL_type -> SPL.sPL_type
)
"sPL_type.ml" 335 12384 12388 "sPL_type.ml" 335 12384 12397
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  def trans_exp "sPL_type.ml" 387 14316 14316 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 335 12384 12399 "sPL_type.ml" 335 12384 12400
type(
  SPL.sPL_expr
)
ident(
  def e "sPL_type.ml" 335 12384 12411 "sPL_type.ml" 384 14279 14289
)
"sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  def aux "sPL_type.ml" 336 12427 12429 "sPL_type.ml" 384 14279 14289
)
"sPL_type.ml" 336 12427 12441 "sPL_type.ml" 336 12427 12442
type(
  SPL.sPL_expr
)
ident(
  def e "sPL_type.ml" 337 12445 12449 "sPL_type.ml" 383 14267 14278
)
"sPL_type.ml" 337 12445 12455 "sPL_type.ml" 337 12445 12456
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 336 12427 12441 "sPL_type.ml" 336 12427 12442
)
"sPL_type.ml" 338 12462 12480 "sPL_type.ml" 338 12462 12481
type(
  bool
)
ident(
  def v "sPL_type.ml" 338 12462 12485 "sPL_type.ml" 338 12462 12498
)
"sPL_type.ml" 338 12462 12470 "sPL_type.ml" 338 12462 12481
type(
  SPL.sPL_expr
)
"sPL_type.ml" 338 12462 12497 "sPL_type.ml" 338 12462 12498
type(
  bool
)
ident(
  int_ref v "sPL_type.ml" 338 12462 12480 "sPL_type.ml" 338 12462 12481
)
"sPL_type.ml" 338 12462 12485 "sPL_type.ml" 338 12462 12498
type(
  C.sPL_expr
)
"sPL_type.ml" 339 12499 12516 "sPL_type.ml" 339 12499 12517
type(
  int
)
ident(
  def v "sPL_type.ml" 339 12499 12521 "sPL_type.ml" 339 12499 12533
)
"sPL_type.ml" 339 12499 12507 "sPL_type.ml" 339 12499 12517
type(
  SPL.sPL_expr
)
"sPL_type.ml" 339 12499 12532 "sPL_type.ml" 339 12499 12533
type(
  int
)
ident(
  int_ref v "sPL_type.ml" 339 12499 12516 "sPL_type.ml" 339 12499 12517
)
"sPL_type.ml" 339 12499 12521 "sPL_type.ml" 339 12499 12533
type(
  C.sPL_expr
)
"sPL_type.ml" 340 12534 12546 "sPL_type.ml" 340 12534 12547
type(
  SPL.id
)
ident(
  def v "sPL_type.ml" 340 12534 12551 "sPL_type.ml" 340 12534 12558
)
"sPL_type.ml" 340 12534 12542 "sPL_type.ml" 340 12534 12547
type(
  SPL.sPL_expr
)
"sPL_type.ml" 340 12534 12557 "sPL_type.ml" 340 12534 12558
type(
  SPL.id
)
ident(
  int_ref v "sPL_type.ml" 340 12534 12546 "sPL_type.ml" 340 12534 12547
)
"sPL_type.ml" 340 12534 12551 "sPL_type.ml" 340 12534 12558
type(
  C.sPL_expr
)
"sPL_type.ml" 341 12559 12581 "sPL_type.ml" 341 12559 12583
type(
  SPL.op_id
)
ident(
  def op "sPL_type.ml" 342 12592 12604 "sPL_type.ml" 343 12626 12664
)
"sPL_type.ml" 341 12559 12584 "sPL_type.ml" 341 12559 12587
type(
  SPL.sPL_expr
)
ident(
  def arg "sPL_type.ml" 342 12592 12604 "sPL_type.ml" 343 12626 12664
)
"sPL_type.ml" 341 12559 12567 "sPL_type.ml" 341 12559 12588
type(
  SPL.sPL_expr
)
"sPL_type.ml" 342 12592 12608 "sPL_type.ml" 342 12592 12612
type(
  C.sPL_expr
)
ident(
  def varg "sPL_type.ml" 343 12626 12639 "sPL_type.ml" 343 12626 12663
)
"sPL_type.ml" 342 12592 12615 "sPL_type.ml" 342 12592 12618
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 342 12592 12619 "sPL_type.ml" 342 12592 12622
type(
  SPL.sPL_expr
)
ident(
  int_ref arg "sPL_type.ml" 341 12559 12584 "sPL_type.ml" 341 12559 12587
)
"sPL_type.ml" 342 12592 12615 "sPL_type.ml" 342 12592 12622
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 343 12626 12655 "sPL_type.ml" 343 12626 12657
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 341 12559 12581 "sPL_type.ml" 341 12559 12583
)
"sPL_type.ml" 343 12626 12658 "sPL_type.ml" 343 12626 12662
type(
  C.sPL_expr
)
ident(
  int_ref varg "sPL_type.ml" 342 12592 12608 "sPL_type.ml" 342 12592 12612
)
"sPL_type.ml" 343 12626 12639 "sPL_type.ml" 343 12626 12663
type(
  C.sPL_expr
)
"sPL_type.ml" 342 12592 12604 "sPL_type.ml" 343 12626 12664
type(
  C.sPL_expr
)
"sPL_type.ml" 344 12665 12688 "sPL_type.ml" 344 12665 12690
type(
  SPL.op_id
)
ident(
  def op "sPL_type.ml" 345 12705 12717 "sPL_type.ml" 347 12777 12823
)
"sPL_type.ml" 344 12665 12691 "sPL_type.ml" 344 12665 12695
type(
  SPL.sPL_expr
)
ident(
  def arg1 "sPL_type.ml" 345 12705 12717 "sPL_type.ml" 347 12777 12823
)
"sPL_type.ml" 344 12665 12696 "sPL_type.ml" 344 12665 12700
type(
  SPL.sPL_expr
)
ident(
  def arg2 "sPL_type.ml" 345 12705 12717 "sPL_type.ml" 347 12777 12823
)
"sPL_type.ml" 344 12665 12673 "sPL_type.ml" 344 12665 12701
type(
  SPL.sPL_expr
)
"sPL_type.ml" 345 12705 12721 "sPL_type.ml" 345 12705 12726
type(
  C.sPL_expr
)
ident(
  def varg1 "sPL_type.ml" 346 12741 12753 "sPL_type.ml" 347 12777 12823
)
"sPL_type.ml" 345 12705 12729 "sPL_type.ml" 345 12705 12732
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 345 12705 12733 "sPL_type.ml" 345 12705 12737
type(
  SPL.sPL_expr
)
ident(
  int_ref arg1 "sPL_type.ml" 344 12665 12691 "sPL_type.ml" 344 12665 12695
)
"sPL_type.ml" 345 12705 12729 "sPL_type.ml" 345 12705 12737
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 346 12741 12757 "sPL_type.ml" 346 12741 12762
type(
  C.sPL_expr
)
ident(
  def varg2 "sPL_type.ml" 347 12777 12790 "sPL_type.ml" 347 12777 12822
)
"sPL_type.ml" 346 12741 12765 "sPL_type.ml" 346 12741 12768
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 346 12741 12769 "sPL_type.ml" 346 12741 12773
type(
  SPL.sPL_expr
)
ident(
  int_ref arg2 "sPL_type.ml" 344 12665 12696 "sPL_type.ml" 344 12665 12700
)
"sPL_type.ml" 346 12741 12765 "sPL_type.ml" 346 12741 12773
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 347 12777 12807 "sPL_type.ml" 347 12777 12809
type(
  SPL.op_id
)
ident(
  int_ref op "sPL_type.ml" 344 12665 12688 "sPL_type.ml" 344 12665 12690
)
"sPL_type.ml" 347 12777 12810 "sPL_type.ml" 347 12777 12815
type(
  C.sPL_expr
)
ident(
  int_ref varg1 "sPL_type.ml" 345 12705 12721 "sPL_type.ml" 345 12705 12726
)
"sPL_type.ml" 347 12777 12816 "sPL_type.ml" 347 12777 12821
type(
  C.sPL_expr
)
ident(
  int_ref varg2 "sPL_type.ml" 346 12741 12757 "sPL_type.ml" 346 12741 12762
)
"sPL_type.ml" 347 12777 12790 "sPL_type.ml" 347 12777 12822
type(
  C.sPL_expr
)
"sPL_type.ml" 346 12741 12753 "sPL_type.ml" 347 12777 12823
type(
  C.sPL_expr
)
"sPL_type.ml" 345 12705 12717 "sPL_type.ml" 347 12777 12823
type(
  C.sPL_expr
)
"sPL_type.ml" 348 12824 12838 "sPL_type.ml" 348 12824 12840
type(
  SPL.sPL_expr
)
ident(
  def e1 "sPL_type.ml" 349 12851 12863 "sPL_type.ml" 352 12944 12973
)
"sPL_type.ml" 348 12824 12841 "sPL_type.ml" 348 12824 12843
type(
  SPL.sPL_expr
)
ident(
  def e2 "sPL_type.ml" 349 12851 12863 "sPL_type.ml" 352 12944 12973
)
"sPL_type.ml" 348 12824 12844 "sPL_type.ml" 348 12824 12846
type(
  SPL.sPL_expr
)
ident(
  def e3 "sPL_type.ml" 349 12851 12863 "sPL_type.ml" 352 12944 12973
)
"sPL_type.ml" 348 12824 12832 "sPL_type.ml" 348 12824 12847
type(
  SPL.sPL_expr
)
"sPL_type.ml" 349 12851 12867 "sPL_type.ml" 349 12851 12869
type(
  C.sPL_expr
)
ident(
  def v1 "sPL_type.ml" 350 12882 12894 "sPL_type.ml" 352 12944 12973
)
"sPL_type.ml" 349 12851 12872 "sPL_type.ml" 349 12851 12875
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 349 12851 12876 "sPL_type.ml" 349 12851 12878
type(
  SPL.sPL_expr
)
ident(
  int_ref e1 "sPL_type.ml" 348 12824 12838 "sPL_type.ml" 348 12824 12840
)
"sPL_type.ml" 349 12851 12872 "sPL_type.ml" 349 12851 12878
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 350 12882 12898 "sPL_type.ml" 350 12882 12900
type(
  C.sPL_expr
)
ident(
  def v2 "sPL_type.ml" 351 12913 12925 "sPL_type.ml" 352 12944 12973
)
"sPL_type.ml" 350 12882 12903 "sPL_type.ml" 350 12882 12906
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 350 12882 12907 "sPL_type.ml" 350 12882 12909
type(
  SPL.sPL_expr
)
ident(
  int_ref e2 "sPL_type.ml" 348 12824 12841 "sPL_type.ml" 348 12824 12843
)
"sPL_type.ml" 350 12882 12903 "sPL_type.ml" 350 12882 12909
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 351 12913 12929 "sPL_type.ml" 351 12913 12931
type(
  C.sPL_expr
)
ident(
  def v3 "sPL_type.ml" 352 12944 12956 "sPL_type.ml" 352 12944 12973
)
"sPL_type.ml" 351 12913 12934 "sPL_type.ml" 351 12913 12937
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 351 12913 12938 "sPL_type.ml" 351 12913 12940
type(
  SPL.sPL_expr
)
ident(
  int_ref e3 "sPL_type.ml" 348 12824 12844 "sPL_type.ml" 348 12824 12846
)
"sPL_type.ml" 351 12913 12934 "sPL_type.ml" 351 12913 12940
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 352 12944 12964 "sPL_type.ml" 352 12944 12966
type(
  C.sPL_expr
)
ident(
  int_ref v1 "sPL_type.ml" 349 12851 12867 "sPL_type.ml" 349 12851 12869
)
"sPL_type.ml" 352 12944 12967 "sPL_type.ml" 352 12944 12969
type(
  C.sPL_expr
)
ident(
  int_ref v2 "sPL_type.ml" 350 12882 12898 "sPL_type.ml" 350 12882 12900
)
"sPL_type.ml" 352 12944 12970 "sPL_type.ml" 352 12944 12972
type(
  C.sPL_expr
)
ident(
  int_ref v3 "sPL_type.ml" 351 12913 12929 "sPL_type.ml" 351 12913 12931
)
"sPL_type.ml" 352 12944 12956 "sPL_type.ml" 352 12944 12973
type(
  C.sPL_expr
)
"sPL_type.ml" 351 12913 12925 "sPL_type.ml" 352 12944 12973
type(
  C.sPL_expr
)
"sPL_type.ml" 350 12882 12894 "sPL_type.ml" 352 12944 12973
type(
  C.sPL_expr
)
"sPL_type.ml" 349 12851 12863 "sPL_type.ml" 352 12944 12973
type(
  C.sPL_expr
)
"sPL_type.ml" 353 12974 12988 "sPL_type.ml" 353 12974 12989
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 354 13002 13014 "sPL_type.ml" 355 13038 13069
)
"sPL_type.ml" 353 12974 12990 "sPL_type.ml" 353 12974 12992
type(
  SPL.id list
)
ident(
  def vs "sPL_type.ml" 354 13002 13014 "sPL_type.ml" 355 13038 13069
)
"sPL_type.ml" 353 12974 12993 "sPL_type.ml" 353 12974 12997
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 354 13002 13014 "sPL_type.ml" 355 13038 13069
)
"sPL_type.ml" 353 12974 12982 "sPL_type.ml" 353 12974 12998
type(
  SPL.sPL_expr
)
"sPL_type.ml" 354 13002 13018 "sPL_type.ml" 354 13002 13023
type(
  C.sPL_expr
)
ident(
  def nbody "sPL_type.ml" 355 13038 13050 "sPL_type.ml" 355 13038 13069
)
"sPL_type.ml" 354 13002 13026 "sPL_type.ml" 354 13002 13029
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 354 13002 13030 "sPL_type.ml" 354 13002 13034
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 353 12974 12993 "sPL_type.ml" 353 12974 12997
)
"sPL_type.ml" 354 13002 13026 "sPL_type.ml" 354 13002 13034
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 355 13038 13058 "sPL_type.ml" 355 13038 13059
type(
  C.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 353 12974 12988 "sPL_type.ml" 353 12974 12989
)
"sPL_type.ml" 355 13038 13060 "sPL_type.ml" 355 13038 13062
type(
  Debug.Basic.id list
)
ident(
  int_ref vs "sPL_type.ml" 353 12974 12990 "sPL_type.ml" 353 12974 12992
)
"sPL_type.ml" 355 13038 13063 "sPL_type.ml" 355 13038 13068
type(
  C.sPL_expr
)
ident(
  int_ref nbody "sPL_type.ml" 354 13002 13018 "sPL_type.ml" 354 13002 13023
)
"sPL_type.ml" 355 13038 13050 "sPL_type.ml" 355 13038 13069
type(
  C.sPL_expr
)
"sPL_type.ml" 354 13002 13014 "sPL_type.ml" 355 13038 13069
type(
  C.sPL_expr
)
"sPL_type.ml" 356 13070 13087 "sPL_type.ml" 356 13070 13088
type(
  SPL.sPL_type
)
ident(
  def f "sPL_type.ml" 357 13103 13115 "sPL_type.ml" 358 13139 13175
)
"sPL_type.ml" 356 13070 13089 "sPL_type.ml" 356 13070 13090
type(
  SPL.id
)
ident(
  def t "sPL_type.ml" 357 13103 13115 "sPL_type.ml" 358 13139 13175
)
"sPL_type.ml" 356 13070 13091 "sPL_type.ml" 356 13070 13093
type(
  SPL.id list
)
ident(
  def vs "sPL_type.ml" 357 13103 13115 "sPL_type.ml" 358 13139 13175
)
"sPL_type.ml" 356 13070 13094 "sPL_type.ml" 356 13070 13098
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 357 13103 13115 "sPL_type.ml" 358 13139 13175
)
"sPL_type.ml" 356 13070 13078 "sPL_type.ml" 356 13070 13099
type(
  SPL.sPL_expr
)
"sPL_type.ml" 357 13103 13119 "sPL_type.ml" 357 13103 13124
type(
  C.sPL_expr
)
ident(
  def nbody "sPL_type.ml" 358 13139 13151 "sPL_type.ml" 358 13139 13175
)
"sPL_type.ml" 357 13103 13127 "sPL_type.ml" 357 13103 13130
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 357 13103 13131 "sPL_type.ml" 357 13103 13135
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 356 13070 13094 "sPL_type.ml" 356 13070 13098
)
"sPL_type.ml" 357 13103 13127 "sPL_type.ml" 357 13103 13135
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 358 13139 13162 "sPL_type.ml" 358 13139 13163
type(
  C.sPL_type
)
ident(
  int_ref f "sPL_type.ml" 356 13070 13087 "sPL_type.ml" 356 13070 13088
)
"sPL_type.ml" 358 13139 13164 "sPL_type.ml" 358 13139 13165
type(
  SPL.id
)
ident(
  int_ref t "sPL_type.ml" 356 13070 13089 "sPL_type.ml" 356 13070 13090
)
"sPL_type.ml" 358 13139 13166 "sPL_type.ml" 358 13139 13168
type(
  Debug.Basic.id list
)
ident(
  int_ref vs "sPL_type.ml" 356 13070 13091 "sPL_type.ml" 356 13070 13093
)
"sPL_type.ml" 358 13139 13169 "sPL_type.ml" 358 13139 13174
type(
  C.sPL_expr
)
ident(
  int_ref nbody "sPL_type.ml" 357 13103 13119 "sPL_type.ml" 357 13103 13124
)
"sPL_type.ml" 358 13139 13151 "sPL_type.ml" 358 13139 13175
type(
  C.sPL_expr
)
"sPL_type.ml" 357 13103 13115 "sPL_type.ml" 358 13139 13175
type(
  C.sPL_expr
)
"sPL_type.ml" 359 13176 13191 "sPL_type.ml" 359 13176 13192
type(
  SPL.sPL_expr
)
ident(
  def f "sPL_type.ml" 361 13222 13236 "sPL_type.ml" 370 13651 13720
)
"sPL_type.ml" 359 13176 13193 "sPL_type.ml" 359 13176 13194
type(
  SPL.sPL_type option
)
ident(
  def t "sPL_type.ml" 361 13222 13236 "sPL_type.ml" 370 13651 13720
)
"sPL_type.ml" 359 13176 13195 "sPL_type.ml" 359 13176 13199
type(
  SPL.sPL_expr list
)
ident(
  def args "sPL_type.ml" 361 13222 13236 "sPL_type.ml" 370 13651 13720
)
"sPL_type.ml" 359 13176 13184 "sPL_type.ml" 359 13176 13200
type(
  SPL.sPL_expr
)
"sPL_type.ml" 361 13222 13242 "sPL_type.ml" 361 13222 13243
type(
  SPL.sPL_type option
)
ident(
  int_ref t "sPL_type.ml" 359 13176 13193 "sPL_type.ml" 359 13176 13194
)
"sPL_type.ml" 362 13249 13272 "sPL_type.ml" 362 13249 13274
type(
  SPL.sPL_type
)
ident(
  def t1 "sPL_type.ml" 364 13306 13330 "sPL_type.ml" 368 13515 13624
)
"sPL_type.ml" 362 13249 13267 "sPL_type.ml" 362 13249 13274
type(
  SPL.sPL_type option
)
"sPL_type.ml" 364 13306 13334 "sPL_type.ml" 364 13306 13338
type(
  C.sPL_expr list
)
ident(
  def args "sPL_type.ml" 365 13362 13386 "sPL_type.ml" 368 13515 13624
)
"sPL_type.ml" 364 13306 13341 "sPL_type.ml" 364 13306 13349
type(
  (SPL.sPL_expr -> C.sPL_expr) -> SPL.sPL_expr list -> C.sPL_expr list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 364 13306 13350 "sPL_type.ml" 364 13306 13353
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 364 13306 13354 "sPL_type.ml" 364 13306 13358
type(
  SPL.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 359 13176 13195 "sPL_type.ml" 359 13176 13199
)
"sPL_type.ml" 364 13306 13341 "sPL_type.ml" 364 13306 13358
call(
  stack
)
type(
  C.sPL_expr list
)
"sPL_type.ml" 365 13362 13390 "sPL_type.ml" 365 13362 13391
type(
  C.sPL_expr
)
ident(
  def f "sPL_type.ml" 366 13403 13427 "sPL_type.ml" 368 13515 13624
)
"sPL_type.ml" 365 13362 13394 "sPL_type.ml" 365 13362 13397
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 365 13362 13398 "sPL_type.ml" 365 13362 13399
type(
  SPL.sPL_expr
)
ident(
  int_ref f "sPL_type.ml" 359 13176 13191 "sPL_type.ml" 359 13176 13192
)
"sPL_type.ml" 365 13362 13394 "sPL_type.ml" 365 13362 13399
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 366 13403 13433 "sPL_type.ml" 366 13403 13444
type(
  SPL.sPL_type -> C.sPL_expr list -> (SPL.sPL_type * string list) option
)
ident(
  int_ref get_partial "sPL_type.ml" 307 11712 11716 "sPL_type.ml" 307 11712 11727
)
"sPL_type.ml" 366 13403 13445 "sPL_type.ml" 366 13403 13447
type(
  SPL.sPL_type
)
ident(
  int_ref t1 "sPL_type.ml" 362 13249 13272 "sPL_type.ml" 362 13249 13274
)
"sPL_type.ml" 366 13403 13448 "sPL_type.ml" 366 13403 13452
type(
  C.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 364 13306 13334 "sPL_type.ml" 364 13306 13338
)
"sPL_type.ml" 366 13403 13433 "sPL_type.ml" 366 13403 13452
call(
  stack
)
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 367 13458 13486 "sPL_type.ml" 367 13458 13490
type(
  (SPL.sPL_type * string list) option
)
"sPL_type.ml" 367 13458 13504 "sPL_type.ml" 367 13458 13505
type(
  C.sPL_expr
)
ident(
  int_ref f "sPL_type.ml" 365 13362 13390 "sPL_type.ml" 365 13362 13391
)
"sPL_type.ml" 367 13458 13506 "sPL_type.ml" 367 13458 13508
type(
  C.sPL_type
)
ident(
  int_ref t1 "sPL_type.ml" 362 13249 13272 "sPL_type.ml" 362 13249 13274
)
"sPL_type.ml" 367 13458 13509 "sPL_type.ml" 367 13458 13513
type(
  C.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 364 13306 13334 "sPL_type.ml" 364 13306 13338
)
"sPL_type.ml" 367 13458 13495 "sPL_type.ml" 367 13458 13514
type(
  C.sPL_expr
)
"sPL_type.ml" 368 13515 13549 "sPL_type.ml" 368 13515 13551
type(
  SPL.sPL_type
)
ident(
  def t2 "sPL_type.ml" 368 13515 13559 "sPL_type.ml" 368 13515 13624
)
"sPL_type.ml" 368 13515 13552 "sPL_type.ml" 368 13515 13554
type(
  string list
)
ident(
  def ns "sPL_type.ml" 368 13515 13559 "sPL_type.ml" 368 13515 13624
)
"sPL_type.ml" 368 13515 13543 "sPL_type.ml" 368 13515 13555
type(
  (SPL.sPL_type * string list) option
)
type(
  SPL.sPL_type * string list
)
"sPL_type.ml" 368 13515 13566 "sPL_type.ml" 368 13515 13568
type(
  C.sPL_type
)
ident(
  int_ref t2 "sPL_type.ml" 368 13515 13549 "sPL_type.ml" 368 13515 13551
)
"sPL_type.ml" 368 13515 13569 "sPL_type.ml" 368 13515 13571
type(
  Debug.Basic.id list
)
ident(
  int_ref ns "sPL_type.ml" 368 13515 13552 "sPL_type.ml" 368 13515 13554
)
"sPL_type.ml" 368 13515 13580 "sPL_type.ml" 368 13515 13581
type(
  C.sPL_expr
)
ident(
  int_ref f "sPL_type.ml" 365 13362 13390 "sPL_type.ml" 365 13362 13391
)
"sPL_type.ml" 368 13515 13582 "sPL_type.ml" 368 13515 13584
type(
  C.sPL_type
)
ident(
  int_ref t1 "sPL_type.ml" 362 13249 13272 "sPL_type.ml" 362 13249 13274
)
"sPL_type.ml" 368 13515 13585 "sPL_type.ml" 368 13515 13589
type(
  C.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 364 13306 13334 "sPL_type.ml" 364 13306 13338
)
"sPL_type.ml" 368 13515 13589 "sPL_type.ml" 368 13515 13590
type(
  C.sPL_expr list -> C.sPL_expr list -> C.sPL_expr list
)
ident(
  ext_ref Pervasives.( @ )
)
"sPL_type.ml" 368 13515 13591 "sPL_type.ml" 368 13515 13599
type(
  (Debug.Basic.id -> C.sPL_expr) -> Debug.Basic.id list -> C.sPL_expr list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 368 13515 13605 "sPL_type.ml" 368 13515 13606
type(
  Debug.Basic.id
)
ident(
  def v "sPL_type.ml" 368 13515 13610 "sPL_type.ml" 368 13515 13617
)
"sPL_type.ml" 368 13515 13616 "sPL_type.ml" 368 13515 13617
type(
  Debug.Basic.id
)
ident(
  int_ref v "sPL_type.ml" 368 13515 13605 "sPL_type.ml" 368 13515 13606
)
"sPL_type.ml" 368 13515 13610 "sPL_type.ml" 368 13515 13617
type(
  C.sPL_expr
)
"sPL_type.ml" 368 13515 13605 "sPL_type.ml" 368 13515 13617
type(
  Debug.Basic.id -> C.sPL_expr
)
"sPL_type.ml" 368 13515 13619 "sPL_type.ml" 368 13515 13621
type(
  Debug.Basic.id list
)
ident(
  int_ref ns "sPL_type.ml" 368 13515 13552 "sPL_type.ml" 368 13515 13554
)
"sPL_type.ml" 368 13515 13591 "sPL_type.ml" 368 13515 13621
call(
  stack
)
type(
  C.sPL_expr list
)
"sPL_type.ml" 368 13515 13585 "sPL_type.ml" 368 13515 13622
call(
  stack
)
type(
  C.sPL_expr list
)
"sPL_type.ml" 368 13515 13572 "sPL_type.ml" 368 13515 13623
type(
  C.sPL_expr
)
"sPL_type.ml" 368 13515 13559 "sPL_type.ml" 368 13515 13624
type(
  C.sPL_expr
)
"sPL_type.ml" 366 13403 13427 "sPL_type.ml" 368 13515 13624
type(
  C.sPL_expr
)
"sPL_type.ml" 365 13362 13386 "sPL_type.ml" 368 13515 13624
type(
  C.sPL_expr
)
"sPL_type.ml" 364 13306 13330 "sPL_type.ml" 368 13515 13624
type(
  C.sPL_expr
)
"sPL_type.ml" 370 13651 13669 "sPL_type.ml" 370 13651 13670
type(
  SPL.sPL_type option
)
"sPL_type.ml" 370 13651 13674 "sPL_type.ml" 370 13651 13682
type(
  string -> C.sPL_expr
)
ident(
  ext_ref Pervasives.failwith
)
"sPL_type.ml" 370 13651 13683 "sPL_type.ml" 370 13651 13720
type(
  string
)
"sPL_type.ml" 370 13651 13674 "sPL_type.ml" 370 13651 13720
call(
  tail
)
type(
  C.sPL_expr
)
"sPL_type.ml" 361 13222 13236 "sPL_type.ml" 370 13651 13720
type(
  C.sPL_expr
)
"sPL_type.ml" 372 13737 13750 "sPL_type.ml" 372 13737 13752
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  def ls "sPL_type.ml" 377 13961 13971 "sPL_type.ml" 382 14233 14266
)
"sPL_type.ml" 372 13737 13753 "sPL_type.ml" 372 13737 13754
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 377 13961 13971 "sPL_type.ml" 382 14233 14266
)
"sPL_type.ml" 372 13737 13755 "sPL_type.ml" 372 13737 13759
type(
  SPL.sPL_expr
)
ident(
  def body "sPL_type.ml" 377 13961 13971 "sPL_type.ml" 382 14233 14266
)
"sPL_type.ml" 372 13737 13745 "sPL_type.ml" 372 13737 13760
type(
  SPL.sPL_expr
)
"sPL_type.ml" 377 13961 13975 "sPL_type.ml" 377 13961 13978
type(
  SPL.id list
)
ident(
  def ids "sPL_type.ml" 379 14054 14064 "sPL_type.ml" 382 14233 14266
)
"sPL_type.ml" 377 13961 13981 "sPL_type.ml" 377 13961 13983
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  int_ref ls "sPL_type.ml" 372 13737 13750 "sPL_type.ml" 372 13737 13752
)
"sPL_type.ml" 377 13961 13984 "sPL_type.ml" 377 13961 13986
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list ->
  ((SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> SPL.id list) -> SPL.id list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 377 13961 13987 "sPL_type.ml" 377 13961 13995
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr -> SPL.id) ->
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> SPL.id list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 378 13996 14015 "sPL_type.ml" 378 13996 14016
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
ident(
  def l "sPL_type.ml" 378 13996 14020 "sPL_type.ml" 378 13996 14049
)
"sPL_type.ml" 378 13996 14026 "sPL_type.ml" 378 13996 14027
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
ident(
  int_ref l "sPL_type.ml" 378 13996 14015 "sPL_type.ml" 378 13996 14016
)
"sPL_type.ml" 378 13996 14035 "sPL_type.ml" 378 13996 14036
type(
  SPL.sPL_type
)
ident(
  def t "sPL_type.ml" 378 13996 14047 "sPL_type.ml" 378 13996 14049
)
"sPL_type.ml" 378 13996 14037 "sPL_type.ml" 378 13996 14039
type(
  SPL.id
)
ident(
  def id "sPL_type.ml" 378 13996 14047 "sPL_type.ml" 378 13996 14049
)
"sPL_type.ml" 378 13996 14040 "sPL_type.ml" 378 13996 14043
type(
  SPL.sPL_expr
)
ident(
  def exp "sPL_type.ml" 378 13996 14047 "sPL_type.ml" 378 13996 14049
)
"sPL_type.ml" 378 13996 14035 "sPL_type.ml" 378 13996 14043
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 378 13996 14047 "sPL_type.ml" 378 13996 14049
type(
  SPL.id
)
ident(
  int_ref id "sPL_type.ml" 378 13996 14037 "sPL_type.ml" 378 13996 14039
)
"sPL_type.ml" 378 13996 14020 "sPL_type.ml" 378 13996 14049
type(
  SPL.id
)
"sPL_type.ml" 378 13996 14015 "sPL_type.ml" 378 13996 14049
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr -> SPL.id
)
"sPL_type.ml" 377 13961 13987 "sPL_type.ml" 378 13996 14050
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> SPL.id list
)
"sPL_type.ml" 377 13961 13981 "sPL_type.ml" 378 13996 14050
call(
  stack
)
type(
  SPL.id list
)
"sPL_type.ml" 379 14054 14068 "sPL_type.ml" 379 14054 14072
type(
  C.sPL_expr list
)
ident(
  def args "sPL_type.ml" 380 14138 14148 "sPL_type.ml" 382 14233 14266
)
"sPL_type.ml" 379 14054 14075 "sPL_type.ml" 379 14054 14077
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  int_ref ls "sPL_type.ml" 372 13737 13750 "sPL_type.ml" 372 13737 13752
)
"sPL_type.ml" 379 14054 14078 "sPL_type.ml" 379 14054 14080
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list ->
  ((SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> C.sPL_expr list) ->
  C.sPL_expr list
)
ident(
  ext_ref Pervasives.( |> )
)
"sPL_type.ml" 379 14054 14081 "sPL_type.ml" 379 14054 14089
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr -> C.sPL_expr) ->
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> C.sPL_expr list
)
ident(
  ext_ref List.map
)
"sPL_type.ml" 379 14054 14095 "sPL_type.ml" 379 14054 14096
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
ident(
  def l "sPL_type.ml" 379 14054 14100 "sPL_type.ml" 379 14054 14133
)
"sPL_type.ml" 379 14054 14106 "sPL_type.ml" 379 14054 14107
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
ident(
  int_ref l "sPL_type.ml" 379 14054 14095 "sPL_type.ml" 379 14054 14096
)
"sPL_type.ml" 379 14054 14115 "sPL_type.ml" 379 14054 14116
type(
  SPL.sPL_type
)
"sPL_type.ml" 379 14054 14117 "sPL_type.ml" 379 14054 14118
type(
  SPL.id
)
"sPL_type.ml" 379 14054 14119 "sPL_type.ml" 379 14054 14122
type(
  SPL.sPL_expr
)
ident(
  def exp "sPL_type.ml" 379 14054 14126 "sPL_type.ml" 379 14054 14133
)
"sPL_type.ml" 379 14054 14115 "sPL_type.ml" 379 14054 14122
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr
)
"sPL_type.ml" 379 14054 14126 "sPL_type.ml" 379 14054 14129
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 379 14054 14130 "sPL_type.ml" 379 14054 14133
type(
  SPL.sPL_expr
)
ident(
  int_ref exp "sPL_type.ml" 379 14054 14119 "sPL_type.ml" 379 14054 14122
)
"sPL_type.ml" 379 14054 14126 "sPL_type.ml" 379 14054 14133
call(
  tail
)
type(
  C.sPL_expr
)
"sPL_type.ml" 379 14054 14100 "sPL_type.ml" 379 14054 14133
type(
  C.sPL_expr
)
"sPL_type.ml" 379 14054 14095 "sPL_type.ml" 379 14054 14133
type(
  SPL.sPL_type * SPL.id * SPL.sPL_expr -> C.sPL_expr
)
"sPL_type.ml" 379 14054 14081 "sPL_type.ml" 379 14054 14134
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> C.sPL_expr list
)
"sPL_type.ml" 379 14054 14075 "sPL_type.ml" 379 14054 14134
call(
  stack
)
type(
  C.sPL_expr list
)
"sPL_type.ml" 380 14138 14152 "sPL_type.ml" 380 14138 14157
type(
  SPL.sPL_type
)
ident(
  def ftype "sPL_type.ml" 381 14179 14189 "sPL_type.ml" 382 14233 14266
)
"sPL_type.ml" 380 14138 14160 "sPL_type.ml" 380 14138 14170
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list -> SPL.sPL_type -> SPL.sPL_type
)
ident(
  int_ref build_type "sPL_type.ml" 323 12164 12172 "sPL_type.ml" 323 12164 12182
)
"sPL_type.ml" 380 14138 14171 "sPL_type.ml" 380 14138 14173
type(
  (SPL.sPL_type * SPL.id * SPL.sPL_expr) list
)
ident(
  int_ref ls "sPL_type.ml" 372 13737 13750 "sPL_type.ml" 372 13737 13752
)
"sPL_type.ml" 380 14138 14174 "sPL_type.ml" 380 14138 14175
type(
  SPL.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 372 13737 13753 "sPL_type.ml" 372 13737 13754
)
"sPL_type.ml" 380 14138 14160 "sPL_type.ml" 380 14138 14175
call(
  stack
)
type(
  SPL.sPL_type
)
"sPL_type.ml" 381 14179 14193 "sPL_type.ml" 381 14179 14197
type(
  C.sPL_expr
)
ident(
  def func "sPL_type.ml" 382 14233 14243 "sPL_type.ml" 382 14233 14266
)
"sPL_type.ml" 381 14179 14208 "sPL_type.ml" 381 14179 14213
type(
  C.sPL_type
)
ident(
  int_ref ftype "sPL_type.ml" 380 14138 14152 "sPL_type.ml" 380 14138 14157
)
"sPL_type.ml" 381 14179 14215 "sPL_type.ml" 381 14179 14218
type(
  Debug.Basic.id list
)
ident(
  int_ref ids "sPL_type.ml" 377 13961 13975 "sPL_type.ml" 377 13961 13978
)
"sPL_type.ml" 381 14179 14220 "sPL_type.ml" 381 14179 14223
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 381 14179 14224 "sPL_type.ml" 381 14179 14228
type(
  SPL.sPL_expr
)
ident(
  int_ref body "sPL_type.ml" 372 13737 13755 "sPL_type.ml" 372 13737 13759
)
"sPL_type.ml" 381 14179 14220 "sPL_type.ml" 381 14179 14228
call(
  stack
)
type(
  C.sPL_expr
)
"sPL_type.ml" 381 14179 14200 "sPL_type.ml" 381 14179 14229
type(
  C.sPL_expr
)
"sPL_type.ml" 382 14233 14252 "sPL_type.ml" 382 14233 14256
type(
  C.sPL_expr
)
ident(
  int_ref func "sPL_type.ml" 381 14179 14193 "sPL_type.ml" 381 14179 14197
)
"sPL_type.ml" 382 14233 14258 "sPL_type.ml" 382 14233 14259
type(
  C.sPL_type
)
ident(
  int_ref t "sPL_type.ml" 372 13737 13753 "sPL_type.ml" 372 13737 13754
)
"sPL_type.ml" 382 14233 14261 "sPL_type.ml" 382 14233 14265
type(
  C.sPL_expr list
)
ident(
  int_ref args "sPL_type.ml" 379 14054 14068 "sPL_type.ml" 379 14054 14072
)
"sPL_type.ml" 382 14233 14243 "sPL_type.ml" 382 14233 14266
type(
  C.sPL_expr
)
"sPL_type.ml" 381 14179 14189 "sPL_type.ml" 382 14233 14266
type(
  C.sPL_expr
)
"sPL_type.ml" 380 14138 14148 "sPL_type.ml" 382 14233 14266
type(
  C.sPL_expr
)
"sPL_type.ml" 379 14054 14064 "sPL_type.ml" 382 14233 14266
type(
  C.sPL_expr
)
"sPL_type.ml" 377 13961 13971 "sPL_type.ml" 382 14233 14266
type(
  C.sPL_expr
)
"sPL_type.ml" 337 12445 12449 "sPL_type.ml" 383 14267 14278
type(
  C.sPL_expr
)
"sPL_type.ml" 336 12427 12441 "sPL_type.ml" 383 14267 14278
type(
  SPL.sPL_expr -> C.sPL_expr
)
"sPL_type.ml" 384 14279 14284 "sPL_type.ml" 384 14279 14287
type(
  SPL.sPL_expr -> C.sPL_expr
)
ident(
  int_ref aux "sPL_type.ml" 336 12427 12437 "sPL_type.ml" 336 12427 12440
)
"sPL_type.ml" 384 14279 14288 "sPL_type.ml" 384 14279 14289
type(
  SPL.sPL_expr
)
ident(
  int_ref e "sPL_type.ml" 335 12384 12399 "sPL_type.ml" 335 12384 12400
)
"sPL_type.ml" 384 14279 14284 "sPL_type.ml" 384 14279 14289
call(
  tail
)
type(
  C.sPL_expr
)
"sPL_type.ml" 336 12427 12429 "sPL_type.ml" 384 14279 14289
type(
  C.sPL_expr
)
type(
  C.sPL_expr
)
"sPL_type.ml" 335 12384 12398 "sPL_type.ml" 384 14279 14289
type(
  SPL.sPL_expr -> C.sPL_expr
)
"sPL_type.ml" 387 14316 14320 "sPL_type.ml" 387 14316 14330
type(
  string -> string * SPL.sPL_expr
)
ident(
  def parse_file "sPL_type.ml" 392 14470 14470 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 387 14316 14332 "sPL_type.ml" 387 14316 14340
type(
  string
)
ident(
  def filename "sPL_type.ml" 387 14316 14349 "sPL_type.ml" 388 14373 14405
)
"sPL_type.ml" 388 14373 14375 "sPL_type.ml" 388 14373 14396
type(
  string -> string * SPL.sPL_expr
)
ident(
  ext_ref SPL_parser.parse_file
)
"sPL_type.ml" 388 14373 14397 "sPL_type.ml" 388 14373 14405
type(
  string
)
ident(
  int_ref filename "sPL_type.ml" 387 14316 14332 "sPL_type.ml" 387 14316 14340
)
"sPL_type.ml" 388 14373 14375 "sPL_type.ml" 388 14373 14405
call(
  tail
)
type(
  string * SPL.sPL_expr
)
type(
  string * SPL.sPL_expr
)
"sPL_type.ml" 387 14316 14331 "sPL_type.ml" 388 14373 14405
type(
  string -> string * SPL.sPL_expr
)
"sPL_type.ml" 392 14470 14474 "sPL_type.ml" 392 14470 14479
type(
  string
)
ident(
  def usage "sPL_type.ml" 393 14523 14523 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 392 14470 14482 "sPL_type.ml" 392 14470 14491
type(
  string
)
"sPL_type.ml" 392 14470 14492 "sPL_type.ml" 392 14470 14493
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"sPL_type.ml" 392 14470 14494 "sPL_type.ml" 392 14470 14502
type(
  string array
)
ident(
  ext_ref Sys.argv
)
"sPL_type.ml" 392 14470 14504 "sPL_type.ml" 392 14470 14505
type(
  int
)
"sPL_type.ml" 392 14470 14494 "sPL_type.ml" 392 14470 14506
type(
  string
)
type(
  string array -> int -> string
)
ident(
  ext_ref Array.get
)
"sPL_type.ml" 392 14470 14507 "sPL_type.ml" 392 14470 14508
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"sPL_type.ml" 392 14470 14509 "sPL_type.ml" 392 14470 14522
type(
  string
)
"sPL_type.ml" 392 14470 14494 "sPL_type.ml" 392 14470 14522
call(
  stack
)
type(
  string
)
"sPL_type.ml" 392 14470 14482 "sPL_type.ml" 392 14470 14522
call(
  stack
)
type(
  string
)
"sPL_type.ml" 393 14523 14527 "sPL_type.ml" 393 14523 14531
type(
  string ref
)
ident(
  def file "sPL_type.ml" 393 14523 14540 "sPL_type.ml" 1 0 -1
)
"sPL_type.ml" 393 14523 14534 "sPL_type.ml" 393 14523 14537
type(
  string -> string ref
)
ident(
  ext_ref Pervasives.ref
)
"sPL_type.ml" 393 14523 14538 "sPL_type.ml" 393 14523 14540
type(
  string
)
"sPL_type.ml" 393 14523 14534 "sPL_type.ml" 393 14523 14540
type(
  string ref
)
